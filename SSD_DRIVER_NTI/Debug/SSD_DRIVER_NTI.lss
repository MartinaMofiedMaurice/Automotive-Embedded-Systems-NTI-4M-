
SSD_DRIVER_NTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002e34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00002e34  00002ec8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  0080007e  0080007e  00002ee6  2**0
                  ALLOC
  3 .stab         000023ac  00000000  00000000  00002ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ad3  00000000  00000000  00005294  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00005d67  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00005ea7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00006017  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00007c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00008b4b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000098f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00009a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00009ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000a4b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e3       	ldi	r30, 0x34	; 52
      68:	fe e2       	ldi	r31, 0x2E	; 46
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 37       	cpi	r26, 0x7E	; 126
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	ae e7       	ldi	r26, 0x7E	; 126
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 38       	cpi	r26, 0x81	; 129
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ed 11 	call	0x23da	; 0x23da <main>
      8a:	0c 94 18 17 	jmp	0x2e30	; 0x2e30 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 e1 16 	jmp	0x2dc2	; 0x2dc2 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 fd 16 	jmp	0x2dfa	; 0x2dfa <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 e1 16 	jmp	0x2dc2	; 0x2dc2 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 fd 16 	jmp	0x2dfa	; 0x2dfa <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 ed 16 	jmp	0x2dda	; 0x2dda <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 f1 16 	jmp	0x2de2	; 0x2de2 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 0d 17 	jmp	0x2e1a	; 0x2e1a <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <MDIO_voidInit>:
#include "DIO_configuration.h"
#include "DIO_private.h"


//Initializing ports
void MDIO_voidInit(void){
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	DDRA_REG= CONC_BIT(PORTA_PIN7_DIRECTION,PORTA_PIN6_DIRECTION,PORTA_PIN5_DIRECTION,
     b4e:	ea e3       	ldi	r30, 0x3A	; 58
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	8f ef       	ldi	r24, 0xFF	; 255
     b54:	80 83       	st	Z, r24
			PORTA_PIN4_DIRECTION,PORTA_PIN3_DIRECTION,PORTA_PIN2_DIRECTION,PORTA_PIN1_DIRECTION,PORTA_PIN0_DIRECTION);

	DDRB_REG= CONC_BIT(PORTB_PIN7_DIRECTION,PORTB_PIN6_DIRECTION,PORTB_PIN5_DIRECTION,
     b56:	e7 e3       	ldi	r30, 0x37	; 55
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	8f ef       	ldi	r24, 0xFF	; 255
     b5c:	80 83       	st	Z, r24
				PORTB_PIN4_DIRECTION,PORTB_PIN3_DIRECTION,PORTB_PIN2_DIRECTION,PORTB_PIN1_DIRECTION,PORTB_PIN0_DIRECTION);

	DDRC_REG= CONC_BIT(PORTC_PIN7_DIRECTION,PORTC_PIN6_DIRECTION,PORTC_PIN5_DIRECTION,
     b5e:	e4 e3       	ldi	r30, 0x34	; 52
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	8f ef       	ldi	r24, 0xFF	; 255
     b64:	80 83       	st	Z, r24
				PORTC_PIN4_DIRECTION,PORTC_PIN3_DIRECTION,PORTC_PIN2_DIRECTION,PORTC_PIN1_DIRECTION,PORTC_PIN0_DIRECTION);

	DDRD_REG= CONC_BIT(PORTD_PIN7_DIRECTION,PORTD_PIN6_DIRECTION,PORTD_PIN5_DIRECTION,
     b66:	e1 e3       	ldi	r30, 0x31	; 49
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	8f ef       	ldi	r24, 0xFF	; 255
     b6c:	80 83       	st	Z, r24
				PORTD_PIN4_DIRECTION,PORTD_PIN3_DIRECTION,PORTD_PIN2_DIRECTION,PORTD_PIN1_DIRECTION,PORTD_PIN0_DIRECTION);

	//To give a value for the port wether it was low or high for beginning
	PORTA_REG= CONC_BIT(PORTA_PIN7_VALUE,PORTA_PIN6_VALUE,PORTA_PIN5_VALUE,
     b6e:	eb e3       	ldi	r30, 0x3B	; 59
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	10 82       	st	Z, r1
			PORTA_PIN4_VALUE,PORTA_PIN3_VALUE,PORTA_PIN2_VALUE,PORTA_PIN1_VALUE,PORTA_PIN0_VALUE);

	PORTB_REG= CONC_BIT(PORTB_PIN7_VALUE,PORTB_PIN6_VALUE,PORTB_PIN5_VALUE,
     b74:	e8 e3       	ldi	r30, 0x38	; 56
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	10 82       	st	Z, r1
			PORTB_PIN4_VALUE,PORTB_PIN3_VALUE,PORTB_PIN2_VALUE,PORTB_PIN1_VALUE,PORTB_PIN0_VALUE);

	PORTC_REG= CONC_BIT(PORTC_PIN7_VALUE,PORTC_PIN6_VALUE,PORTC_PIN5_VALUE,
     b7a:	e5 e3       	ldi	r30, 0x35	; 53
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	10 82       	st	Z, r1
			PORTC_PIN4_VALUE,PORTC_PIN3_VALUE,PORTC_PIN2_VALUE,PORTC_PIN1_VALUE,PORTC_PIN0_VALUE);

	PORTD_REG= CONC_BIT(PORTD_PIN7_VALUE,PORTD_PIN6_VALUE,PORTD_PIN5_VALUE,
     b80:	e2 e3       	ldi	r30, 0x32	; 50
     b82:	f0 e0       	ldi	r31, 0x00	; 0
     b84:	10 82       	st	Z, r1
			PORTD_PIN4_VALUE,PORTD_PIN3_VALUE,PORTD_PIN2_VALUE,PORTD_PIN1_VALUE,PORTD_PIN0_VALUE);
}
     b86:	cf 91       	pop	r28
     b88:	df 91       	pop	r29
     b8a:	08 95       	ret

00000b8c <MDIO_voidSetPortDirection>:
//To Set PORT Valuetakes PORT NAME and PORT DIRECTION
//PORT ID:PORTA,BCD
//PIN ID:0/7

void MDIO_voidSetPortDirection(u8 A_u8PortId,u8 A_u8Direction)
{
     b8c:	df 93       	push	r29
     b8e:	cf 93       	push	r28
     b90:	00 d0       	rcall	.+0      	; 0xb92 <MDIO_voidSetPortDirection+0x6>
     b92:	00 d0       	rcall	.+0      	; 0xb94 <MDIO_voidSetPortDirection+0x8>
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	89 83       	std	Y+1, r24	; 0x01
     b9a:	6a 83       	std	Y+2, r22	; 0x02
	switch (A_u8PortId) {
     b9c:	89 81       	ldd	r24, Y+1	; 0x01
     b9e:	28 2f       	mov	r18, r24
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	3c 83       	std	Y+4, r19	; 0x04
     ba4:	2b 83       	std	Y+3, r18	; 0x03
     ba6:	8b 81       	ldd	r24, Y+3	; 0x03
     ba8:	9c 81       	ldd	r25, Y+4	; 0x04
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	91 05       	cpc	r25, r1
     bae:	d1 f0       	breq	.+52     	; 0xbe4 <MDIO_voidSetPortDirection+0x58>
     bb0:	2b 81       	ldd	r18, Y+3	; 0x03
     bb2:	3c 81       	ldd	r19, Y+4	; 0x04
     bb4:	22 30       	cpi	r18, 0x02	; 2
     bb6:	31 05       	cpc	r19, r1
     bb8:	2c f4       	brge	.+10     	; 0xbc4 <MDIO_voidSetPortDirection+0x38>
     bba:	8b 81       	ldd	r24, Y+3	; 0x03
     bbc:	9c 81       	ldd	r25, Y+4	; 0x04
     bbe:	00 97       	sbiw	r24, 0x00	; 0
     bc0:	61 f0       	breq	.+24     	; 0xbda <MDIO_voidSetPortDirection+0x4e>
     bc2:	1e c0       	rjmp	.+60     	; 0xc00 <MDIO_voidSetPortDirection+0x74>
     bc4:	2b 81       	ldd	r18, Y+3	; 0x03
     bc6:	3c 81       	ldd	r19, Y+4	; 0x04
     bc8:	22 30       	cpi	r18, 0x02	; 2
     bca:	31 05       	cpc	r19, r1
     bcc:	81 f0       	breq	.+32     	; 0xbee <MDIO_voidSetPortDirection+0x62>
     bce:	8b 81       	ldd	r24, Y+3	; 0x03
     bd0:	9c 81       	ldd	r25, Y+4	; 0x04
     bd2:	83 30       	cpi	r24, 0x03	; 3
     bd4:	91 05       	cpc	r25, r1
     bd6:	81 f0       	breq	.+32     	; 0xbf8 <MDIO_voidSetPortDirection+0x6c>
     bd8:	13 c0       	rjmp	.+38     	; 0xc00 <MDIO_voidSetPortDirection+0x74>
		case PORTA:
			DDRA_REG=A_u8Direction;
     bda:	ea e3       	ldi	r30, 0x3A	; 58
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	8a 81       	ldd	r24, Y+2	; 0x02
     be0:	80 83       	st	Z, r24
     be2:	0e c0       	rjmp	.+28     	; 0xc00 <MDIO_voidSetPortDirection+0x74>
			break;
		case PORTB:
			DDRB_REG=A_u8Direction;
     be4:	e7 e3       	ldi	r30, 0x37	; 55
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	8a 81       	ldd	r24, Y+2	; 0x02
     bea:	80 83       	st	Z, r24
     bec:	09 c0       	rjmp	.+18     	; 0xc00 <MDIO_voidSetPortDirection+0x74>
			break;
		case PORTC:
			DDRC_REG=A_u8Direction;
     bee:	e4 e3       	ldi	r30, 0x34	; 52
     bf0:	f0 e0       	ldi	r31, 0x00	; 0
     bf2:	8a 81       	ldd	r24, Y+2	; 0x02
     bf4:	80 83       	st	Z, r24
     bf6:	04 c0       	rjmp	.+8      	; 0xc00 <MDIO_voidSetPortDirection+0x74>
			break;
		case PORTD:
			DDRD_REG=A_u8Direction;
     bf8:	e1 e3       	ldi	r30, 0x31	; 49
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	8a 81       	ldd	r24, Y+2	; 0x02
     bfe:	80 83       	st	Z, r24
			break;
		default:
			break;
	}
}
     c00:	0f 90       	pop	r0
     c02:	0f 90       	pop	r0
     c04:	0f 90       	pop	r0
     c06:	0f 90       	pop	r0
     c08:	cf 91       	pop	r28
     c0a:	df 91       	pop	r29
     c0c:	08 95       	ret

00000c0e <MDIO_voidSetPortValue>:

//To Set PORT Value takes PORT NAME and PORT VALUE
//PORT ID:PORTA,BCD
//PIN ID:0/7
void MDIO_voidSetPortValue(u8 A_u8PortId,u8 A_u8Value)
{
     c0e:	df 93       	push	r29
     c10:	cf 93       	push	r28
     c12:	00 d0       	rcall	.+0      	; 0xc14 <MDIO_voidSetPortValue+0x6>
     c14:	00 d0       	rcall	.+0      	; 0xc16 <MDIO_voidSetPortValue+0x8>
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	89 83       	std	Y+1, r24	; 0x01
     c1c:	6a 83       	std	Y+2, r22	; 0x02
	switch (A_u8PortId) {
     c1e:	89 81       	ldd	r24, Y+1	; 0x01
     c20:	28 2f       	mov	r18, r24
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	3c 83       	std	Y+4, r19	; 0x04
     c26:	2b 83       	std	Y+3, r18	; 0x03
     c28:	8b 81       	ldd	r24, Y+3	; 0x03
     c2a:	9c 81       	ldd	r25, Y+4	; 0x04
     c2c:	81 30       	cpi	r24, 0x01	; 1
     c2e:	91 05       	cpc	r25, r1
     c30:	d1 f0       	breq	.+52     	; 0xc66 <MDIO_voidSetPortValue+0x58>
     c32:	2b 81       	ldd	r18, Y+3	; 0x03
     c34:	3c 81       	ldd	r19, Y+4	; 0x04
     c36:	22 30       	cpi	r18, 0x02	; 2
     c38:	31 05       	cpc	r19, r1
     c3a:	2c f4       	brge	.+10     	; 0xc46 <MDIO_voidSetPortValue+0x38>
     c3c:	8b 81       	ldd	r24, Y+3	; 0x03
     c3e:	9c 81       	ldd	r25, Y+4	; 0x04
     c40:	00 97       	sbiw	r24, 0x00	; 0
     c42:	61 f0       	breq	.+24     	; 0xc5c <MDIO_voidSetPortValue+0x4e>
     c44:	1e c0       	rjmp	.+60     	; 0xc82 <MDIO_voidSetPortValue+0x74>
     c46:	2b 81       	ldd	r18, Y+3	; 0x03
     c48:	3c 81       	ldd	r19, Y+4	; 0x04
     c4a:	22 30       	cpi	r18, 0x02	; 2
     c4c:	31 05       	cpc	r19, r1
     c4e:	81 f0       	breq	.+32     	; 0xc70 <MDIO_voidSetPortValue+0x62>
     c50:	8b 81       	ldd	r24, Y+3	; 0x03
     c52:	9c 81       	ldd	r25, Y+4	; 0x04
     c54:	83 30       	cpi	r24, 0x03	; 3
     c56:	91 05       	cpc	r25, r1
     c58:	81 f0       	breq	.+32     	; 0xc7a <MDIO_voidSetPortValue+0x6c>
     c5a:	13 c0       	rjmp	.+38     	; 0xc82 <MDIO_voidSetPortValue+0x74>
		case PORTA:
			PORTA_REG=A_u8Value;
     c5c:	eb e3       	ldi	r30, 0x3B	; 59
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	8a 81       	ldd	r24, Y+2	; 0x02
     c62:	80 83       	st	Z, r24
     c64:	0e c0       	rjmp	.+28     	; 0xc82 <MDIO_voidSetPortValue+0x74>
			break;
		case PORTB:
			PORTB_REG=A_u8Value;
     c66:	e8 e3       	ldi	r30, 0x38	; 56
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	8a 81       	ldd	r24, Y+2	; 0x02
     c6c:	80 83       	st	Z, r24
     c6e:	09 c0       	rjmp	.+18     	; 0xc82 <MDIO_voidSetPortValue+0x74>
			break;
		case PORTC:
			PORTC_REG=A_u8Value;
     c70:	e5 e3       	ldi	r30, 0x35	; 53
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	8a 81       	ldd	r24, Y+2	; 0x02
     c76:	80 83       	st	Z, r24
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <MDIO_voidSetPortValue+0x74>
			break;
		case PORTD:
			PORTD_REG=A_u8Value;
     c7a:	e2 e3       	ldi	r30, 0x32	; 50
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	8a 81       	ldd	r24, Y+2	; 0x02
     c80:	80 83       	st	Z, r24
			break;
		default:
			break;
	}
}
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	0f 90       	pop	r0
     c88:	0f 90       	pop	r0
     c8a:	cf 91       	pop	r28
     c8c:	df 91       	pop	r29
     c8e:	08 95       	ret

00000c90 <MDIO_voidSetPinDirection>:
//To Set pin Dirtection either OUTPUT or INPUT takes PORT NAME ,PIN NUMBER and PIN DIRECTION
//PORT ID:PORTA,BCD
//PIN ID:0/7
//PIN_DIRECTION:OUTPUT,INPUT
void MDIO_voidSetPinDirection(u8 A_u8Port,u8 A_u8PinId,u8 A_u8Direction)
{
     c90:	df 93       	push	r29
     c92:	cf 93       	push	r28
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
     c98:	2d 97       	sbiw	r28, 0x0d	; 13
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	de bf       	out	0x3e, r29	; 62
     ca0:	0f be       	out	0x3f, r0	; 63
     ca2:	cd bf       	out	0x3d, r28	; 61
     ca4:	89 83       	std	Y+1, r24	; 0x01
     ca6:	6a 83       	std	Y+2, r22	; 0x02
     ca8:	4b 83       	std	Y+3, r20	; 0x03
	switch (A_u8Port) {
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	28 2f       	mov	r18, r24
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	3d 87       	std	Y+13, r19	; 0x0d
     cb2:	2c 87       	std	Y+12, r18	; 0x0c
     cb4:	8c 85       	ldd	r24, Y+12	; 0x0c
     cb6:	9d 85       	ldd	r25, Y+13	; 0x0d
     cb8:	81 30       	cpi	r24, 0x01	; 1
     cba:	91 05       	cpc	r25, r1
     cbc:	09 f4       	brne	.+2      	; 0xcc0 <MDIO_voidSetPinDirection+0x30>
     cbe:	4f c0       	rjmp	.+158    	; 0xd5e <MDIO_voidSetPinDirection+0xce>
     cc0:	2c 85       	ldd	r18, Y+12	; 0x0c
     cc2:	3d 85       	ldd	r19, Y+13	; 0x0d
     cc4:	22 30       	cpi	r18, 0x02	; 2
     cc6:	31 05       	cpc	r19, r1
     cc8:	2c f4       	brge	.+10     	; 0xcd4 <MDIO_voidSetPinDirection+0x44>
     cca:	8c 85       	ldd	r24, Y+12	; 0x0c
     ccc:	9d 85       	ldd	r25, Y+13	; 0x0d
     cce:	00 97       	sbiw	r24, 0x00	; 0
     cd0:	71 f0       	breq	.+28     	; 0xcee <MDIO_voidSetPinDirection+0x5e>
     cd2:	eb c0       	rjmp	.+470    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
     cd4:	2c 85       	ldd	r18, Y+12	; 0x0c
     cd6:	3d 85       	ldd	r19, Y+13	; 0x0d
     cd8:	22 30       	cpi	r18, 0x02	; 2
     cda:	31 05       	cpc	r19, r1
     cdc:	09 f4       	brne	.+2      	; 0xce0 <MDIO_voidSetPinDirection+0x50>
     cde:	77 c0       	rjmp	.+238    	; 0xdce <MDIO_voidSetPinDirection+0x13e>
     ce0:	8c 85       	ldd	r24, Y+12	; 0x0c
     ce2:	9d 85       	ldd	r25, Y+13	; 0x0d
     ce4:	83 30       	cpi	r24, 0x03	; 3
     ce6:	91 05       	cpc	r25, r1
     ce8:	09 f4       	brne	.+2      	; 0xcec <MDIO_voidSetPinDirection+0x5c>
     cea:	a9 c0       	rjmp	.+338    	; 0xe3e <MDIO_voidSetPinDirection+0x1ae>
     cec:	de c0       	rjmp	.+444    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
		case PORTA:
			switch (A_u8Direction) {
     cee:	8b 81       	ldd	r24, Y+3	; 0x03
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	3b 87       	std	Y+11, r19	; 0x0b
     cf6:	2a 87       	std	Y+10, r18	; 0x0a
     cf8:	8a 85       	ldd	r24, Y+10	; 0x0a
     cfa:	9b 85       	ldd	r25, Y+11	; 0x0b
     cfc:	00 97       	sbiw	r24, 0x00	; 0
     cfe:	d1 f0       	breq	.+52     	; 0xd34 <MDIO_voidSetPinDirection+0xa4>
     d00:	2a 85       	ldd	r18, Y+10	; 0x0a
     d02:	3b 85       	ldd	r19, Y+11	; 0x0b
     d04:	21 30       	cpi	r18, 0x01	; 1
     d06:	31 05       	cpc	r19, r1
     d08:	09 f0       	breq	.+2      	; 0xd0c <MDIO_voidSetPinDirection+0x7c>
     d0a:	cf c0       	rjmp	.+414    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
			case PIN_OUTPUT:
				SET_BIT(DDRA_REG,A_u8PinId);
     d0c:	aa e3       	ldi	r26, 0x3A	; 58
     d0e:	b0 e0       	ldi	r27, 0x00	; 0
     d10:	ea e3       	ldi	r30, 0x3A	; 58
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	80 81       	ld	r24, Z
     d16:	48 2f       	mov	r20, r24
     d18:	8a 81       	ldd	r24, Y+2	; 0x02
     d1a:	28 2f       	mov	r18, r24
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	02 2e       	mov	r0, r18
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <MDIO_voidSetPinDirection+0x9a>
     d26:	88 0f       	add	r24, r24
     d28:	99 1f       	adc	r25, r25
     d2a:	0a 94       	dec	r0
     d2c:	e2 f7       	brpl	.-8      	; 0xd26 <MDIO_voidSetPinDirection+0x96>
     d2e:	84 2b       	or	r24, r20
     d30:	8c 93       	st	X, r24
     d32:	bb c0       	rjmp	.+374    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
				break;
			case PIN_INPUT:
				CLR_BIT(DDRA_REG,A_u8PinId);
     d34:	aa e3       	ldi	r26, 0x3A	; 58
     d36:	b0 e0       	ldi	r27, 0x00	; 0
     d38:	ea e3       	ldi	r30, 0x3A	; 58
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	80 81       	ld	r24, Z
     d3e:	48 2f       	mov	r20, r24
     d40:	8a 81       	ldd	r24, Y+2	; 0x02
     d42:	28 2f       	mov	r18, r24
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	02 2e       	mov	r0, r18
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <MDIO_voidSetPinDirection+0xc2>
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	0a 94       	dec	r0
     d54:	e2 f7       	brpl	.-8      	; 0xd4e <MDIO_voidSetPinDirection+0xbe>
     d56:	80 95       	com	r24
     d58:	84 23       	and	r24, r20
     d5a:	8c 93       	st	X, r24
     d5c:	a6 c0       	rjmp	.+332    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
				break;
		}

			break;
		case PORTB:
				switch (A_u8Direction) {
     d5e:	8b 81       	ldd	r24, Y+3	; 0x03
     d60:	28 2f       	mov	r18, r24
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	39 87       	std	Y+9, r19	; 0x09
     d66:	28 87       	std	Y+8, r18	; 0x08
     d68:	88 85       	ldd	r24, Y+8	; 0x08
     d6a:	99 85       	ldd	r25, Y+9	; 0x09
     d6c:	00 97       	sbiw	r24, 0x00	; 0
     d6e:	d1 f0       	breq	.+52     	; 0xda4 <MDIO_voidSetPinDirection+0x114>
     d70:	28 85       	ldd	r18, Y+8	; 0x08
     d72:	39 85       	ldd	r19, Y+9	; 0x09
     d74:	21 30       	cpi	r18, 0x01	; 1
     d76:	31 05       	cpc	r19, r1
     d78:	09 f0       	breq	.+2      	; 0xd7c <MDIO_voidSetPinDirection+0xec>
     d7a:	97 c0       	rjmp	.+302    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
				case PIN_OUTPUT:
					SET_BIT(DDRB_REG,A_u8PinId);
     d7c:	a7 e3       	ldi	r26, 0x37	; 55
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	e7 e3       	ldi	r30, 0x37	; 55
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	80 81       	ld	r24, Z
     d86:	48 2f       	mov	r20, r24
     d88:	8a 81       	ldd	r24, Y+2	; 0x02
     d8a:	28 2f       	mov	r18, r24
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	02 2e       	mov	r0, r18
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <MDIO_voidSetPinDirection+0x10a>
     d96:	88 0f       	add	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	0a 94       	dec	r0
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <MDIO_voidSetPinDirection+0x106>
     d9e:	84 2b       	or	r24, r20
     da0:	8c 93       	st	X, r24
     da2:	83 c0       	rjmp	.+262    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
					break;
				case PIN_INPUT:
					CLR_BIT(DDRB_REG,A_u8PinId);
     da4:	a7 e3       	ldi	r26, 0x37	; 55
     da6:	b0 e0       	ldi	r27, 0x00	; 0
     da8:	e7 e3       	ldi	r30, 0x37	; 55
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	80 81       	ld	r24, Z
     dae:	48 2f       	mov	r20, r24
     db0:	8a 81       	ldd	r24, Y+2	; 0x02
     db2:	28 2f       	mov	r18, r24
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	02 2e       	mov	r0, r18
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <MDIO_voidSetPinDirection+0x132>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	0a 94       	dec	r0
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <MDIO_voidSetPinDirection+0x12e>
     dc6:	80 95       	com	r24
     dc8:	84 23       	and	r24, r20
     dca:	8c 93       	st	X, r24
     dcc:	6e c0       	rjmp	.+220    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
					break;
			}

				break;
		case PORTC:
					switch (A_u8Direction) {
     dce:	8b 81       	ldd	r24, Y+3	; 0x03
     dd0:	28 2f       	mov	r18, r24
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	3f 83       	std	Y+7, r19	; 0x07
     dd6:	2e 83       	std	Y+6, r18	; 0x06
     dd8:	8e 81       	ldd	r24, Y+6	; 0x06
     dda:	9f 81       	ldd	r25, Y+7	; 0x07
     ddc:	00 97       	sbiw	r24, 0x00	; 0
     dde:	d1 f0       	breq	.+52     	; 0xe14 <MDIO_voidSetPinDirection+0x184>
     de0:	2e 81       	ldd	r18, Y+6	; 0x06
     de2:	3f 81       	ldd	r19, Y+7	; 0x07
     de4:	21 30       	cpi	r18, 0x01	; 1
     de6:	31 05       	cpc	r19, r1
     de8:	09 f0       	breq	.+2      	; 0xdec <MDIO_voidSetPinDirection+0x15c>
     dea:	5f c0       	rjmp	.+190    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
					case PIN_OUTPUT:
						SET_BIT(DDRC_REG,A_u8PinId);
     dec:	a4 e3       	ldi	r26, 0x34	; 52
     dee:	b0 e0       	ldi	r27, 0x00	; 0
     df0:	e4 e3       	ldi	r30, 0x34	; 52
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	48 2f       	mov	r20, r24
     df8:	8a 81       	ldd	r24, Y+2	; 0x02
     dfa:	28 2f       	mov	r18, r24
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	02 2e       	mov	r0, r18
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <MDIO_voidSetPinDirection+0x17a>
     e06:	88 0f       	add	r24, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	0a 94       	dec	r0
     e0c:	e2 f7       	brpl	.-8      	; 0xe06 <MDIO_voidSetPinDirection+0x176>
     e0e:	84 2b       	or	r24, r20
     e10:	8c 93       	st	X, r24
     e12:	4b c0       	rjmp	.+150    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
						break;
					case PIN_INPUT:
						CLR_BIT(DDRC_REG,A_u8PinId);
     e14:	a4 e3       	ldi	r26, 0x34	; 52
     e16:	b0 e0       	ldi	r27, 0x00	; 0
     e18:	e4 e3       	ldi	r30, 0x34	; 52
     e1a:	f0 e0       	ldi	r31, 0x00	; 0
     e1c:	80 81       	ld	r24, Z
     e1e:	48 2f       	mov	r20, r24
     e20:	8a 81       	ldd	r24, Y+2	; 0x02
     e22:	28 2f       	mov	r18, r24
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	02 2e       	mov	r0, r18
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <MDIO_voidSetPinDirection+0x1a2>
     e2e:	88 0f       	add	r24, r24
     e30:	99 1f       	adc	r25, r25
     e32:	0a 94       	dec	r0
     e34:	e2 f7       	brpl	.-8      	; 0xe2e <MDIO_voidSetPinDirection+0x19e>
     e36:	80 95       	com	r24
     e38:	84 23       	and	r24, r20
     e3a:	8c 93       	st	X, r24
     e3c:	36 c0       	rjmp	.+108    	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
				}

					break;

			case PORTD:
						switch (A_u8Direction) {
     e3e:	8b 81       	ldd	r24, Y+3	; 0x03
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3d 83       	std	Y+5, r19	; 0x05
     e46:	2c 83       	std	Y+4, r18	; 0x04
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	9d 81       	ldd	r25, Y+5	; 0x05
     e4c:	00 97       	sbiw	r24, 0x00	; 0
     e4e:	c9 f0       	breq	.+50     	; 0xe82 <MDIO_voidSetPinDirection+0x1f2>
     e50:	2c 81       	ldd	r18, Y+4	; 0x04
     e52:	3d 81       	ldd	r19, Y+5	; 0x05
     e54:	21 30       	cpi	r18, 0x01	; 1
     e56:	31 05       	cpc	r19, r1
     e58:	41 f5       	brne	.+80     	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
						case PIN_OUTPUT:
							SET_BIT(DDRD_REG,A_u8PinId);
     e5a:	a1 e3       	ldi	r26, 0x31	; 49
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e1 e3       	ldi	r30, 0x31	; 49
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	48 2f       	mov	r20, r24
     e66:	8a 81       	ldd	r24, Y+2	; 0x02
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	02 2e       	mov	r0, r18
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <MDIO_voidSetPinDirection+0x1e8>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	0a 94       	dec	r0
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <MDIO_voidSetPinDirection+0x1e4>
     e7c:	84 2b       	or	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	14 c0       	rjmp	.+40     	; 0xeaa <MDIO_voidSetPinDirection+0x21a>
							break;
						case PIN_INPUT:
							CLR_BIT(DDRD_REG,A_u8PinId);
     e82:	a1 e3       	ldi	r26, 0x31	; 49
     e84:	b0 e0       	ldi	r27, 0x00	; 0
     e86:	e1 e3       	ldi	r30, 0x31	; 49
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	48 2f       	mov	r20, r24
     e8e:	8a 81       	ldd	r24, Y+2	; 0x02
     e90:	28 2f       	mov	r18, r24
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	02 2e       	mov	r0, r18
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <MDIO_voidSetPinDirection+0x210>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	0a 94       	dec	r0
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <MDIO_voidSetPinDirection+0x20c>
     ea4:	80 95       	com	r24
     ea6:	84 23       	and	r24, r20
     ea8:	8c 93       	st	X, r24
						break;
		default:
			break;
	}

}
     eaa:	2d 96       	adiw	r28, 0x0d	; 13
     eac:	0f b6       	in	r0, 0x3f	; 63
     eae:	f8 94       	cli
     eb0:	de bf       	out	0x3e, r29	; 62
     eb2:	0f be       	out	0x3f, r0	; 63
     eb4:	cd bf       	out	0x3d, r28	; 61
     eb6:	cf 91       	pop	r28
     eb8:	df 91       	pop	r29
     eba:	08 95       	ret

00000ebc <MDIO_voidSetPinValue>:
//To Set pin Value either HIGH or LOW takes PORT NAME ,PIN NUMBER and PIN VALUE
//PORT ID:PORTA,BCD
//PIN ID:0/7
//VALUE:HIGH,LOW
void MDIO_voidSetPinValue(u8 A_u8Port,u8 A_u8PinId,u8 A_u8Value)
{
     ebc:	df 93       	push	r29
     ebe:	cf 93       	push	r28
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62
     ec4:	2d 97       	sbiw	r28, 0x0d	; 13
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	de bf       	out	0x3e, r29	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	cd bf       	out	0x3d, r28	; 61
     ed0:	89 83       	std	Y+1, r24	; 0x01
     ed2:	6a 83       	std	Y+2, r22	; 0x02
     ed4:	4b 83       	std	Y+3, r20	; 0x03
	switch (A_u8Port) {
     ed6:	89 81       	ldd	r24, Y+1	; 0x01
     ed8:	28 2f       	mov	r18, r24
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	3d 87       	std	Y+13, r19	; 0x0d
     ede:	2c 87       	std	Y+12, r18	; 0x0c
     ee0:	8c 85       	ldd	r24, Y+12	; 0x0c
     ee2:	9d 85       	ldd	r25, Y+13	; 0x0d
     ee4:	81 30       	cpi	r24, 0x01	; 1
     ee6:	91 05       	cpc	r25, r1
     ee8:	09 f4       	brne	.+2      	; 0xeec <MDIO_voidSetPinValue+0x30>
     eea:	4f c0       	rjmp	.+158    	; 0xf8a <MDIO_voidSetPinValue+0xce>
     eec:	2c 85       	ldd	r18, Y+12	; 0x0c
     eee:	3d 85       	ldd	r19, Y+13	; 0x0d
     ef0:	22 30       	cpi	r18, 0x02	; 2
     ef2:	31 05       	cpc	r19, r1
     ef4:	2c f4       	brge	.+10     	; 0xf00 <MDIO_voidSetPinValue+0x44>
     ef6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ef8:	9d 85       	ldd	r25, Y+13	; 0x0d
     efa:	00 97       	sbiw	r24, 0x00	; 0
     efc:	71 f0       	breq	.+28     	; 0xf1a <MDIO_voidSetPinValue+0x5e>
     efe:	eb c0       	rjmp	.+470    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
     f00:	2c 85       	ldd	r18, Y+12	; 0x0c
     f02:	3d 85       	ldd	r19, Y+13	; 0x0d
     f04:	22 30       	cpi	r18, 0x02	; 2
     f06:	31 05       	cpc	r19, r1
     f08:	09 f4       	brne	.+2      	; 0xf0c <MDIO_voidSetPinValue+0x50>
     f0a:	77 c0       	rjmp	.+238    	; 0xffa <MDIO_voidSetPinValue+0x13e>
     f0c:	8c 85       	ldd	r24, Y+12	; 0x0c
     f0e:	9d 85       	ldd	r25, Y+13	; 0x0d
     f10:	83 30       	cpi	r24, 0x03	; 3
     f12:	91 05       	cpc	r25, r1
     f14:	09 f4       	brne	.+2      	; 0xf18 <MDIO_voidSetPinValue+0x5c>
     f16:	a9 c0       	rjmp	.+338    	; 0x106a <MDIO_voidSetPinValue+0x1ae>
     f18:	de c0       	rjmp	.+444    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
		case PORTA:
			switch (A_u8Value ) {
     f1a:	8b 81       	ldd	r24, Y+3	; 0x03
     f1c:	28 2f       	mov	r18, r24
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	3b 87       	std	Y+11, r19	; 0x0b
     f22:	2a 87       	std	Y+10, r18	; 0x0a
     f24:	8a 85       	ldd	r24, Y+10	; 0x0a
     f26:	9b 85       	ldd	r25, Y+11	; 0x0b
     f28:	00 97       	sbiw	r24, 0x00	; 0
     f2a:	d1 f0       	breq	.+52     	; 0xf60 <MDIO_voidSetPinValue+0xa4>
     f2c:	2a 85       	ldd	r18, Y+10	; 0x0a
     f2e:	3b 85       	ldd	r19, Y+11	; 0x0b
     f30:	21 30       	cpi	r18, 0x01	; 1
     f32:	31 05       	cpc	r19, r1
     f34:	09 f0       	breq	.+2      	; 0xf38 <MDIO_voidSetPinValue+0x7c>
     f36:	cf c0       	rjmp	.+414    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
			case PIN_HIGH:
				SET_BIT(PORTA_REG,A_u8PinId);
     f38:	ab e3       	ldi	r26, 0x3B	; 59
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	eb e3       	ldi	r30, 0x3B	; 59
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	80 81       	ld	r24, Z
     f42:	48 2f       	mov	r20, r24
     f44:	8a 81       	ldd	r24, Y+2	; 0x02
     f46:	28 2f       	mov	r18, r24
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	02 2e       	mov	r0, r18
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <MDIO_voidSetPinValue+0x9a>
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	0a 94       	dec	r0
     f58:	e2 f7       	brpl	.-8      	; 0xf52 <MDIO_voidSetPinValue+0x96>
     f5a:	84 2b       	or	r24, r20
     f5c:	8c 93       	st	X, r24
     f5e:	bb c0       	rjmp	.+374    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
				break;
			case PIN_LOW:
				CLR_BIT(PORTA_REG,A_u8PinId);
     f60:	ab e3       	ldi	r26, 0x3B	; 59
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	eb e3       	ldi	r30, 0x3B	; 59
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	48 2f       	mov	r20, r24
     f6c:	8a 81       	ldd	r24, Y+2	; 0x02
     f6e:	28 2f       	mov	r18, r24
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	02 2e       	mov	r0, r18
     f78:	02 c0       	rjmp	.+4      	; 0xf7e <MDIO_voidSetPinValue+0xc2>
     f7a:	88 0f       	add	r24, r24
     f7c:	99 1f       	adc	r25, r25
     f7e:	0a 94       	dec	r0
     f80:	e2 f7       	brpl	.-8      	; 0xf7a <MDIO_voidSetPinValue+0xbe>
     f82:	80 95       	com	r24
     f84:	84 23       	and	r24, r20
     f86:	8c 93       	st	X, r24
     f88:	a6 c0       	rjmp	.+332    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
				break;
		}

			break;
		case PORTB:
				switch (A_u8Value ) {
     f8a:	8b 81       	ldd	r24, Y+3	; 0x03
     f8c:	28 2f       	mov	r18, r24
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	39 87       	std	Y+9, r19	; 0x09
     f92:	28 87       	std	Y+8, r18	; 0x08
     f94:	88 85       	ldd	r24, Y+8	; 0x08
     f96:	99 85       	ldd	r25, Y+9	; 0x09
     f98:	00 97       	sbiw	r24, 0x00	; 0
     f9a:	d1 f0       	breq	.+52     	; 0xfd0 <MDIO_voidSetPinValue+0x114>
     f9c:	28 85       	ldd	r18, Y+8	; 0x08
     f9e:	39 85       	ldd	r19, Y+9	; 0x09
     fa0:	21 30       	cpi	r18, 0x01	; 1
     fa2:	31 05       	cpc	r19, r1
     fa4:	09 f0       	breq	.+2      	; 0xfa8 <MDIO_voidSetPinValue+0xec>
     fa6:	97 c0       	rjmp	.+302    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
				case PIN_HIGH:
					SET_BIT(PORTB_REG,A_u8PinId);
     fa8:	a8 e3       	ldi	r26, 0x38	; 56
     faa:	b0 e0       	ldi	r27, 0x00	; 0
     fac:	e8 e3       	ldi	r30, 0x38	; 56
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	48 2f       	mov	r20, r24
     fb4:	8a 81       	ldd	r24, Y+2	; 0x02
     fb6:	28 2f       	mov	r18, r24
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	02 2e       	mov	r0, r18
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <MDIO_voidSetPinValue+0x10a>
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	0a 94       	dec	r0
     fc8:	e2 f7       	brpl	.-8      	; 0xfc2 <MDIO_voidSetPinValue+0x106>
     fca:	84 2b       	or	r24, r20
     fcc:	8c 93       	st	X, r24
     fce:	83 c0       	rjmp	.+262    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
					break;
				case PIN_LOW:
					CLR_BIT(PORTB_REG,A_u8PinId);
     fd0:	a8 e3       	ldi	r26, 0x38	; 56
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	e8 e3       	ldi	r30, 0x38	; 56
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	80 81       	ld	r24, Z
     fda:	48 2f       	mov	r20, r24
     fdc:	8a 81       	ldd	r24, Y+2	; 0x02
     fde:	28 2f       	mov	r18, r24
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	02 2e       	mov	r0, r18
     fe8:	02 c0       	rjmp	.+4      	; 0xfee <MDIO_voidSetPinValue+0x132>
     fea:	88 0f       	add	r24, r24
     fec:	99 1f       	adc	r25, r25
     fee:	0a 94       	dec	r0
     ff0:	e2 f7       	brpl	.-8      	; 0xfea <MDIO_voidSetPinValue+0x12e>
     ff2:	80 95       	com	r24
     ff4:	84 23       	and	r24, r20
     ff6:	8c 93       	st	X, r24
     ff8:	6e c0       	rjmp	.+220    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
					break;
			}

				break;
		case PORTC:
					switch (A_u8Value ) {
     ffa:	8b 81       	ldd	r24, Y+3	; 0x03
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	3f 83       	std	Y+7, r19	; 0x07
    1002:	2e 83       	std	Y+6, r18	; 0x06
    1004:	8e 81       	ldd	r24, Y+6	; 0x06
    1006:	9f 81       	ldd	r25, Y+7	; 0x07
    1008:	00 97       	sbiw	r24, 0x00	; 0
    100a:	d1 f0       	breq	.+52     	; 0x1040 <MDIO_voidSetPinValue+0x184>
    100c:	2e 81       	ldd	r18, Y+6	; 0x06
    100e:	3f 81       	ldd	r19, Y+7	; 0x07
    1010:	21 30       	cpi	r18, 0x01	; 1
    1012:	31 05       	cpc	r19, r1
    1014:	09 f0       	breq	.+2      	; 0x1018 <MDIO_voidSetPinValue+0x15c>
    1016:	5f c0       	rjmp	.+190    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
					case PIN_HIGH:
						SET_BIT(PORTC_REG,A_u8PinId);
    1018:	a5 e3       	ldi	r26, 0x35	; 53
    101a:	b0 e0       	ldi	r27, 0x00	; 0
    101c:	e5 e3       	ldi	r30, 0x35	; 53
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	48 2f       	mov	r20, r24
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	02 2e       	mov	r0, r18
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <MDIO_voidSetPinValue+0x17a>
    1032:	88 0f       	add	r24, r24
    1034:	99 1f       	adc	r25, r25
    1036:	0a 94       	dec	r0
    1038:	e2 f7       	brpl	.-8      	; 0x1032 <MDIO_voidSetPinValue+0x176>
    103a:	84 2b       	or	r24, r20
    103c:	8c 93       	st	X, r24
    103e:	4b c0       	rjmp	.+150    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
						break;
					case PIN_LOW:
						CLR_BIT(PORTC_REG,A_u8PinId);
    1040:	a5 e3       	ldi	r26, 0x35	; 53
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	e5 e3       	ldi	r30, 0x35	; 53
    1046:	f0 e0       	ldi	r31, 0x00	; 0
    1048:	80 81       	ld	r24, Z
    104a:	48 2f       	mov	r20, r24
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	28 2f       	mov	r18, r24
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	02 2e       	mov	r0, r18
    1058:	02 c0       	rjmp	.+4      	; 0x105e <MDIO_voidSetPinValue+0x1a2>
    105a:	88 0f       	add	r24, r24
    105c:	99 1f       	adc	r25, r25
    105e:	0a 94       	dec	r0
    1060:	e2 f7       	brpl	.-8      	; 0x105a <MDIO_voidSetPinValue+0x19e>
    1062:	80 95       	com	r24
    1064:	84 23       	and	r24, r20
    1066:	8c 93       	st	X, r24
    1068:	36 c0       	rjmp	.+108    	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
				}

					break;

			case PORTD:
						switch (A_u8Value ) {
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	28 2f       	mov	r18, r24
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	3d 83       	std	Y+5, r19	; 0x05
    1072:	2c 83       	std	Y+4, r18	; 0x04
    1074:	8c 81       	ldd	r24, Y+4	; 0x04
    1076:	9d 81       	ldd	r25, Y+5	; 0x05
    1078:	00 97       	sbiw	r24, 0x00	; 0
    107a:	c9 f0       	breq	.+50     	; 0x10ae <MDIO_voidSetPinValue+0x1f2>
    107c:	2c 81       	ldd	r18, Y+4	; 0x04
    107e:	3d 81       	ldd	r19, Y+5	; 0x05
    1080:	21 30       	cpi	r18, 0x01	; 1
    1082:	31 05       	cpc	r19, r1
    1084:	41 f5       	brne	.+80     	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
						case PIN_HIGH:
							SET_BIT(PORTD_REG,A_u8PinId);
    1086:	a2 e3       	ldi	r26, 0x32	; 50
    1088:	b0 e0       	ldi	r27, 0x00	; 0
    108a:	e2 e3       	ldi	r30, 0x32	; 50
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	80 81       	ld	r24, Z
    1090:	48 2f       	mov	r20, r24
    1092:	8a 81       	ldd	r24, Y+2	; 0x02
    1094:	28 2f       	mov	r18, r24
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	02 2e       	mov	r0, r18
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <MDIO_voidSetPinValue+0x1e8>
    10a0:	88 0f       	add	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	0a 94       	dec	r0
    10a6:	e2 f7       	brpl	.-8      	; 0x10a0 <MDIO_voidSetPinValue+0x1e4>
    10a8:	84 2b       	or	r24, r20
    10aa:	8c 93       	st	X, r24
    10ac:	14 c0       	rjmp	.+40     	; 0x10d6 <MDIO_voidSetPinValue+0x21a>
							break;
						case PIN_LOW:
							CLR_BIT(PORTD_REG,A_u8PinId);
    10ae:	a2 e3       	ldi	r26, 0x32	; 50
    10b0:	b0 e0       	ldi	r27, 0x00	; 0
    10b2:	e2 e3       	ldi	r30, 0x32	; 50
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	80 81       	ld	r24, Z
    10b8:	48 2f       	mov	r20, r24
    10ba:	8a 81       	ldd	r24, Y+2	; 0x02
    10bc:	28 2f       	mov	r18, r24
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	81 e0       	ldi	r24, 0x01	; 1
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	02 2e       	mov	r0, r18
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <MDIO_voidSetPinValue+0x210>
    10c8:	88 0f       	add	r24, r24
    10ca:	99 1f       	adc	r25, r25
    10cc:	0a 94       	dec	r0
    10ce:	e2 f7       	brpl	.-8      	; 0x10c8 <MDIO_voidSetPinValue+0x20c>
    10d0:	80 95       	com	r24
    10d2:	84 23       	and	r24, r20
    10d4:	8c 93       	st	X, r24
						break;
		default:
			break;
	}

}
    10d6:	2d 96       	adiw	r28, 0x0d	; 13
    10d8:	0f b6       	in	r0, 0x3f	; 63
    10da:	f8 94       	cli
    10dc:	de bf       	out	0x3e, r29	; 62
    10de:	0f be       	out	0x3f, r0	; 63
    10e0:	cd bf       	out	0x3d, r28	; 61
    10e2:	cf 91       	pop	r28
    10e4:	df 91       	pop	r29
    10e6:	08 95       	ret

000010e8 <MDIO_u8GetPinValue>:
//PORT ID:PORTA,BCD
//PIN ID:0/7


u8 MDIO_u8GetPinValue(u8 A_u8PortID,u8 A_u8PinID)
{
    10e8:	df 93       	push	r29
    10ea:	cf 93       	push	r28
    10ec:	00 d0       	rcall	.+0      	; 0x10ee <MDIO_u8GetPinValue+0x6>
    10ee:	00 d0       	rcall	.+0      	; 0x10f0 <MDIO_u8GetPinValue+0x8>
    10f0:	0f 92       	push	r0
    10f2:	cd b7       	in	r28, 0x3d	; 61
    10f4:	de b7       	in	r29, 0x3e	; 62
    10f6:	8a 83       	std	Y+2, r24	; 0x02
    10f8:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8PinValue=0;
    10fa:	19 82       	std	Y+1, r1	; 0x01
	switch (A_u8PortID) {
    10fc:	8a 81       	ldd	r24, Y+2	; 0x02
    10fe:	28 2f       	mov	r18, r24
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	3d 83       	std	Y+5, r19	; 0x05
    1104:	2c 83       	std	Y+4, r18	; 0x04
    1106:	4c 81       	ldd	r20, Y+4	; 0x04
    1108:	5d 81       	ldd	r21, Y+5	; 0x05
    110a:	41 30       	cpi	r20, 0x01	; 1
    110c:	51 05       	cpc	r21, r1
    110e:	41 f1       	breq	.+80     	; 0x1160 <MDIO_u8GetPinValue+0x78>
    1110:	8c 81       	ldd	r24, Y+4	; 0x04
    1112:	9d 81       	ldd	r25, Y+5	; 0x05
    1114:	82 30       	cpi	r24, 0x02	; 2
    1116:	91 05       	cpc	r25, r1
    1118:	34 f4       	brge	.+12     	; 0x1126 <MDIO_u8GetPinValue+0x3e>
    111a:	2c 81       	ldd	r18, Y+4	; 0x04
    111c:	3d 81       	ldd	r19, Y+5	; 0x05
    111e:	21 15       	cp	r18, r1
    1120:	31 05       	cpc	r19, r1
    1122:	61 f0       	breq	.+24     	; 0x113c <MDIO_u8GetPinValue+0x54>
    1124:	52 c0       	rjmp	.+164    	; 0x11ca <MDIO_u8GetPinValue+0xe2>
    1126:	4c 81       	ldd	r20, Y+4	; 0x04
    1128:	5d 81       	ldd	r21, Y+5	; 0x05
    112a:	42 30       	cpi	r20, 0x02	; 2
    112c:	51 05       	cpc	r21, r1
    112e:	51 f1       	breq	.+84     	; 0x1184 <MDIO_u8GetPinValue+0x9c>
    1130:	8c 81       	ldd	r24, Y+4	; 0x04
    1132:	9d 81       	ldd	r25, Y+5	; 0x05
    1134:	83 30       	cpi	r24, 0x03	; 3
    1136:	91 05       	cpc	r25, r1
    1138:	b9 f1       	breq	.+110    	; 0x11a8 <MDIO_u8GetPinValue+0xc0>
    113a:	47 c0       	rjmp	.+142    	; 0x11ca <MDIO_u8GetPinValue+0xe2>
		case PORTA:
			local_u8PinValue=GET_BIT(PINA_REG,A_u8PinID);
    113c:	e9 e3       	ldi	r30, 0x39	; 57
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	28 2f       	mov	r18, r24
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	88 2f       	mov	r24, r24
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	a9 01       	movw	r20, r18
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <MDIO_u8GetPinValue+0x6c>
    1150:	55 95       	asr	r21
    1152:	47 95       	ror	r20
    1154:	8a 95       	dec	r24
    1156:	e2 f7       	brpl	.-8      	; 0x1150 <MDIO_u8GetPinValue+0x68>
    1158:	ca 01       	movw	r24, r20
    115a:	81 70       	andi	r24, 0x01	; 1
    115c:	89 83       	std	Y+1, r24	; 0x01
    115e:	35 c0       	rjmp	.+106    	; 0x11ca <MDIO_u8GetPinValue+0xe2>
			break;
		case PORTB:
			local_u8PinValue=GET_BIT(PINB_REG,A_u8PinID);
    1160:	e6 e3       	ldi	r30, 0x36	; 54
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	80 81       	ld	r24, Z
    1166:	28 2f       	mov	r18, r24
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	8b 81       	ldd	r24, Y+3	; 0x03
    116c:	88 2f       	mov	r24, r24
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	a9 01       	movw	r20, r18
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <MDIO_u8GetPinValue+0x90>
    1174:	55 95       	asr	r21
    1176:	47 95       	ror	r20
    1178:	8a 95       	dec	r24
    117a:	e2 f7       	brpl	.-8      	; 0x1174 <MDIO_u8GetPinValue+0x8c>
    117c:	ca 01       	movw	r24, r20
    117e:	81 70       	andi	r24, 0x01	; 1
    1180:	89 83       	std	Y+1, r24	; 0x01
    1182:	23 c0       	rjmp	.+70     	; 0x11ca <MDIO_u8GetPinValue+0xe2>
			break;
		case PORTC:
			local_u8PinValue=GET_BIT(PINC_REG,A_u8PinID);
    1184:	e3 e3       	ldi	r30, 0x33	; 51
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	80 81       	ld	r24, Z
    118a:	28 2f       	mov	r18, r24
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	8b 81       	ldd	r24, Y+3	; 0x03
    1190:	88 2f       	mov	r24, r24
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	a9 01       	movw	r20, r18
    1196:	02 c0       	rjmp	.+4      	; 0x119c <MDIO_u8GetPinValue+0xb4>
    1198:	55 95       	asr	r21
    119a:	47 95       	ror	r20
    119c:	8a 95       	dec	r24
    119e:	e2 f7       	brpl	.-8      	; 0x1198 <MDIO_u8GetPinValue+0xb0>
    11a0:	ca 01       	movw	r24, r20
    11a2:	81 70       	andi	r24, 0x01	; 1
    11a4:	89 83       	std	Y+1, r24	; 0x01
    11a6:	11 c0       	rjmp	.+34     	; 0x11ca <MDIO_u8GetPinValue+0xe2>
			break;
		case PORTD:
			local_u8PinValue=GET_BIT(PIND_REG,A_u8PinID);
    11a8:	e0 e3       	ldi	r30, 0x30	; 48
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	80 81       	ld	r24, Z
    11ae:	28 2f       	mov	r18, r24
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	8b 81       	ldd	r24, Y+3	; 0x03
    11b4:	88 2f       	mov	r24, r24
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	a9 01       	movw	r20, r18
    11ba:	02 c0       	rjmp	.+4      	; 0x11c0 <MDIO_u8GetPinValue+0xd8>
    11bc:	55 95       	asr	r21
    11be:	47 95       	ror	r20
    11c0:	8a 95       	dec	r24
    11c2:	e2 f7       	brpl	.-8      	; 0x11bc <MDIO_u8GetPinValue+0xd4>
    11c4:	ca 01       	movw	r24, r20
    11c6:	81 70       	andi	r24, 0x01	; 1
    11c8:	89 83       	std	Y+1, r24	; 0x01
			break;
		default:
			break;
	}
	return local_u8PinValue;
    11ca:	89 81       	ldd	r24, Y+1	; 0x01

}
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	0f 90       	pop	r0
    11d4:	0f 90       	pop	r0
    11d6:	cf 91       	pop	r28
    11d8:	df 91       	pop	r29
    11da:	08 95       	ret

000011dc <MDIO_voidToggle>:
//To Toggle a pin it takes  PORT NAME ,PIN NUMBER and PIN VALUE
void MDIO_voidToggle(u8 A_u8Port,u8 A_u8PinId,u8 A_u8Value)
{
    11dc:	df 93       	push	r29
    11de:	cf 93       	push	r28
    11e0:	00 d0       	rcall	.+0      	; 0x11e2 <MDIO_voidToggle+0x6>
    11e2:	00 d0       	rcall	.+0      	; 0x11e4 <MDIO_voidToggle+0x8>
    11e4:	0f 92       	push	r0
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	89 83       	std	Y+1, r24	; 0x01
    11ec:	6a 83       	std	Y+2, r22	; 0x02
    11ee:	4b 83       	std	Y+3, r20	; 0x03
	switch (A_u8Port) {
    11f0:	89 81       	ldd	r24, Y+1	; 0x01
    11f2:	28 2f       	mov	r18, r24
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	3d 83       	std	Y+5, r19	; 0x05
    11f8:	2c 83       	std	Y+4, r18	; 0x04
    11fa:	8c 81       	ldd	r24, Y+4	; 0x04
    11fc:	9d 81       	ldd	r25, Y+5	; 0x05
    11fe:	81 30       	cpi	r24, 0x01	; 1
    1200:	91 05       	cpc	r25, r1
    1202:	49 f1       	breq	.+82     	; 0x1256 <MDIO_voidToggle+0x7a>
    1204:	2c 81       	ldd	r18, Y+4	; 0x04
    1206:	3d 81       	ldd	r19, Y+5	; 0x05
    1208:	22 30       	cpi	r18, 0x02	; 2
    120a:	31 05       	cpc	r19, r1
    120c:	2c f4       	brge	.+10     	; 0x1218 <MDIO_voidToggle+0x3c>
    120e:	8c 81       	ldd	r24, Y+4	; 0x04
    1210:	9d 81       	ldd	r25, Y+5	; 0x05
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	61 f0       	breq	.+24     	; 0x122e <MDIO_voidToggle+0x52>
    1216:	5a c0       	rjmp	.+180    	; 0x12cc <MDIO_voidToggle+0xf0>
    1218:	2c 81       	ldd	r18, Y+4	; 0x04
    121a:	3d 81       	ldd	r19, Y+5	; 0x05
    121c:	22 30       	cpi	r18, 0x02	; 2
    121e:	31 05       	cpc	r19, r1
    1220:	71 f1       	breq	.+92     	; 0x127e <MDIO_voidToggle+0xa2>
    1222:	8c 81       	ldd	r24, Y+4	; 0x04
    1224:	9d 81       	ldd	r25, Y+5	; 0x05
    1226:	83 30       	cpi	r24, 0x03	; 3
    1228:	91 05       	cpc	r25, r1
    122a:	e9 f1       	breq	.+122    	; 0x12a6 <MDIO_voidToggle+0xca>
    122c:	4f c0       	rjmp	.+158    	; 0x12cc <MDIO_voidToggle+0xf0>
		case PORTA:
			TOGGLE_BIT(PORTA_REG,A_u8PinId);
    122e:	ab e3       	ldi	r26, 0x3B	; 59
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	eb e3       	ldi	r30, 0x3B	; 59
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	80 81       	ld	r24, Z
    1238:	48 2f       	mov	r20, r24
    123a:	8a 81       	ldd	r24, Y+2	; 0x02
    123c:	28 2f       	mov	r18, r24
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	02 2e       	mov	r0, r18
    1246:	02 c0       	rjmp	.+4      	; 0x124c <MDIO_voidToggle+0x70>
    1248:	88 0f       	add	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	0a 94       	dec	r0
    124e:	e2 f7       	brpl	.-8      	; 0x1248 <MDIO_voidToggle+0x6c>
    1250:	84 27       	eor	r24, r20
    1252:	8c 93       	st	X, r24
    1254:	3b c0       	rjmp	.+118    	; 0x12cc <MDIO_voidToggle+0xf0>
			break;
		case PORTB:
			TOGGLE_BIT(PORTB_REG,A_u8PinId);
    1256:	a8 e3       	ldi	r26, 0x38	; 56
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	e8 e3       	ldi	r30, 0x38	; 56
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	80 81       	ld	r24, Z
    1260:	48 2f       	mov	r20, r24
    1262:	8a 81       	ldd	r24, Y+2	; 0x02
    1264:	28 2f       	mov	r18, r24
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	02 2e       	mov	r0, r18
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <MDIO_voidToggle+0x98>
    1270:	88 0f       	add	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	0a 94       	dec	r0
    1276:	e2 f7       	brpl	.-8      	; 0x1270 <MDIO_voidToggle+0x94>
    1278:	84 27       	eor	r24, r20
    127a:	8c 93       	st	X, r24
    127c:	27 c0       	rjmp	.+78     	; 0x12cc <MDIO_voidToggle+0xf0>
				break;
		case PORTC:
			TOGGLE_BIT(PORTC_REG,A_u8PinId);
    127e:	a5 e3       	ldi	r26, 0x35	; 53
    1280:	b0 e0       	ldi	r27, 0x00	; 0
    1282:	e5 e3       	ldi	r30, 0x35	; 53
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	80 81       	ld	r24, Z
    1288:	48 2f       	mov	r20, r24
    128a:	8a 81       	ldd	r24, Y+2	; 0x02
    128c:	28 2f       	mov	r18, r24
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	02 2e       	mov	r0, r18
    1296:	02 c0       	rjmp	.+4      	; 0x129c <MDIO_voidToggle+0xc0>
    1298:	88 0f       	add	r24, r24
    129a:	99 1f       	adc	r25, r25
    129c:	0a 94       	dec	r0
    129e:	e2 f7       	brpl	.-8      	; 0x1298 <MDIO_voidToggle+0xbc>
    12a0:	84 27       	eor	r24, r20
    12a2:	8c 93       	st	X, r24
    12a4:	13 c0       	rjmp	.+38     	; 0x12cc <MDIO_voidToggle+0xf0>
					break;

			case PORTD:
				TOGGLE_BIT(PORTD_REG,A_u8PinId);
    12a6:	a2 e3       	ldi	r26, 0x32	; 50
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	e2 e3       	ldi	r30, 0x32	; 50
    12ac:	f0 e0       	ldi	r31, 0x00	; 0
    12ae:	80 81       	ld	r24, Z
    12b0:	48 2f       	mov	r20, r24
    12b2:	8a 81       	ldd	r24, Y+2	; 0x02
    12b4:	28 2f       	mov	r18, r24
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	02 2e       	mov	r0, r18
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <MDIO_voidToggle+0xe8>
    12c0:	88 0f       	add	r24, r24
    12c2:	99 1f       	adc	r25, r25
    12c4:	0a 94       	dec	r0
    12c6:	e2 f7       	brpl	.-8      	; 0x12c0 <MDIO_voidToggle+0xe4>
    12c8:	84 27       	eor	r24, r20
    12ca:	8c 93       	st	X, r24
						break;
		default:
			break;
	}

}
    12cc:	0f 90       	pop	r0
    12ce:	0f 90       	pop	r0
    12d0:	0f 90       	pop	r0
    12d2:	0f 90       	pop	r0
    12d4:	0f 90       	pop	r0
    12d6:	cf 91       	pop	r28
    12d8:	df 91       	pop	r29
    12da:	08 95       	ret

000012dc <HSSD_Init>:
#include "SSD_private.h"
#include "SSD_Interface.h"



void HSSD_Init(u8 A_u8COM){
    12dc:	df 93       	push	r29
    12de:	cf 93       	push	r28
    12e0:	0f 92       	push	r0
    12e2:	cd b7       	in	r28, 0x3d	; 61
    12e4:	de b7       	in	r29, 0x3e	; 62
    12e6:	89 83       	std	Y+1, r24	; 0x01
if(A_u8COM==COM1)
    12e8:	89 81       	ldd	r24, Y+1	; 0x01
    12ea:	83 30       	cpi	r24, 0x03	; 3
    12ec:	a9 f4       	brne	.+42     	; 0x1318 <HSSD_Init+0x3c>
		{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_LOW);
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	63 e0       	ldi	r22, 0x03	; 3
    12f2:	40 e0       	ldi	r20, 0x00	; 0
    12f4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	62 e0       	ldi	r22, 0x02	; 2
    12fc:	41 e0       	ldi	r20, 0x01	; 1
    12fe:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    1302:	81 e0       	ldi	r24, 0x01	; 1
    1304:	65 e0       	ldi	r22, 0x05	; 5
    1306:	41 e0       	ldi	r20, 0x01	; 1
    1308:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	66 e0       	ldi	r22, 0x06	; 6
    1310:	41 e0       	ldi	r20, 0x01	; 1
    1312:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1316:	47 c0       	rjmp	.+142    	; 0x13a6 <HSSD_Init+0xca>

else if(A_u8COM==COM2)
    1318:	89 81       	ldd	r24, Y+1	; 0x01
    131a:	82 30       	cpi	r24, 0x02	; 2
    131c:	a9 f4       	brne	.+42     	; 0x1348 <HSSD_Init+0x6c>
{	MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    131e:	80 e0       	ldi	r24, 0x00	; 0
    1320:	63 e0       	ldi	r22, 0x03	; 3
    1322:	41 e0       	ldi	r20, 0x01	; 1
    1324:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_LOW);
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	62 e0       	ldi	r22, 0x02	; 2
    132c:	40 e0       	ldi	r20, 0x00	; 0
    132e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    1332:	81 e0       	ldi	r24, 0x01	; 1
    1334:	65 e0       	ldi	r22, 0x05	; 5
    1336:	41 e0       	ldi	r20, 0x01	; 1
    1338:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    133c:	81 e0       	ldi	r24, 0x01	; 1
    133e:	66 e0       	ldi	r22, 0x06	; 6
    1340:	41 e0       	ldi	r20, 0x01	; 1
    1342:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1346:	2f c0       	rjmp	.+94     	; 0x13a6 <HSSD_Init+0xca>

else if(A_u8COM==COM3)
    1348:	89 81       	ldd	r24, Y+1	; 0x01
    134a:	85 30       	cpi	r24, 0x05	; 5
    134c:	a9 f4       	brne	.+42     	; 0x1378 <HSSD_Init+0x9c>
		{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	63 e0       	ldi	r22, 0x03	; 3
    1352:	41 e0       	ldi	r20, 0x01	; 1
    1354:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	62 e0       	ldi	r22, 0x02	; 2
    135c:	41 e0       	ldi	r20, 0x01	; 1
    135e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_LOW);
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	65 e0       	ldi	r22, 0x05	; 5
    1366:	40 e0       	ldi	r20, 0x00	; 0
    1368:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    136c:	81 e0       	ldi	r24, 0x01	; 1
    136e:	66 e0       	ldi	r22, 0x06	; 6
    1370:	41 e0       	ldi	r20, 0x01	; 1
    1372:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1376:	17 c0       	rjmp	.+46     	; 0x13a6 <HSSD_Init+0xca>
else if(A_u8COM==COM4)
    1378:	89 81       	ldd	r24, Y+1	; 0x01
    137a:	86 30       	cpi	r24, 0x06	; 6
    137c:	a1 f4       	brne	.+40     	; 0x13a6 <HSSD_Init+0xca>
	{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	63 e0       	ldi	r22, 0x03	; 3
    1382:	41 e0       	ldi	r20, 0x01	; 1
    1384:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	62 e0       	ldi	r22, 0x02	; 2
    138c:	41 e0       	ldi	r20, 0x01	; 1
    138e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	65 e0       	ldi	r22, 0x05	; 5
    1396:	41 e0       	ldi	r20, 0x01	; 1
    1398:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_LOW);}
    139c:	81 e0       	ldi	r24, 0x01	; 1
    139e:	66 e0       	ldi	r22, 0x06	; 6
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>



}
    13a6:	0f 90       	pop	r0
    13a8:	cf 91       	pop	r28
    13aa:	df 91       	pop	r29
    13ac:	08 95       	ret

000013ae <HSSD_voidDisplay>:
void HSSD_voidDisplay(u8 A_u8number)
{switch(A_u8number)
    13ae:	df 93       	push	r29
    13b0:	cf 93       	push	r28
    13b2:	00 d0       	rcall	.+0      	; 0x13b4 <HSSD_voidDisplay+0x6>
    13b4:	0f 92       	push	r0
    13b6:	cd b7       	in	r28, 0x3d	; 61
    13b8:	de b7       	in	r29, 0x3e	; 62
    13ba:	89 83       	std	Y+1, r24	; 0x01
    13bc:	89 81       	ldd	r24, Y+1	; 0x01
    13be:	28 2f       	mov	r18, r24
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	3b 83       	std	Y+3, r19	; 0x03
    13c4:	2a 83       	std	Y+2, r18	; 0x02
    13c6:	8a 81       	ldd	r24, Y+2	; 0x02
    13c8:	9b 81       	ldd	r25, Y+3	; 0x03
    13ca:	84 30       	cpi	r24, 0x04	; 4
    13cc:	91 05       	cpc	r25, r1
    13ce:	09 f4       	brne	.+2      	; 0x13d2 <HSSD_voidDisplay+0x24>
    13d0:	9b c0       	rjmp	.+310    	; 0x1508 <HSSD_voidDisplay+0x15a>
    13d2:	2a 81       	ldd	r18, Y+2	; 0x02
    13d4:	3b 81       	ldd	r19, Y+3	; 0x03
    13d6:	25 30       	cpi	r18, 0x05	; 5
    13d8:	31 05       	cpc	r19, r1
    13da:	ec f4       	brge	.+58     	; 0x1416 <HSSD_voidDisplay+0x68>
    13dc:	8a 81       	ldd	r24, Y+2	; 0x02
    13de:	9b 81       	ldd	r25, Y+3	; 0x03
    13e0:	81 30       	cpi	r24, 0x01	; 1
    13e2:	91 05       	cpc	r25, r1
    13e4:	09 f4       	brne	.+2      	; 0x13e8 <HSSD_voidDisplay+0x3a>
    13e6:	51 c0       	rjmp	.+162    	; 0x148a <HSSD_voidDisplay+0xdc>
    13e8:	2a 81       	ldd	r18, Y+2	; 0x02
    13ea:	3b 81       	ldd	r19, Y+3	; 0x03
    13ec:	22 30       	cpi	r18, 0x02	; 2
    13ee:	31 05       	cpc	r19, r1
    13f0:	2c f4       	brge	.+10     	; 0x13fc <HSSD_voidDisplay+0x4e>
    13f2:	8a 81       	ldd	r24, Y+2	; 0x02
    13f4:	9b 81       	ldd	r25, Y+3	; 0x03
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	99 f1       	breq	.+102    	; 0x1460 <HSSD_voidDisplay+0xb2>
    13fa:	03 c1       	rjmp	.+518    	; 0x1602 <HSSD_voidDisplay+0x254>
    13fc:	2a 81       	ldd	r18, Y+2	; 0x02
    13fe:	3b 81       	ldd	r19, Y+3	; 0x03
    1400:	22 30       	cpi	r18, 0x02	; 2
    1402:	31 05       	cpc	r19, r1
    1404:	09 f4       	brne	.+2      	; 0x1408 <HSSD_voidDisplay+0x5a>
    1406:	56 c0       	rjmp	.+172    	; 0x14b4 <HSSD_voidDisplay+0x106>
    1408:	8a 81       	ldd	r24, Y+2	; 0x02
    140a:	9b 81       	ldd	r25, Y+3	; 0x03
    140c:	83 30       	cpi	r24, 0x03	; 3
    140e:	91 05       	cpc	r25, r1
    1410:	09 f4       	brne	.+2      	; 0x1414 <HSSD_voidDisplay+0x66>
    1412:	65 c0       	rjmp	.+202    	; 0x14de <HSSD_voidDisplay+0x130>
    1414:	f6 c0       	rjmp	.+492    	; 0x1602 <HSSD_voidDisplay+0x254>
    1416:	2a 81       	ldd	r18, Y+2	; 0x02
    1418:	3b 81       	ldd	r19, Y+3	; 0x03
    141a:	27 30       	cpi	r18, 0x07	; 7
    141c:	31 05       	cpc	r19, r1
    141e:	09 f4       	brne	.+2      	; 0x1422 <HSSD_voidDisplay+0x74>
    1420:	b2 c0       	rjmp	.+356    	; 0x1586 <HSSD_voidDisplay+0x1d8>
    1422:	8a 81       	ldd	r24, Y+2	; 0x02
    1424:	9b 81       	ldd	r25, Y+3	; 0x03
    1426:	88 30       	cpi	r24, 0x08	; 8
    1428:	91 05       	cpc	r25, r1
    142a:	6c f4       	brge	.+26     	; 0x1446 <HSSD_voidDisplay+0x98>
    142c:	2a 81       	ldd	r18, Y+2	; 0x02
    142e:	3b 81       	ldd	r19, Y+3	; 0x03
    1430:	25 30       	cpi	r18, 0x05	; 5
    1432:	31 05       	cpc	r19, r1
    1434:	09 f4       	brne	.+2      	; 0x1438 <HSSD_voidDisplay+0x8a>
    1436:	7d c0       	rjmp	.+250    	; 0x1532 <HSSD_voidDisplay+0x184>
    1438:	8a 81       	ldd	r24, Y+2	; 0x02
    143a:	9b 81       	ldd	r25, Y+3	; 0x03
    143c:	86 30       	cpi	r24, 0x06	; 6
    143e:	91 05       	cpc	r25, r1
    1440:	09 f4       	brne	.+2      	; 0x1444 <HSSD_voidDisplay+0x96>
    1442:	8c c0       	rjmp	.+280    	; 0x155c <HSSD_voidDisplay+0x1ae>
    1444:	de c0       	rjmp	.+444    	; 0x1602 <HSSD_voidDisplay+0x254>
    1446:	2a 81       	ldd	r18, Y+2	; 0x02
    1448:	3b 81       	ldd	r19, Y+3	; 0x03
    144a:	28 30       	cpi	r18, 0x08	; 8
    144c:	31 05       	cpc	r19, r1
    144e:	09 f4       	brne	.+2      	; 0x1452 <HSSD_voidDisplay+0xa4>
    1450:	af c0       	rjmp	.+350    	; 0x15b0 <HSSD_voidDisplay+0x202>
    1452:	8a 81       	ldd	r24, Y+2	; 0x02
    1454:	9b 81       	ldd	r25, Y+3	; 0x03
    1456:	89 30       	cpi	r24, 0x09	; 9
    1458:	91 05       	cpc	r25, r1
    145a:	09 f4       	brne	.+2      	; 0x145e <HSSD_voidDisplay+0xb0>
    145c:	be c0       	rjmp	.+380    	; 0x15da <HSSD_voidDisplay+0x22c>
    145e:	d1 c0       	rjmp	.+418    	; 0x1602 <HSSD_voidDisplay+0x254>
{
case 0:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1460:	81 e0       	ldi	r24, 0x01	; 1
    1462:	60 e0       	ldi	r22, 0x00	; 0
    1464:	40 e0       	ldi	r20, 0x00	; 0
    1466:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	61 e0       	ldi	r22, 0x01	; 1
    146e:	40 e0       	ldi	r20, 0x00	; 0
    1470:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	62 e0       	ldi	r22, 0x02	; 2
    1478:	40 e0       	ldi	r20, 0x00	; 0
    147a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	64 e0       	ldi	r22, 0x04	; 4
    1482:	40 e0       	ldi	r20, 0x00	; 0
    1484:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1488:	bc c0       	rjmp	.+376    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 1:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	60 e0       	ldi	r22, 0x00	; 0
    148e:	41 e0       	ldi	r20, 0x01	; 1
    1490:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1494:	81 e0       	ldi	r24, 0x01	; 1
    1496:	61 e0       	ldi	r22, 0x01	; 1
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	62 e0       	ldi	r22, 0x02	; 2
    14a2:	40 e0       	ldi	r20, 0x00	; 0
    14a4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	64 e0       	ldi	r22, 0x04	; 4
    14ac:	40 e0       	ldi	r20, 0x00	; 0
    14ae:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    14b2:	a7 c0       	rjmp	.+334    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 2:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	60 e0       	ldi	r22, 0x00	; 0
    14b8:	40 e0       	ldi	r20, 0x00	; 0
    14ba:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	61 e0       	ldi	r22, 0x01	; 1
    14c2:	41 e0       	ldi	r20, 0x01	; 1
    14c4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	62 e0       	ldi	r22, 0x02	; 2
    14cc:	40 e0       	ldi	r20, 0x00	; 0
    14ce:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	64 e0       	ldi	r22, 0x04	; 4
    14d6:	40 e0       	ldi	r20, 0x00	; 0
    14d8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    14dc:	92 c0       	rjmp	.+292    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 3:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	60 e0       	ldi	r22, 0x00	; 0
    14e2:	41 e0       	ldi	r20, 0x01	; 1
    14e4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    14e8:	81 e0       	ldi	r24, 0x01	; 1
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	41 e0       	ldi	r20, 0x01	; 1
    14ee:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	62 e0       	ldi	r22, 0x02	; 2
    14f6:	40 e0       	ldi	r20, 0x00	; 0
    14f8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    14fc:	81 e0       	ldi	r24, 0x01	; 1
    14fe:	64 e0       	ldi	r22, 0x04	; 4
    1500:	40 e0       	ldi	r20, 0x00	; 0
    1502:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1506:	7d c0       	rjmp	.+250    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 4:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	60 e0       	ldi	r22, 0x00	; 0
    150c:	40 e0       	ldi	r20, 0x00	; 0
    150e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	61 e0       	ldi	r22, 0x01	; 1
    1516:	40 e0       	ldi	r20, 0x00	; 0
    1518:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	62 e0       	ldi	r22, 0x02	; 2
    1520:	41 e0       	ldi	r20, 0x01	; 1
    1522:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1526:	81 e0       	ldi	r24, 0x01	; 1
    1528:	64 e0       	ldi	r22, 0x04	; 4
    152a:	40 e0       	ldi	r20, 0x00	; 0
    152c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1530:	68 c0       	rjmp	.+208    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 5:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	41 e0       	ldi	r20, 0x01	; 1
    1538:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    153c:	81 e0       	ldi	r24, 0x01	; 1
    153e:	61 e0       	ldi	r22, 0x01	; 1
    1540:	40 e0       	ldi	r20, 0x00	; 0
    1542:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	62 e0       	ldi	r22, 0x02	; 2
    154a:	41 e0       	ldi	r20, 0x01	; 1
    154c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1550:	81 e0       	ldi	r24, 0x01	; 1
    1552:	64 e0       	ldi	r22, 0x04	; 4
    1554:	40 e0       	ldi	r20, 0x00	; 0
    1556:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    155a:	53 c0       	rjmp	.+166    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 6:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	40 e0       	ldi	r20, 0x00	; 0
    1562:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	61 e0       	ldi	r22, 0x01	; 1
    156a:	41 e0       	ldi	r20, 0x01	; 1
    156c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1570:	81 e0       	ldi	r24, 0x01	; 1
    1572:	62 e0       	ldi	r22, 0x02	; 2
    1574:	41 e0       	ldi	r20, 0x01	; 1
    1576:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	64 e0       	ldi	r22, 0x04	; 4
    157e:	40 e0       	ldi	r20, 0x00	; 0
    1580:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1584:	3e c0       	rjmp	.+124    	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 7:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	60 e0       	ldi	r22, 0x00	; 0
    158a:	41 e0       	ldi	r20, 0x01	; 1
    158c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1590:	81 e0       	ldi	r24, 0x01	; 1
    1592:	61 e0       	ldi	r22, 0x01	; 1
    1594:	41 e0       	ldi	r20, 0x01	; 1
    1596:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	62 e0       	ldi	r22, 0x02	; 2
    159e:	41 e0       	ldi	r20, 0x01	; 1
    15a0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	64 e0       	ldi	r22, 0x04	; 4
    15a8:	40 e0       	ldi	r20, 0x00	; 0
    15aa:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    15ae:	29 c0       	rjmp	.+82     	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 8:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	60 e0       	ldi	r22, 0x00	; 0
    15b4:	40 e0       	ldi	r20, 0x00	; 0
    15b6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	61 e0       	ldi	r22, 0x01	; 1
    15be:	40 e0       	ldi	r20, 0x00	; 0
    15c0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    15c4:	81 e0       	ldi	r24, 0x01	; 1
    15c6:	62 e0       	ldi	r22, 0x02	; 2
    15c8:	40 e0       	ldi	r20, 0x00	; 0
    15ca:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	64 e0       	ldi	r22, 0x04	; 4
    15d2:	41 e0       	ldi	r20, 0x01	; 1
    15d4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    15d8:	14 c0       	rjmp	.+40     	; 0x1602 <HSSD_voidDisplay+0x254>
	break;
case 9:
	MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	60 e0       	ldi	r22, 0x00	; 0
    15de:	41 e0       	ldi	r20, 0x01	; 1
    15e0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	61 e0       	ldi	r22, 0x01	; 1
    15e8:	40 e0       	ldi	r20, 0x00	; 0
    15ea:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    15ee:	81 e0       	ldi	r24, 0x01	; 1
    15f0:	62 e0       	ldi	r22, 0x02	; 2
    15f2:	40 e0       	ldi	r20, 0x00	; 0
    15f4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	64 e0       	ldi	r22, 0x04	; 4
    15fc:	41 e0       	ldi	r20, 0x01	; 1
    15fe:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
default:
	break;

}

}
    1602:	0f 90       	pop	r0
    1604:	0f 90       	pop	r0
    1606:	0f 90       	pop	r0
    1608:	cf 91       	pop	r28
    160a:	df 91       	pop	r29
    160c:	08 95       	ret

0000160e <HSSD_voidDisplayNumberByCom>:
void HSSD_voidDisplayNumberByCom(u8 A_u8number,u8 A_u8COM){
    160e:	df 93       	push	r29
    1610:	cf 93       	push	r28
    1612:	cd b7       	in	r28, 0x3d	; 61
    1614:	de b7       	in	r29, 0x3e	; 62
    1616:	2c 97       	sbiw	r28, 0x0c	; 12
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	f8 94       	cli
    161c:	de bf       	out	0x3e, r29	; 62
    161e:	0f be       	out	0x3f, r0	; 63
    1620:	cd bf       	out	0x3d, r28	; 61
    1622:	89 83       	std	Y+1, r24	; 0x01
    1624:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8COM){
    1626:	8a 81       	ldd	r24, Y+2	; 0x02
    1628:	28 2f       	mov	r18, r24
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	3c 87       	std	Y+12, r19	; 0x0c
    162e:	2b 87       	std	Y+11, r18	; 0x0b
    1630:	8b 85       	ldd	r24, Y+11	; 0x0b
    1632:	9c 85       	ldd	r25, Y+12	; 0x0c
    1634:	83 30       	cpi	r24, 0x03	; 3
    1636:	91 05       	cpc	r25, r1
    1638:	c9 f0       	breq	.+50     	; 0x166c <HSSD_voidDisplayNumberByCom+0x5e>
    163a:	2b 85       	ldd	r18, Y+11	; 0x0b
    163c:	3c 85       	ldd	r19, Y+12	; 0x0c
    163e:	24 30       	cpi	r18, 0x04	; 4
    1640:	31 05       	cpc	r19, r1
    1642:	3c f4       	brge	.+14     	; 0x1652 <HSSD_voidDisplayNumberByCom+0x44>
    1644:	8b 85       	ldd	r24, Y+11	; 0x0b
    1646:	9c 85       	ldd	r25, Y+12	; 0x0c
    1648:	82 30       	cpi	r24, 0x02	; 2
    164a:	91 05       	cpc	r25, r1
    164c:	09 f4       	brne	.+2      	; 0x1650 <HSSD_voidDisplayNumberByCom+0x42>
    164e:	46 c1       	rjmp	.+652    	; 0x18dc <HSSD_voidDisplayNumberByCom+0x2ce>
    1650:	ec c4       	rjmp	.+2520   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1652:	2b 85       	ldd	r18, Y+11	; 0x0b
    1654:	3c 85       	ldd	r19, Y+12	; 0x0c
    1656:	25 30       	cpi	r18, 0x05	; 5
    1658:	31 05       	cpc	r19, r1
    165a:	09 f4       	brne	.+2      	; 0x165e <HSSD_voidDisplayNumberByCom+0x50>
    165c:	77 c2       	rjmp	.+1262   	; 0x1b4c <HSSD_voidDisplayNumberByCom+0x53e>
    165e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1660:	9c 85       	ldd	r25, Y+12	; 0x0c
    1662:	86 30       	cpi	r24, 0x06	; 6
    1664:	91 05       	cpc	r25, r1
    1666:	09 f4       	brne	.+2      	; 0x166a <HSSD_voidDisplayNumberByCom+0x5c>
    1668:	a9 c3       	rjmp	.+1874   	; 0x1dbc <HSSD_voidDisplayNumberByCom+0x7ae>
    166a:	df c4       	rjmp	.+2494   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
	case COM1:
		MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_LOW);
    166c:	80 e0       	ldi	r24, 0x00	; 0
    166e:	63 e0       	ldi	r22, 0x03	; 3
    1670:	40 e0       	ldi	r20, 0x00	; 0
    1672:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	62 e0       	ldi	r22, 0x02	; 2
    167a:	41 e0       	ldi	r20, 0x01	; 1
    167c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    1680:	81 e0       	ldi	r24, 0x01	; 1
    1682:	65 e0       	ldi	r22, 0x05	; 5
    1684:	41 e0       	ldi	r20, 0x01	; 1
    1686:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	66 e0       	ldi	r22, 0x06	; 6
    168e:	41 e0       	ldi	r20, 0x01	; 1
    1690:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		switch(A_u8number)
    1694:	89 81       	ldd	r24, Y+1	; 0x01
    1696:	28 2f       	mov	r18, r24
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	3a 87       	std	Y+10, r19	; 0x0a
    169c:	29 87       	std	Y+9, r18	; 0x09
    169e:	89 85       	ldd	r24, Y+9	; 0x09
    16a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    16a2:	84 30       	cpi	r24, 0x04	; 4
    16a4:	91 05       	cpc	r25, r1
    16a6:	09 f4       	brne	.+2      	; 0x16aa <HSSD_voidDisplayNumberByCom+0x9c>
    16a8:	9b c0       	rjmp	.+310    	; 0x17e0 <HSSD_voidDisplayNumberByCom+0x1d2>
    16aa:	29 85       	ldd	r18, Y+9	; 0x09
    16ac:	3a 85       	ldd	r19, Y+10	; 0x0a
    16ae:	25 30       	cpi	r18, 0x05	; 5
    16b0:	31 05       	cpc	r19, r1
    16b2:	ec f4       	brge	.+58     	; 0x16ee <HSSD_voidDisplayNumberByCom+0xe0>
    16b4:	89 85       	ldd	r24, Y+9	; 0x09
    16b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    16b8:	81 30       	cpi	r24, 0x01	; 1
    16ba:	91 05       	cpc	r25, r1
    16bc:	09 f4       	brne	.+2      	; 0x16c0 <HSSD_voidDisplayNumberByCom+0xb2>
    16be:	51 c0       	rjmp	.+162    	; 0x1762 <HSSD_voidDisplayNumberByCom+0x154>
    16c0:	29 85       	ldd	r18, Y+9	; 0x09
    16c2:	3a 85       	ldd	r19, Y+10	; 0x0a
    16c4:	22 30       	cpi	r18, 0x02	; 2
    16c6:	31 05       	cpc	r19, r1
    16c8:	2c f4       	brge	.+10     	; 0x16d4 <HSSD_voidDisplayNumberByCom+0xc6>
    16ca:	89 85       	ldd	r24, Y+9	; 0x09
    16cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ce:	00 97       	sbiw	r24, 0x00	; 0
    16d0:	99 f1       	breq	.+102    	; 0x1738 <HSSD_voidDisplayNumberByCom+0x12a>
    16d2:	ab c4       	rjmp	.+2390   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    16d4:	29 85       	ldd	r18, Y+9	; 0x09
    16d6:	3a 85       	ldd	r19, Y+10	; 0x0a
    16d8:	22 30       	cpi	r18, 0x02	; 2
    16da:	31 05       	cpc	r19, r1
    16dc:	09 f4       	brne	.+2      	; 0x16e0 <HSSD_voidDisplayNumberByCom+0xd2>
    16de:	56 c0       	rjmp	.+172    	; 0x178c <HSSD_voidDisplayNumberByCom+0x17e>
    16e0:	89 85       	ldd	r24, Y+9	; 0x09
    16e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e4:	83 30       	cpi	r24, 0x03	; 3
    16e6:	91 05       	cpc	r25, r1
    16e8:	09 f4       	brne	.+2      	; 0x16ec <HSSD_voidDisplayNumberByCom+0xde>
    16ea:	65 c0       	rjmp	.+202    	; 0x17b6 <HSSD_voidDisplayNumberByCom+0x1a8>
    16ec:	9e c4       	rjmp	.+2364   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    16ee:	29 85       	ldd	r18, Y+9	; 0x09
    16f0:	3a 85       	ldd	r19, Y+10	; 0x0a
    16f2:	27 30       	cpi	r18, 0x07	; 7
    16f4:	31 05       	cpc	r19, r1
    16f6:	09 f4       	brne	.+2      	; 0x16fa <HSSD_voidDisplayNumberByCom+0xec>
    16f8:	b2 c0       	rjmp	.+356    	; 0x185e <HSSD_voidDisplayNumberByCom+0x250>
    16fa:	89 85       	ldd	r24, Y+9	; 0x09
    16fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16fe:	88 30       	cpi	r24, 0x08	; 8
    1700:	91 05       	cpc	r25, r1
    1702:	6c f4       	brge	.+26     	; 0x171e <HSSD_voidDisplayNumberByCom+0x110>
    1704:	29 85       	ldd	r18, Y+9	; 0x09
    1706:	3a 85       	ldd	r19, Y+10	; 0x0a
    1708:	25 30       	cpi	r18, 0x05	; 5
    170a:	31 05       	cpc	r19, r1
    170c:	09 f4       	brne	.+2      	; 0x1710 <HSSD_voidDisplayNumberByCom+0x102>
    170e:	7d c0       	rjmp	.+250    	; 0x180a <HSSD_voidDisplayNumberByCom+0x1fc>
    1710:	89 85       	ldd	r24, Y+9	; 0x09
    1712:	9a 85       	ldd	r25, Y+10	; 0x0a
    1714:	86 30       	cpi	r24, 0x06	; 6
    1716:	91 05       	cpc	r25, r1
    1718:	09 f4       	brne	.+2      	; 0x171c <HSSD_voidDisplayNumberByCom+0x10e>
    171a:	8c c0       	rjmp	.+280    	; 0x1834 <HSSD_voidDisplayNumberByCom+0x226>
    171c:	86 c4       	rjmp	.+2316   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    171e:	29 85       	ldd	r18, Y+9	; 0x09
    1720:	3a 85       	ldd	r19, Y+10	; 0x0a
    1722:	28 30       	cpi	r18, 0x08	; 8
    1724:	31 05       	cpc	r19, r1
    1726:	09 f4       	brne	.+2      	; 0x172a <HSSD_voidDisplayNumberByCom+0x11c>
    1728:	af c0       	rjmp	.+350    	; 0x1888 <HSSD_voidDisplayNumberByCom+0x27a>
    172a:	89 85       	ldd	r24, Y+9	; 0x09
    172c:	9a 85       	ldd	r25, Y+10	; 0x0a
    172e:	89 30       	cpi	r24, 0x09	; 9
    1730:	91 05       	cpc	r25, r1
    1732:	09 f4       	brne	.+2      	; 0x1736 <HSSD_voidDisplayNumberByCom+0x128>
    1734:	be c0       	rjmp	.+380    	; 0x18b2 <HSSD_voidDisplayNumberByCom+0x2a4>
    1736:	79 c4       	rjmp	.+2290   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		{
		case 0:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	60 e0       	ldi	r22, 0x00	; 0
    173c:	40 e0       	ldi	r20, 0x00	; 0
    173e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	61 e0       	ldi	r22, 0x01	; 1
    1746:	40 e0       	ldi	r20, 0x00	; 0
    1748:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    174c:	81 e0       	ldi	r24, 0x01	; 1
    174e:	62 e0       	ldi	r22, 0x02	; 2
    1750:	40 e0       	ldi	r20, 0x00	; 0
    1752:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1756:	81 e0       	ldi	r24, 0x01	; 1
    1758:	64 e0       	ldi	r22, 0x04	; 4
    175a:	40 e0       	ldi	r20, 0x00	; 0
    175c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1760:	64 c4       	rjmp	.+2248   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 1:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	60 e0       	ldi	r22, 0x00	; 0
    1766:	41 e0       	ldi	r20, 0x01	; 1
    1768:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    176c:	81 e0       	ldi	r24, 0x01	; 1
    176e:	61 e0       	ldi	r22, 0x01	; 1
    1770:	40 e0       	ldi	r20, 0x00	; 0
    1772:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1776:	81 e0       	ldi	r24, 0x01	; 1
    1778:	62 e0       	ldi	r22, 0x02	; 2
    177a:	40 e0       	ldi	r20, 0x00	; 0
    177c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	64 e0       	ldi	r22, 0x04	; 4
    1784:	40 e0       	ldi	r20, 0x00	; 0
    1786:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    178a:	4f c4       	rjmp	.+2206   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 2:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	40 e0       	ldi	r20, 0x00	; 0
    1792:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1796:	81 e0       	ldi	r24, 0x01	; 1
    1798:	61 e0       	ldi	r22, 0x01	; 1
    179a:	41 e0       	ldi	r20, 0x01	; 1
    179c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	62 e0       	ldi	r22, 0x02	; 2
    17a4:	40 e0       	ldi	r20, 0x00	; 0
    17a6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	64 e0       	ldi	r22, 0x04	; 4
    17ae:	40 e0       	ldi	r20, 0x00	; 0
    17b0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    17b4:	3a c4       	rjmp	.+2164   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 3:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	41 e0       	ldi	r20, 0x01	; 1
    17bc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	61 e0       	ldi	r22, 0x01	; 1
    17c4:	41 e0       	ldi	r20, 0x01	; 1
    17c6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	62 e0       	ldi	r22, 0x02	; 2
    17ce:	40 e0       	ldi	r20, 0x00	; 0
    17d0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	64 e0       	ldi	r22, 0x04	; 4
    17d8:	40 e0       	ldi	r20, 0x00	; 0
    17da:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    17de:	25 c4       	rjmp	.+2122   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 4:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    17e0:	81 e0       	ldi	r24, 0x01	; 1
    17e2:	60 e0       	ldi	r22, 0x00	; 0
    17e4:	40 e0       	ldi	r20, 0x00	; 0
    17e6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	61 e0       	ldi	r22, 0x01	; 1
    17ee:	40 e0       	ldi	r20, 0x00	; 0
    17f0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    17f4:	81 e0       	ldi	r24, 0x01	; 1
    17f6:	62 e0       	ldi	r22, 0x02	; 2
    17f8:	41 e0       	ldi	r20, 0x01	; 1
    17fa:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	64 e0       	ldi	r22, 0x04	; 4
    1802:	40 e0       	ldi	r20, 0x00	; 0
    1804:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1808:	10 c4       	rjmp	.+2080   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 5:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    180a:	81 e0       	ldi	r24, 0x01	; 1
    180c:	60 e0       	ldi	r22, 0x00	; 0
    180e:	41 e0       	ldi	r20, 0x01	; 1
    1810:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	61 e0       	ldi	r22, 0x01	; 1
    1818:	40 e0       	ldi	r20, 0x00	; 0
    181a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    181e:	81 e0       	ldi	r24, 0x01	; 1
    1820:	62 e0       	ldi	r22, 0x02	; 2
    1822:	41 e0       	ldi	r20, 0x01	; 1
    1824:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	64 e0       	ldi	r22, 0x04	; 4
    182c:	40 e0       	ldi	r20, 0x00	; 0
    182e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1832:	fb c3       	rjmp	.+2038   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 6:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	60 e0       	ldi	r22, 0x00	; 0
    1838:	40 e0       	ldi	r20, 0x00	; 0
    183a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	61 e0       	ldi	r22, 0x01	; 1
    1842:	41 e0       	ldi	r20, 0x01	; 1
    1844:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1848:	81 e0       	ldi	r24, 0x01	; 1
    184a:	62 e0       	ldi	r22, 0x02	; 2
    184c:	41 e0       	ldi	r20, 0x01	; 1
    184e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	64 e0       	ldi	r22, 0x04	; 4
    1856:	40 e0       	ldi	r20, 0x00	; 0
    1858:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    185c:	e6 c3       	rjmp	.+1996   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 7:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    185e:	81 e0       	ldi	r24, 0x01	; 1
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	41 e0       	ldi	r20, 0x01	; 1
    1864:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	61 e0       	ldi	r22, 0x01	; 1
    186c:	41 e0       	ldi	r20, 0x01	; 1
    186e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1872:	81 e0       	ldi	r24, 0x01	; 1
    1874:	62 e0       	ldi	r22, 0x02	; 2
    1876:	41 e0       	ldi	r20, 0x01	; 1
    1878:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	64 e0       	ldi	r22, 0x04	; 4
    1880:	40 e0       	ldi	r20, 0x00	; 0
    1882:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1886:	d1 c3       	rjmp	.+1954   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 8:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1888:	81 e0       	ldi	r24, 0x01	; 1
    188a:	60 e0       	ldi	r22, 0x00	; 0
    188c:	40 e0       	ldi	r20, 0x00	; 0
    188e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1892:	81 e0       	ldi	r24, 0x01	; 1
    1894:	61 e0       	ldi	r22, 0x01	; 1
    1896:	40 e0       	ldi	r20, 0x00	; 0
    1898:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	62 e0       	ldi	r22, 0x02	; 2
    18a0:	40 e0       	ldi	r20, 0x00	; 0
    18a2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	64 e0       	ldi	r22, 0x04	; 4
    18aa:	41 e0       	ldi	r20, 0x01	; 1
    18ac:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    18b0:	bc c3       	rjmp	.+1912   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 9:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    18b2:	81 e0       	ldi	r24, 0x01	; 1
    18b4:	60 e0       	ldi	r22, 0x00	; 0
    18b6:	41 e0       	ldi	r20, 0x01	; 1
    18b8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	61 e0       	ldi	r22, 0x01	; 1
    18c0:	40 e0       	ldi	r20, 0x00	; 0
    18c2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    18c6:	81 e0       	ldi	r24, 0x01	; 1
    18c8:	62 e0       	ldi	r22, 0x02	; 2
    18ca:	40 e0       	ldi	r20, 0x00	; 0
    18cc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	64 e0       	ldi	r22, 0x04	; 4
    18d4:	41 e0       	ldi	r20, 0x01	; 1
    18d6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    18da:	a7 c3       	rjmp	.+1870   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		}


		break;
	case COM2:
		MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    18dc:	80 e0       	ldi	r24, 0x00	; 0
    18de:	63 e0       	ldi	r22, 0x03	; 3
    18e0:	41 e0       	ldi	r20, 0x01	; 1
    18e2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_LOW);
    18e6:	80 e0       	ldi	r24, 0x00	; 0
    18e8:	62 e0       	ldi	r22, 0x02	; 2
    18ea:	40 e0       	ldi	r20, 0x00	; 0
    18ec:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    18f0:	81 e0       	ldi	r24, 0x01	; 1
    18f2:	65 e0       	ldi	r22, 0x05	; 5
    18f4:	41 e0       	ldi	r20, 0x01	; 1
    18f6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	66 e0       	ldi	r22, 0x06	; 6
    18fe:	41 e0       	ldi	r20, 0x01	; 1
    1900:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		switch(A_u8number)
    1904:	89 81       	ldd	r24, Y+1	; 0x01
    1906:	28 2f       	mov	r18, r24
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	38 87       	std	Y+8, r19	; 0x08
    190c:	2f 83       	std	Y+7, r18	; 0x07
    190e:	8f 81       	ldd	r24, Y+7	; 0x07
    1910:	98 85       	ldd	r25, Y+8	; 0x08
    1912:	84 30       	cpi	r24, 0x04	; 4
    1914:	91 05       	cpc	r25, r1
    1916:	09 f4       	brne	.+2      	; 0x191a <HSSD_voidDisplayNumberByCom+0x30c>
    1918:	9b c0       	rjmp	.+310    	; 0x1a50 <HSSD_voidDisplayNumberByCom+0x442>
    191a:	2f 81       	ldd	r18, Y+7	; 0x07
    191c:	38 85       	ldd	r19, Y+8	; 0x08
    191e:	25 30       	cpi	r18, 0x05	; 5
    1920:	31 05       	cpc	r19, r1
    1922:	ec f4       	brge	.+58     	; 0x195e <HSSD_voidDisplayNumberByCom+0x350>
    1924:	8f 81       	ldd	r24, Y+7	; 0x07
    1926:	98 85       	ldd	r25, Y+8	; 0x08
    1928:	81 30       	cpi	r24, 0x01	; 1
    192a:	91 05       	cpc	r25, r1
    192c:	09 f4       	brne	.+2      	; 0x1930 <HSSD_voidDisplayNumberByCom+0x322>
    192e:	51 c0       	rjmp	.+162    	; 0x19d2 <HSSD_voidDisplayNumberByCom+0x3c4>
    1930:	2f 81       	ldd	r18, Y+7	; 0x07
    1932:	38 85       	ldd	r19, Y+8	; 0x08
    1934:	22 30       	cpi	r18, 0x02	; 2
    1936:	31 05       	cpc	r19, r1
    1938:	2c f4       	brge	.+10     	; 0x1944 <HSSD_voidDisplayNumberByCom+0x336>
    193a:	8f 81       	ldd	r24, Y+7	; 0x07
    193c:	98 85       	ldd	r25, Y+8	; 0x08
    193e:	00 97       	sbiw	r24, 0x00	; 0
    1940:	99 f1       	breq	.+102    	; 0x19a8 <HSSD_voidDisplayNumberByCom+0x39a>
    1942:	73 c3       	rjmp	.+1766   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1944:	2f 81       	ldd	r18, Y+7	; 0x07
    1946:	38 85       	ldd	r19, Y+8	; 0x08
    1948:	22 30       	cpi	r18, 0x02	; 2
    194a:	31 05       	cpc	r19, r1
    194c:	09 f4       	brne	.+2      	; 0x1950 <HSSD_voidDisplayNumberByCom+0x342>
    194e:	56 c0       	rjmp	.+172    	; 0x19fc <HSSD_voidDisplayNumberByCom+0x3ee>
    1950:	8f 81       	ldd	r24, Y+7	; 0x07
    1952:	98 85       	ldd	r25, Y+8	; 0x08
    1954:	83 30       	cpi	r24, 0x03	; 3
    1956:	91 05       	cpc	r25, r1
    1958:	09 f4       	brne	.+2      	; 0x195c <HSSD_voidDisplayNumberByCom+0x34e>
    195a:	65 c0       	rjmp	.+202    	; 0x1a26 <HSSD_voidDisplayNumberByCom+0x418>
    195c:	66 c3       	rjmp	.+1740   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    195e:	2f 81       	ldd	r18, Y+7	; 0x07
    1960:	38 85       	ldd	r19, Y+8	; 0x08
    1962:	27 30       	cpi	r18, 0x07	; 7
    1964:	31 05       	cpc	r19, r1
    1966:	09 f4       	brne	.+2      	; 0x196a <HSSD_voidDisplayNumberByCom+0x35c>
    1968:	b2 c0       	rjmp	.+356    	; 0x1ace <HSSD_voidDisplayNumberByCom+0x4c0>
    196a:	8f 81       	ldd	r24, Y+7	; 0x07
    196c:	98 85       	ldd	r25, Y+8	; 0x08
    196e:	88 30       	cpi	r24, 0x08	; 8
    1970:	91 05       	cpc	r25, r1
    1972:	6c f4       	brge	.+26     	; 0x198e <HSSD_voidDisplayNumberByCom+0x380>
    1974:	2f 81       	ldd	r18, Y+7	; 0x07
    1976:	38 85       	ldd	r19, Y+8	; 0x08
    1978:	25 30       	cpi	r18, 0x05	; 5
    197a:	31 05       	cpc	r19, r1
    197c:	09 f4       	brne	.+2      	; 0x1980 <HSSD_voidDisplayNumberByCom+0x372>
    197e:	7d c0       	rjmp	.+250    	; 0x1a7a <HSSD_voidDisplayNumberByCom+0x46c>
    1980:	8f 81       	ldd	r24, Y+7	; 0x07
    1982:	98 85       	ldd	r25, Y+8	; 0x08
    1984:	86 30       	cpi	r24, 0x06	; 6
    1986:	91 05       	cpc	r25, r1
    1988:	09 f4       	brne	.+2      	; 0x198c <HSSD_voidDisplayNumberByCom+0x37e>
    198a:	8c c0       	rjmp	.+280    	; 0x1aa4 <HSSD_voidDisplayNumberByCom+0x496>
    198c:	4e c3       	rjmp	.+1692   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    198e:	2f 81       	ldd	r18, Y+7	; 0x07
    1990:	38 85       	ldd	r19, Y+8	; 0x08
    1992:	28 30       	cpi	r18, 0x08	; 8
    1994:	31 05       	cpc	r19, r1
    1996:	09 f4       	brne	.+2      	; 0x199a <HSSD_voidDisplayNumberByCom+0x38c>
    1998:	af c0       	rjmp	.+350    	; 0x1af8 <HSSD_voidDisplayNumberByCom+0x4ea>
    199a:	8f 81       	ldd	r24, Y+7	; 0x07
    199c:	98 85       	ldd	r25, Y+8	; 0x08
    199e:	89 30       	cpi	r24, 0x09	; 9
    19a0:	91 05       	cpc	r25, r1
    19a2:	09 f4       	brne	.+2      	; 0x19a6 <HSSD_voidDisplayNumberByCom+0x398>
    19a4:	be c0       	rjmp	.+380    	; 0x1b22 <HSSD_voidDisplayNumberByCom+0x514>
    19a6:	41 c3       	rjmp	.+1666   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		{
		case 0:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    19a8:	81 e0       	ldi	r24, 0x01	; 1
    19aa:	60 e0       	ldi	r22, 0x00	; 0
    19ac:	40 e0       	ldi	r20, 0x00	; 0
    19ae:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    19b2:	81 e0       	ldi	r24, 0x01	; 1
    19b4:	61 e0       	ldi	r22, 0x01	; 1
    19b6:	40 e0       	ldi	r20, 0x00	; 0
    19b8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    19bc:	81 e0       	ldi	r24, 0x01	; 1
    19be:	62 e0       	ldi	r22, 0x02	; 2
    19c0:	40 e0       	ldi	r20, 0x00	; 0
    19c2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    19c6:	81 e0       	ldi	r24, 0x01	; 1
    19c8:	64 e0       	ldi	r22, 0x04	; 4
    19ca:	40 e0       	ldi	r20, 0x00	; 0
    19cc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    19d0:	2c c3       	rjmp	.+1624   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 1:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	60 e0       	ldi	r22, 0x00	; 0
    19d6:	41 e0       	ldi	r20, 0x01	; 1
    19d8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	61 e0       	ldi	r22, 0x01	; 1
    19e0:	40 e0       	ldi	r20, 0x00	; 0
    19e2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	62 e0       	ldi	r22, 0x02	; 2
    19ea:	40 e0       	ldi	r20, 0x00	; 0
    19ec:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    19f0:	81 e0       	ldi	r24, 0x01	; 1
    19f2:	64 e0       	ldi	r22, 0x04	; 4
    19f4:	40 e0       	ldi	r20, 0x00	; 0
    19f6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    19fa:	17 c3       	rjmp	.+1582   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 2:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    19fc:	81 e0       	ldi	r24, 0x01	; 1
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	40 e0       	ldi	r20, 0x00	; 0
    1a02:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	61 e0       	ldi	r22, 0x01	; 1
    1a0a:	41 e0       	ldi	r20, 0x01	; 1
    1a0c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	62 e0       	ldi	r22, 0x02	; 2
    1a14:	40 e0       	ldi	r20, 0x00	; 0
    1a16:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1a1a:	81 e0       	ldi	r24, 0x01	; 1
    1a1c:	64 e0       	ldi	r22, 0x04	; 4
    1a1e:	40 e0       	ldi	r20, 0x00	; 0
    1a20:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1a24:	02 c3       	rjmp	.+1540   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 3:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1a26:	81 e0       	ldi	r24, 0x01	; 1
    1a28:	60 e0       	ldi	r22, 0x00	; 0
    1a2a:	41 e0       	ldi	r20, 0x01	; 1
    1a2c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	61 e0       	ldi	r22, 0x01	; 1
    1a34:	41 e0       	ldi	r20, 0x01	; 1
    1a36:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	62 e0       	ldi	r22, 0x02	; 2
    1a3e:	40 e0       	ldi	r20, 0x00	; 0
    1a40:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	64 e0       	ldi	r22, 0x04	; 4
    1a48:	40 e0       	ldi	r20, 0x00	; 0
    1a4a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1a4e:	ed c2       	rjmp	.+1498   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 4:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	60 e0       	ldi	r22, 0x00	; 0
    1a54:	40 e0       	ldi	r20, 0x00	; 0
    1a56:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	61 e0       	ldi	r22, 0x01	; 1
    1a5e:	40 e0       	ldi	r20, 0x00	; 0
    1a60:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1a64:	81 e0       	ldi	r24, 0x01	; 1
    1a66:	62 e0       	ldi	r22, 0x02	; 2
    1a68:	41 e0       	ldi	r20, 0x01	; 1
    1a6a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	64 e0       	ldi	r22, 0x04	; 4
    1a72:	40 e0       	ldi	r20, 0x00	; 0
    1a74:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1a78:	d8 c2       	rjmp	.+1456   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 5:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	41 e0       	ldi	r20, 0x01	; 1
    1a80:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	61 e0       	ldi	r22, 0x01	; 1
    1a88:	40 e0       	ldi	r20, 0x00	; 0
    1a8a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1a8e:	81 e0       	ldi	r24, 0x01	; 1
    1a90:	62 e0       	ldi	r22, 0x02	; 2
    1a92:	41 e0       	ldi	r20, 0x01	; 1
    1a94:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	64 e0       	ldi	r22, 0x04	; 4
    1a9c:	40 e0       	ldi	r20, 0x00	; 0
    1a9e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1aa2:	c3 c2       	rjmp	.+1414   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 6:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1aa4:	81 e0       	ldi	r24, 0x01	; 1
    1aa6:	60 e0       	ldi	r22, 0x00	; 0
    1aa8:	40 e0       	ldi	r20, 0x00	; 0
    1aaa:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	61 e0       	ldi	r22, 0x01	; 1
    1ab2:	41 e0       	ldi	r20, 0x01	; 1
    1ab4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	62 e0       	ldi	r22, 0x02	; 2
    1abc:	41 e0       	ldi	r20, 0x01	; 1
    1abe:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	64 e0       	ldi	r22, 0x04	; 4
    1ac6:	40 e0       	ldi	r20, 0x00	; 0
    1ac8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1acc:	ae c2       	rjmp	.+1372   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 7:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	60 e0       	ldi	r22, 0x00	; 0
    1ad2:	41 e0       	ldi	r20, 0x01	; 1
    1ad4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1ad8:	81 e0       	ldi	r24, 0x01	; 1
    1ada:	61 e0       	ldi	r22, 0x01	; 1
    1adc:	41 e0       	ldi	r20, 0x01	; 1
    1ade:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	62 e0       	ldi	r22, 0x02	; 2
    1ae6:	41 e0       	ldi	r20, 0x01	; 1
    1ae8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1aec:	81 e0       	ldi	r24, 0x01	; 1
    1aee:	64 e0       	ldi	r22, 0x04	; 4
    1af0:	40 e0       	ldi	r20, 0x00	; 0
    1af2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1af6:	99 c2       	rjmp	.+1330   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 8:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	60 e0       	ldi	r22, 0x00	; 0
    1afc:	40 e0       	ldi	r20, 0x00	; 0
    1afe:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1b02:	81 e0       	ldi	r24, 0x01	; 1
    1b04:	61 e0       	ldi	r22, 0x01	; 1
    1b06:	40 e0       	ldi	r20, 0x00	; 0
    1b08:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	62 e0       	ldi	r22, 0x02	; 2
    1b10:	40 e0       	ldi	r20, 0x00	; 0
    1b12:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	64 e0       	ldi	r22, 0x04	; 4
    1b1a:	41 e0       	ldi	r20, 0x01	; 1
    1b1c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1b20:	84 c2       	rjmp	.+1288   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 9:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1b22:	81 e0       	ldi	r24, 0x01	; 1
    1b24:	60 e0       	ldi	r22, 0x00	; 0
    1b26:	41 e0       	ldi	r20, 0x01	; 1
    1b28:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1b2c:	81 e0       	ldi	r24, 0x01	; 1
    1b2e:	61 e0       	ldi	r22, 0x01	; 1
    1b30:	40 e0       	ldi	r20, 0x00	; 0
    1b32:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1b36:	81 e0       	ldi	r24, 0x01	; 1
    1b38:	62 e0       	ldi	r22, 0x02	; 2
    1b3a:	40 e0       	ldi	r20, 0x00	; 0
    1b3c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    1b40:	81 e0       	ldi	r24, 0x01	; 1
    1b42:	64 e0       	ldi	r22, 0x04	; 4
    1b44:	41 e0       	ldi	r20, 0x01	; 1
    1b46:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1b4a:	6f c2       	rjmp	.+1246   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		}


			break;
	case COM3:
		MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    1b4c:	80 e0       	ldi	r24, 0x00	; 0
    1b4e:	63 e0       	ldi	r22, 0x03	; 3
    1b50:	41 e0       	ldi	r20, 0x01	; 1
    1b52:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	62 e0       	ldi	r22, 0x02	; 2
    1b5a:	41 e0       	ldi	r20, 0x01	; 1
    1b5c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_LOW);
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	65 e0       	ldi	r22, 0x05	; 5
    1b64:	40 e0       	ldi	r20, 0x00	; 0
    1b66:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	66 e0       	ldi	r22, 0x06	; 6
    1b6e:	41 e0       	ldi	r20, 0x01	; 1
    1b70:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		switch(A_u8number)
    1b74:	89 81       	ldd	r24, Y+1	; 0x01
    1b76:	28 2f       	mov	r18, r24
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	3e 83       	std	Y+6, r19	; 0x06
    1b7c:	2d 83       	std	Y+5, r18	; 0x05
    1b7e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b80:	9e 81       	ldd	r25, Y+6	; 0x06
    1b82:	84 30       	cpi	r24, 0x04	; 4
    1b84:	91 05       	cpc	r25, r1
    1b86:	09 f4       	brne	.+2      	; 0x1b8a <HSSD_voidDisplayNumberByCom+0x57c>
    1b88:	9b c0       	rjmp	.+310    	; 0x1cc0 <HSSD_voidDisplayNumberByCom+0x6b2>
    1b8a:	2d 81       	ldd	r18, Y+5	; 0x05
    1b8c:	3e 81       	ldd	r19, Y+6	; 0x06
    1b8e:	25 30       	cpi	r18, 0x05	; 5
    1b90:	31 05       	cpc	r19, r1
    1b92:	ec f4       	brge	.+58     	; 0x1bce <HSSD_voidDisplayNumberByCom+0x5c0>
    1b94:	8d 81       	ldd	r24, Y+5	; 0x05
    1b96:	9e 81       	ldd	r25, Y+6	; 0x06
    1b98:	81 30       	cpi	r24, 0x01	; 1
    1b9a:	91 05       	cpc	r25, r1
    1b9c:	09 f4       	brne	.+2      	; 0x1ba0 <HSSD_voidDisplayNumberByCom+0x592>
    1b9e:	51 c0       	rjmp	.+162    	; 0x1c42 <HSSD_voidDisplayNumberByCom+0x634>
    1ba0:	2d 81       	ldd	r18, Y+5	; 0x05
    1ba2:	3e 81       	ldd	r19, Y+6	; 0x06
    1ba4:	22 30       	cpi	r18, 0x02	; 2
    1ba6:	31 05       	cpc	r19, r1
    1ba8:	2c f4       	brge	.+10     	; 0x1bb4 <HSSD_voidDisplayNumberByCom+0x5a6>
    1baa:	8d 81       	ldd	r24, Y+5	; 0x05
    1bac:	9e 81       	ldd	r25, Y+6	; 0x06
    1bae:	00 97       	sbiw	r24, 0x00	; 0
    1bb0:	99 f1       	breq	.+102    	; 0x1c18 <HSSD_voidDisplayNumberByCom+0x60a>
    1bb2:	3b c2       	rjmp	.+1142   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1bb4:	2d 81       	ldd	r18, Y+5	; 0x05
    1bb6:	3e 81       	ldd	r19, Y+6	; 0x06
    1bb8:	22 30       	cpi	r18, 0x02	; 2
    1bba:	31 05       	cpc	r19, r1
    1bbc:	09 f4       	brne	.+2      	; 0x1bc0 <HSSD_voidDisplayNumberByCom+0x5b2>
    1bbe:	56 c0       	rjmp	.+172    	; 0x1c6c <HSSD_voidDisplayNumberByCom+0x65e>
    1bc0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bc2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bc4:	83 30       	cpi	r24, 0x03	; 3
    1bc6:	91 05       	cpc	r25, r1
    1bc8:	09 f4       	brne	.+2      	; 0x1bcc <HSSD_voidDisplayNumberByCom+0x5be>
    1bca:	65 c0       	rjmp	.+202    	; 0x1c96 <HSSD_voidDisplayNumberByCom+0x688>
    1bcc:	2e c2       	rjmp	.+1116   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1bce:	2d 81       	ldd	r18, Y+5	; 0x05
    1bd0:	3e 81       	ldd	r19, Y+6	; 0x06
    1bd2:	27 30       	cpi	r18, 0x07	; 7
    1bd4:	31 05       	cpc	r19, r1
    1bd6:	09 f4       	brne	.+2      	; 0x1bda <HSSD_voidDisplayNumberByCom+0x5cc>
    1bd8:	b2 c0       	rjmp	.+356    	; 0x1d3e <HSSD_voidDisplayNumberByCom+0x730>
    1bda:	8d 81       	ldd	r24, Y+5	; 0x05
    1bdc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bde:	88 30       	cpi	r24, 0x08	; 8
    1be0:	91 05       	cpc	r25, r1
    1be2:	6c f4       	brge	.+26     	; 0x1bfe <HSSD_voidDisplayNumberByCom+0x5f0>
    1be4:	2d 81       	ldd	r18, Y+5	; 0x05
    1be6:	3e 81       	ldd	r19, Y+6	; 0x06
    1be8:	25 30       	cpi	r18, 0x05	; 5
    1bea:	31 05       	cpc	r19, r1
    1bec:	09 f4       	brne	.+2      	; 0x1bf0 <HSSD_voidDisplayNumberByCom+0x5e2>
    1bee:	7d c0       	rjmp	.+250    	; 0x1cea <HSSD_voidDisplayNumberByCom+0x6dc>
    1bf0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bf2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bf4:	86 30       	cpi	r24, 0x06	; 6
    1bf6:	91 05       	cpc	r25, r1
    1bf8:	09 f4       	brne	.+2      	; 0x1bfc <HSSD_voidDisplayNumberByCom+0x5ee>
    1bfa:	8c c0       	rjmp	.+280    	; 0x1d14 <HSSD_voidDisplayNumberByCom+0x706>
    1bfc:	16 c2       	rjmp	.+1068   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1bfe:	2d 81       	ldd	r18, Y+5	; 0x05
    1c00:	3e 81       	ldd	r19, Y+6	; 0x06
    1c02:	28 30       	cpi	r18, 0x08	; 8
    1c04:	31 05       	cpc	r19, r1
    1c06:	09 f4       	brne	.+2      	; 0x1c0a <HSSD_voidDisplayNumberByCom+0x5fc>
    1c08:	af c0       	rjmp	.+350    	; 0x1d68 <HSSD_voidDisplayNumberByCom+0x75a>
    1c0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c0c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c0e:	89 30       	cpi	r24, 0x09	; 9
    1c10:	91 05       	cpc	r25, r1
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <HSSD_voidDisplayNumberByCom+0x608>
    1c14:	be c0       	rjmp	.+380    	; 0x1d92 <HSSD_voidDisplayNumberByCom+0x784>
    1c16:	09 c2       	rjmp	.+1042   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		{
		case 0:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1c18:	81 e0       	ldi	r24, 0x01	; 1
    1c1a:	60 e0       	ldi	r22, 0x00	; 0
    1c1c:	40 e0       	ldi	r20, 0x00	; 0
    1c1e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	61 e0       	ldi	r22, 0x01	; 1
    1c26:	40 e0       	ldi	r20, 0x00	; 0
    1c28:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1c2c:	81 e0       	ldi	r24, 0x01	; 1
    1c2e:	62 e0       	ldi	r22, 0x02	; 2
    1c30:	40 e0       	ldi	r20, 0x00	; 0
    1c32:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1c36:	81 e0       	ldi	r24, 0x01	; 1
    1c38:	64 e0       	ldi	r22, 0x04	; 4
    1c3a:	40 e0       	ldi	r20, 0x00	; 0
    1c3c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1c40:	f4 c1       	rjmp	.+1000   	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 1:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1c42:	81 e0       	ldi	r24, 0x01	; 1
    1c44:	60 e0       	ldi	r22, 0x00	; 0
    1c46:	41 e0       	ldi	r20, 0x01	; 1
    1c48:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1c4c:	81 e0       	ldi	r24, 0x01	; 1
    1c4e:	61 e0       	ldi	r22, 0x01	; 1
    1c50:	40 e0       	ldi	r20, 0x00	; 0
    1c52:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1c56:	81 e0       	ldi	r24, 0x01	; 1
    1c58:	62 e0       	ldi	r22, 0x02	; 2
    1c5a:	40 e0       	ldi	r20, 0x00	; 0
    1c5c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	64 e0       	ldi	r22, 0x04	; 4
    1c64:	40 e0       	ldi	r20, 0x00	; 0
    1c66:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1c6a:	df c1       	rjmp	.+958    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 2:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1c6c:	81 e0       	ldi	r24, 0x01	; 1
    1c6e:	60 e0       	ldi	r22, 0x00	; 0
    1c70:	40 e0       	ldi	r20, 0x00	; 0
    1c72:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	61 e0       	ldi	r22, 0x01	; 1
    1c7a:	41 e0       	ldi	r20, 0x01	; 1
    1c7c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	62 e0       	ldi	r22, 0x02	; 2
    1c84:	40 e0       	ldi	r20, 0x00	; 0
    1c86:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1c8a:	81 e0       	ldi	r24, 0x01	; 1
    1c8c:	64 e0       	ldi	r22, 0x04	; 4
    1c8e:	40 e0       	ldi	r20, 0x00	; 0
    1c90:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1c94:	ca c1       	rjmp	.+916    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 3:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	41 e0       	ldi	r20, 0x01	; 1
    1c9c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	61 e0       	ldi	r22, 0x01	; 1
    1ca4:	41 e0       	ldi	r20, 0x01	; 1
    1ca6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	62 e0       	ldi	r22, 0x02	; 2
    1cae:	40 e0       	ldi	r20, 0x00	; 0
    1cb0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1cb4:	81 e0       	ldi	r24, 0x01	; 1
    1cb6:	64 e0       	ldi	r22, 0x04	; 4
    1cb8:	40 e0       	ldi	r20, 0x00	; 0
    1cba:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1cbe:	b5 c1       	rjmp	.+874    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 4:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1cc0:	81 e0       	ldi	r24, 0x01	; 1
    1cc2:	60 e0       	ldi	r22, 0x00	; 0
    1cc4:	40 e0       	ldi	r20, 0x00	; 0
    1cc6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1cca:	81 e0       	ldi	r24, 0x01	; 1
    1ccc:	61 e0       	ldi	r22, 0x01	; 1
    1cce:	40 e0       	ldi	r20, 0x00	; 0
    1cd0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1cd4:	81 e0       	ldi	r24, 0x01	; 1
    1cd6:	62 e0       	ldi	r22, 0x02	; 2
    1cd8:	41 e0       	ldi	r20, 0x01	; 1
    1cda:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1cde:	81 e0       	ldi	r24, 0x01	; 1
    1ce0:	64 e0       	ldi	r22, 0x04	; 4
    1ce2:	40 e0       	ldi	r20, 0x00	; 0
    1ce4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1ce8:	a0 c1       	rjmp	.+832    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 5:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1cea:	81 e0       	ldi	r24, 0x01	; 1
    1cec:	60 e0       	ldi	r22, 0x00	; 0
    1cee:	41 e0       	ldi	r20, 0x01	; 1
    1cf0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1cf4:	81 e0       	ldi	r24, 0x01	; 1
    1cf6:	61 e0       	ldi	r22, 0x01	; 1
    1cf8:	40 e0       	ldi	r20, 0x00	; 0
    1cfa:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1cfe:	81 e0       	ldi	r24, 0x01	; 1
    1d00:	62 e0       	ldi	r22, 0x02	; 2
    1d02:	41 e0       	ldi	r20, 0x01	; 1
    1d04:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	64 e0       	ldi	r22, 0x04	; 4
    1d0c:	40 e0       	ldi	r20, 0x00	; 0
    1d0e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1d12:	8b c1       	rjmp	.+790    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 6:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1d14:	81 e0       	ldi	r24, 0x01	; 1
    1d16:	60 e0       	ldi	r22, 0x00	; 0
    1d18:	40 e0       	ldi	r20, 0x00	; 0
    1d1a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1d1e:	81 e0       	ldi	r24, 0x01	; 1
    1d20:	61 e0       	ldi	r22, 0x01	; 1
    1d22:	41 e0       	ldi	r20, 0x01	; 1
    1d24:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1d28:	81 e0       	ldi	r24, 0x01	; 1
    1d2a:	62 e0       	ldi	r22, 0x02	; 2
    1d2c:	41 e0       	ldi	r20, 0x01	; 1
    1d2e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	64 e0       	ldi	r22, 0x04	; 4
    1d36:	40 e0       	ldi	r20, 0x00	; 0
    1d38:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1d3c:	76 c1       	rjmp	.+748    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 7:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1d3e:	81 e0       	ldi	r24, 0x01	; 1
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	41 e0       	ldi	r20, 0x01	; 1
    1d44:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1d48:	81 e0       	ldi	r24, 0x01	; 1
    1d4a:	61 e0       	ldi	r22, 0x01	; 1
    1d4c:	41 e0       	ldi	r20, 0x01	; 1
    1d4e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	62 e0       	ldi	r22, 0x02	; 2
    1d56:	41 e0       	ldi	r20, 0x01	; 1
    1d58:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	64 e0       	ldi	r22, 0x04	; 4
    1d60:	40 e0       	ldi	r20, 0x00	; 0
    1d62:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1d66:	61 c1       	rjmp	.+706    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 8:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1d68:	81 e0       	ldi	r24, 0x01	; 1
    1d6a:	60 e0       	ldi	r22, 0x00	; 0
    1d6c:	40 e0       	ldi	r20, 0x00	; 0
    1d6e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1d72:	81 e0       	ldi	r24, 0x01	; 1
    1d74:	61 e0       	ldi	r22, 0x01	; 1
    1d76:	40 e0       	ldi	r20, 0x00	; 0
    1d78:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1d7c:	81 e0       	ldi	r24, 0x01	; 1
    1d7e:	62 e0       	ldi	r22, 0x02	; 2
    1d80:	40 e0       	ldi	r20, 0x00	; 0
    1d82:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	64 e0       	ldi	r22, 0x04	; 4
    1d8a:	41 e0       	ldi	r20, 0x01	; 1
    1d8c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1d90:	4c c1       	rjmp	.+664    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 9:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1d92:	81 e0       	ldi	r24, 0x01	; 1
    1d94:	60 e0       	ldi	r22, 0x00	; 0
    1d96:	41 e0       	ldi	r20, 0x01	; 1
    1d98:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1d9c:	81 e0       	ldi	r24, 0x01	; 1
    1d9e:	61 e0       	ldi	r22, 0x01	; 1
    1da0:	40 e0       	ldi	r20, 0x00	; 0
    1da2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1da6:	81 e0       	ldi	r24, 0x01	; 1
    1da8:	62 e0       	ldi	r22, 0x02	; 2
    1daa:	40 e0       	ldi	r20, 0x00	; 0
    1dac:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	64 e0       	ldi	r22, 0x04	; 4
    1db4:	41 e0       	ldi	r20, 0x01	; 1
    1db6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1dba:	37 c1       	rjmp	.+622    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		}


			break;
	case COM4:
		MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    1dbc:	80 e0       	ldi	r24, 0x00	; 0
    1dbe:	63 e0       	ldi	r22, 0x03	; 3
    1dc0:	41 e0       	ldi	r20, 0x01	; 1
    1dc2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    1dc6:	80 e0       	ldi	r24, 0x00	; 0
    1dc8:	62 e0       	ldi	r22, 0x02	; 2
    1dca:	41 e0       	ldi	r20, 0x01	; 1
    1dcc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	65 e0       	ldi	r22, 0x05	; 5
    1dd4:	41 e0       	ldi	r20, 0x01	; 1
    1dd6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_LOW);
    1dda:	81 e0       	ldi	r24, 0x01	; 1
    1ddc:	66 e0       	ldi	r22, 0x06	; 6
    1dde:	40 e0       	ldi	r20, 0x00	; 0
    1de0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		switch(A_u8number)
    1de4:	89 81       	ldd	r24, Y+1	; 0x01
    1de6:	28 2f       	mov	r18, r24
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	3c 83       	std	Y+4, r19	; 0x04
    1dec:	2b 83       	std	Y+3, r18	; 0x03
    1dee:	8b 81       	ldd	r24, Y+3	; 0x03
    1df0:	9c 81       	ldd	r25, Y+4	; 0x04
    1df2:	84 30       	cpi	r24, 0x04	; 4
    1df4:	91 05       	cpc	r25, r1
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <HSSD_voidDisplayNumberByCom+0x7ec>
    1df8:	9b c0       	rjmp	.+310    	; 0x1f30 <HSSD_voidDisplayNumberByCom+0x922>
    1dfa:	2b 81       	ldd	r18, Y+3	; 0x03
    1dfc:	3c 81       	ldd	r19, Y+4	; 0x04
    1dfe:	25 30       	cpi	r18, 0x05	; 5
    1e00:	31 05       	cpc	r19, r1
    1e02:	ec f4       	brge	.+58     	; 0x1e3e <HSSD_voidDisplayNumberByCom+0x830>
    1e04:	8b 81       	ldd	r24, Y+3	; 0x03
    1e06:	9c 81       	ldd	r25, Y+4	; 0x04
    1e08:	81 30       	cpi	r24, 0x01	; 1
    1e0a:	91 05       	cpc	r25, r1
    1e0c:	09 f4       	brne	.+2      	; 0x1e10 <HSSD_voidDisplayNumberByCom+0x802>
    1e0e:	51 c0       	rjmp	.+162    	; 0x1eb2 <HSSD_voidDisplayNumberByCom+0x8a4>
    1e10:	2b 81       	ldd	r18, Y+3	; 0x03
    1e12:	3c 81       	ldd	r19, Y+4	; 0x04
    1e14:	22 30       	cpi	r18, 0x02	; 2
    1e16:	31 05       	cpc	r19, r1
    1e18:	2c f4       	brge	.+10     	; 0x1e24 <HSSD_voidDisplayNumberByCom+0x816>
    1e1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e1e:	00 97       	sbiw	r24, 0x00	; 0
    1e20:	99 f1       	breq	.+102    	; 0x1e88 <HSSD_voidDisplayNumberByCom+0x87a>
    1e22:	03 c1       	rjmp	.+518    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1e24:	2b 81       	ldd	r18, Y+3	; 0x03
    1e26:	3c 81       	ldd	r19, Y+4	; 0x04
    1e28:	22 30       	cpi	r18, 0x02	; 2
    1e2a:	31 05       	cpc	r19, r1
    1e2c:	09 f4       	brne	.+2      	; 0x1e30 <HSSD_voidDisplayNumberByCom+0x822>
    1e2e:	56 c0       	rjmp	.+172    	; 0x1edc <HSSD_voidDisplayNumberByCom+0x8ce>
    1e30:	8b 81       	ldd	r24, Y+3	; 0x03
    1e32:	9c 81       	ldd	r25, Y+4	; 0x04
    1e34:	83 30       	cpi	r24, 0x03	; 3
    1e36:	91 05       	cpc	r25, r1
    1e38:	09 f4       	brne	.+2      	; 0x1e3c <HSSD_voidDisplayNumberByCom+0x82e>
    1e3a:	65 c0       	rjmp	.+202    	; 0x1f06 <HSSD_voidDisplayNumberByCom+0x8f8>
    1e3c:	f6 c0       	rjmp	.+492    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1e3e:	2b 81       	ldd	r18, Y+3	; 0x03
    1e40:	3c 81       	ldd	r19, Y+4	; 0x04
    1e42:	27 30       	cpi	r18, 0x07	; 7
    1e44:	31 05       	cpc	r19, r1
    1e46:	09 f4       	brne	.+2      	; 0x1e4a <HSSD_voidDisplayNumberByCom+0x83c>
    1e48:	b2 c0       	rjmp	.+356    	; 0x1fae <HSSD_voidDisplayNumberByCom+0x9a0>
    1e4a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e4c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e4e:	88 30       	cpi	r24, 0x08	; 8
    1e50:	91 05       	cpc	r25, r1
    1e52:	6c f4       	brge	.+26     	; 0x1e6e <HSSD_voidDisplayNumberByCom+0x860>
    1e54:	2b 81       	ldd	r18, Y+3	; 0x03
    1e56:	3c 81       	ldd	r19, Y+4	; 0x04
    1e58:	25 30       	cpi	r18, 0x05	; 5
    1e5a:	31 05       	cpc	r19, r1
    1e5c:	09 f4       	brne	.+2      	; 0x1e60 <HSSD_voidDisplayNumberByCom+0x852>
    1e5e:	7d c0       	rjmp	.+250    	; 0x1f5a <HSSD_voidDisplayNumberByCom+0x94c>
    1e60:	8b 81       	ldd	r24, Y+3	; 0x03
    1e62:	9c 81       	ldd	r25, Y+4	; 0x04
    1e64:	86 30       	cpi	r24, 0x06	; 6
    1e66:	91 05       	cpc	r25, r1
    1e68:	09 f4       	brne	.+2      	; 0x1e6c <HSSD_voidDisplayNumberByCom+0x85e>
    1e6a:	8c c0       	rjmp	.+280    	; 0x1f84 <HSSD_voidDisplayNumberByCom+0x976>
    1e6c:	de c0       	rjmp	.+444    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
    1e6e:	2b 81       	ldd	r18, Y+3	; 0x03
    1e70:	3c 81       	ldd	r19, Y+4	; 0x04
    1e72:	28 30       	cpi	r18, 0x08	; 8
    1e74:	31 05       	cpc	r19, r1
    1e76:	09 f4       	brne	.+2      	; 0x1e7a <HSSD_voidDisplayNumberByCom+0x86c>
    1e78:	af c0       	rjmp	.+350    	; 0x1fd8 <HSSD_voidDisplayNumberByCom+0x9ca>
    1e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e7e:	89 30       	cpi	r24, 0x09	; 9
    1e80:	91 05       	cpc	r25, r1
    1e82:	09 f4       	brne	.+2      	; 0x1e86 <HSSD_voidDisplayNumberByCom+0x878>
    1e84:	be c0       	rjmp	.+380    	; 0x2002 <HSSD_voidDisplayNumberByCom+0x9f4>
    1e86:	d1 c0       	rjmp	.+418    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
		{
		case 0:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	60 e0       	ldi	r22, 0x00	; 0
    1e8c:	40 e0       	ldi	r20, 0x00	; 0
    1e8e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	61 e0       	ldi	r22, 0x01	; 1
    1e96:	40 e0       	ldi	r20, 0x00	; 0
    1e98:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	62 e0       	ldi	r22, 0x02	; 2
    1ea0:	40 e0       	ldi	r20, 0x00	; 0
    1ea2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	64 e0       	ldi	r22, 0x04	; 4
    1eaa:	40 e0       	ldi	r20, 0x00	; 0
    1eac:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1eb0:	bc c0       	rjmp	.+376    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 1:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	60 e0       	ldi	r22, 0x00	; 0
    1eb6:	41 e0       	ldi	r20, 0x01	; 1
    1eb8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	61 e0       	ldi	r22, 0x01	; 1
    1ec0:	40 e0       	ldi	r20, 0x00	; 0
    1ec2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1ec6:	81 e0       	ldi	r24, 0x01	; 1
    1ec8:	62 e0       	ldi	r22, 0x02	; 2
    1eca:	40 e0       	ldi	r20, 0x00	; 0
    1ecc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	64 e0       	ldi	r22, 0x04	; 4
    1ed4:	40 e0       	ldi	r20, 0x00	; 0
    1ed6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1eda:	a7 c0       	rjmp	.+334    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 2:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1edc:	81 e0       	ldi	r24, 0x01	; 1
    1ede:	60 e0       	ldi	r22, 0x00	; 0
    1ee0:	40 e0       	ldi	r20, 0x00	; 0
    1ee2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1ee6:	81 e0       	ldi	r24, 0x01	; 1
    1ee8:	61 e0       	ldi	r22, 0x01	; 1
    1eea:	41 e0       	ldi	r20, 0x01	; 1
    1eec:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1ef0:	81 e0       	ldi	r24, 0x01	; 1
    1ef2:	62 e0       	ldi	r22, 0x02	; 2
    1ef4:	40 e0       	ldi	r20, 0x00	; 0
    1ef6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1efa:	81 e0       	ldi	r24, 0x01	; 1
    1efc:	64 e0       	ldi	r22, 0x04	; 4
    1efe:	40 e0       	ldi	r20, 0x00	; 0
    1f00:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1f04:	92 c0       	rjmp	.+292    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 3:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1f06:	81 e0       	ldi	r24, 0x01	; 1
    1f08:	60 e0       	ldi	r22, 0x00	; 0
    1f0a:	41 e0       	ldi	r20, 0x01	; 1
    1f0c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1f10:	81 e0       	ldi	r24, 0x01	; 1
    1f12:	61 e0       	ldi	r22, 0x01	; 1
    1f14:	41 e0       	ldi	r20, 0x01	; 1
    1f16:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1f1a:	81 e0       	ldi	r24, 0x01	; 1
    1f1c:	62 e0       	ldi	r22, 0x02	; 2
    1f1e:	40 e0       	ldi	r20, 0x00	; 0
    1f20:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	64 e0       	ldi	r22, 0x04	; 4
    1f28:	40 e0       	ldi	r20, 0x00	; 0
    1f2a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1f2e:	7d c0       	rjmp	.+250    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 4:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1f30:	81 e0       	ldi	r24, 0x01	; 1
    1f32:	60 e0       	ldi	r22, 0x00	; 0
    1f34:	40 e0       	ldi	r20, 0x00	; 0
    1f36:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1f3a:	81 e0       	ldi	r24, 0x01	; 1
    1f3c:	61 e0       	ldi	r22, 0x01	; 1
    1f3e:	40 e0       	ldi	r20, 0x00	; 0
    1f40:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1f44:	81 e0       	ldi	r24, 0x01	; 1
    1f46:	62 e0       	ldi	r22, 0x02	; 2
    1f48:	41 e0       	ldi	r20, 0x01	; 1
    1f4a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	64 e0       	ldi	r22, 0x04	; 4
    1f52:	40 e0       	ldi	r20, 0x00	; 0
    1f54:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1f58:	68 c0       	rjmp	.+208    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 5:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1f5a:	81 e0       	ldi	r24, 0x01	; 1
    1f5c:	60 e0       	ldi	r22, 0x00	; 0
    1f5e:	41 e0       	ldi	r20, 0x01	; 1
    1f60:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1f64:	81 e0       	ldi	r24, 0x01	; 1
    1f66:	61 e0       	ldi	r22, 0x01	; 1
    1f68:	40 e0       	ldi	r20, 0x00	; 0
    1f6a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	62 e0       	ldi	r22, 0x02	; 2
    1f72:	41 e0       	ldi	r20, 0x01	; 1
    1f74:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	64 e0       	ldi	r22, 0x04	; 4
    1f7c:	40 e0       	ldi	r20, 0x00	; 0
    1f7e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1f82:	53 c0       	rjmp	.+166    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 6:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	60 e0       	ldi	r22, 0x00	; 0
    1f88:	40 e0       	ldi	r20, 0x00	; 0
    1f8a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1f8e:	81 e0       	ldi	r24, 0x01	; 1
    1f90:	61 e0       	ldi	r22, 0x01	; 1
    1f92:	41 e0       	ldi	r20, 0x01	; 1
    1f94:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1f98:	81 e0       	ldi	r24, 0x01	; 1
    1f9a:	62 e0       	ldi	r22, 0x02	; 2
    1f9c:	41 e0       	ldi	r20, 0x01	; 1
    1f9e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1fa2:	81 e0       	ldi	r24, 0x01	; 1
    1fa4:	64 e0       	ldi	r22, 0x04	; 4
    1fa6:	40 e0       	ldi	r20, 0x00	; 0
    1fa8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1fac:	3e c0       	rjmp	.+124    	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 7:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    1fae:	81 e0       	ldi	r24, 0x01	; 1
    1fb0:	60 e0       	ldi	r22, 0x00	; 0
    1fb2:	41 e0       	ldi	r20, 0x01	; 1
    1fb4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_HIGH);
    1fb8:	81 e0       	ldi	r24, 0x01	; 1
    1fba:	61 e0       	ldi	r22, 0x01	; 1
    1fbc:	41 e0       	ldi	r20, 0x01	; 1
    1fbe:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_HIGH);
    1fc2:	81 e0       	ldi	r24, 0x01	; 1
    1fc4:	62 e0       	ldi	r22, 0x02	; 2
    1fc6:	41 e0       	ldi	r20, 0x01	; 1
    1fc8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_LOW);
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	64 e0       	ldi	r22, 0x04	; 4
    1fd0:	40 e0       	ldi	r20, 0x00	; 0
    1fd2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    1fd6:	29 c0       	rjmp	.+82     	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 8:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_LOW);
    1fd8:	81 e0       	ldi	r24, 0x01	; 1
    1fda:	60 e0       	ldi	r22, 0x00	; 0
    1fdc:	40 e0       	ldi	r20, 0x00	; 0
    1fde:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    1fe2:	81 e0       	ldi	r24, 0x01	; 1
    1fe4:	61 e0       	ldi	r22, 0x01	; 1
    1fe6:	40 e0       	ldi	r20, 0x00	; 0
    1fe8:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    1fec:	81 e0       	ldi	r24, 0x01	; 1
    1fee:	62 e0       	ldi	r22, 0x02	; 2
    1ff0:	40 e0       	ldi	r20, 0x00	; 0
    1ff2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	64 e0       	ldi	r22, 0x04	; 4
    1ffa:	41 e0       	ldi	r20, 0x01	; 1
    1ffc:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    2000:	14 c0       	rjmp	.+40     	; 0x202a <HSSD_voidDisplayNumberByCom+0xa1c>
			break;
		case 9:
			MDIO_voidSetPinValue(BCD_PORT,PIN0,PIN_HIGH);
    2002:	81 e0       	ldi	r24, 0x01	; 1
    2004:	60 e0       	ldi	r22, 0x00	; 0
    2006:	41 e0       	ldi	r20, 0x01	; 1
    2008:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN1,PIN_LOW);
    200c:	81 e0       	ldi	r24, 0x01	; 1
    200e:	61 e0       	ldi	r22, 0x01	; 1
    2010:	40 e0       	ldi	r20, 0x00	; 0
    2012:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN2,PIN_LOW);
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	62 e0       	ldi	r22, 0x02	; 2
    201a:	40 e0       	ldi	r20, 0x00	; 0
    201c:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(BCD_PORT,PIN4,PIN_HIGH);
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	64 e0       	ldi	r22, 0x04	; 4
    2024:	41 e0       	ldi	r20, 0x01	; 1
    2026:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>

			break;
	default:
		break;
	}
}
    202a:	2c 96       	adiw	r28, 0x0c	; 12
    202c:	0f b6       	in	r0, 0x3f	; 63
    202e:	f8 94       	cli
    2030:	de bf       	out	0x3e, r29	; 62
    2032:	0f be       	out	0x3f, r0	; 63
    2034:	cd bf       	out	0x3d, r28	; 61
    2036:	cf 91       	pop	r28
    2038:	df 91       	pop	r29
    203a:	08 95       	ret

0000203c <HSSD_voidDisplayAscending>:

void HSSD_voidDisplayAscending(void)
{
    203c:	df 93       	push	r29
    203e:	cf 93       	push	r28
    2040:	cd b7       	in	r28, 0x3d	; 61
    2042:	de b7       	in	r29, 0x3e	; 62
    2044:	6e 97       	sbiw	r28, 0x1e	; 30
    2046:	0f b6       	in	r0, 0x3f	; 63
    2048:	f8 94       	cli
    204a:	de bf       	out	0x3e, r29	; 62
    204c:	0f be       	out	0x3f, r0	; 63
    204e:	cd bf       	out	0x3d, r28	; 61
u8 local_u8ArrOfNumbers[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    2050:	ce 01       	movw	r24, r28
    2052:	40 96       	adiw	r24, 0x10	; 16
    2054:	9b 8f       	std	Y+27, r25	; 0x1b
    2056:	8a 8f       	std	Y+26, r24	; 0x1a
    2058:	ea e6       	ldi	r30, 0x6A	; 106
    205a:	f0 e0       	ldi	r31, 0x00	; 0
    205c:	fd 8f       	std	Y+29, r31	; 0x1d
    205e:	ec 8f       	std	Y+28, r30	; 0x1c
    2060:	fa e0       	ldi	r31, 0x0A	; 10
    2062:	fe 8f       	std	Y+30, r31	; 0x1e
    2064:	ec 8d       	ldd	r30, Y+28	; 0x1c
    2066:	fd 8d       	ldd	r31, Y+29	; 0x1d
    2068:	00 80       	ld	r0, Z
    206a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    206c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    206e:	01 96       	adiw	r24, 0x01	; 1
    2070:	9d 8f       	std	Y+29, r25	; 0x1d
    2072:	8c 8f       	std	Y+28, r24	; 0x1c
    2074:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2076:	fb 8d       	ldd	r31, Y+27	; 0x1b
    2078:	00 82       	st	Z, r0
    207a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    207c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    207e:	01 96       	adiw	r24, 0x01	; 1
    2080:	9b 8f       	std	Y+27, r25	; 0x1b
    2082:	8a 8f       	std	Y+26, r24	; 0x1a
    2084:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2086:	91 50       	subi	r25, 0x01	; 1
    2088:	9e 8f       	std	Y+30, r25	; 0x1e
    208a:	ee 8d       	ldd	r30, Y+30	; 0x1e
    208c:	ee 23       	and	r30, r30
    208e:	51 f7       	brne	.-44     	; 0x2064 <HSSD_voidDisplayAscending+0x28>
for(u8 i=0;i<10;i++)
    2090:	1f 86       	std	Y+15, r1	; 0x0f
    2092:	80 c0       	rjmp	.+256    	; 0x2194 <HSSD_voidDisplayAscending+0x158>
{
	HSSD_voidDisplay(local_u8ArrOfNumbers[i]);
    2094:	8f 85       	ldd	r24, Y+15	; 0x0f
    2096:	28 2f       	mov	r18, r24
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	ce 01       	movw	r24, r28
    209c:	40 96       	adiw	r24, 0x10	; 16
    209e:	fc 01       	movw	r30, r24
    20a0:	e2 0f       	add	r30, r18
    20a2:	f3 1f       	adc	r31, r19
    20a4:	80 81       	ld	r24, Z
    20a6:	0e 94 d7 09 	call	0x13ae	; 0x13ae <HSSD_voidDisplay>
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	aa e7       	ldi	r26, 0x7A	; 122
    20b0:	b4 e4       	ldi	r27, 0x44	; 68
    20b2:	8b 87       	std	Y+11, r24	; 0x0b
    20b4:	9c 87       	std	Y+12, r25	; 0x0c
    20b6:	ad 87       	std	Y+13, r26	; 0x0d
    20b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    20bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    20be:	8d 85       	ldd	r24, Y+13	; 0x0d
    20c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    20c2:	20 e0       	ldi	r18, 0x00	; 0
    20c4:	30 e0       	ldi	r19, 0x00	; 0
    20c6:	4a ef       	ldi	r20, 0xFA	; 250
    20c8:	54 e4       	ldi	r21, 0x44	; 68
    20ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20ce:	dc 01       	movw	r26, r24
    20d0:	cb 01       	movw	r24, r22
    20d2:	8f 83       	std	Y+7, r24	; 0x07
    20d4:	98 87       	std	Y+8, r25	; 0x08
    20d6:	a9 87       	std	Y+9, r26	; 0x09
    20d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    20da:	6f 81       	ldd	r22, Y+7	; 0x07
    20dc:	78 85       	ldd	r23, Y+8	; 0x08
    20de:	89 85       	ldd	r24, Y+9	; 0x09
    20e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	40 e8       	ldi	r20, 0x80	; 128
    20e8:	5f e3       	ldi	r21, 0x3F	; 63
    20ea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    20ee:	88 23       	and	r24, r24
    20f0:	2c f4       	brge	.+10     	; 0x20fc <HSSD_voidDisplayAscending+0xc0>
		__ticks = 1;
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	9e 83       	std	Y+6, r25	; 0x06
    20f8:	8d 83       	std	Y+5, r24	; 0x05
    20fa:	3f c0       	rjmp	.+126    	; 0x217a <HSSD_voidDisplayAscending+0x13e>
	else if (__tmp > 65535)
    20fc:	6f 81       	ldd	r22, Y+7	; 0x07
    20fe:	78 85       	ldd	r23, Y+8	; 0x08
    2100:	89 85       	ldd	r24, Y+9	; 0x09
    2102:	9a 85       	ldd	r25, Y+10	; 0x0a
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	3f ef       	ldi	r19, 0xFF	; 255
    2108:	4f e7       	ldi	r20, 0x7F	; 127
    210a:	57 e4       	ldi	r21, 0x47	; 71
    210c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2110:	18 16       	cp	r1, r24
    2112:	4c f5       	brge	.+82     	; 0x2166 <HSSD_voidDisplayAscending+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2114:	6b 85       	ldd	r22, Y+11	; 0x0b
    2116:	7c 85       	ldd	r23, Y+12	; 0x0c
    2118:	8d 85       	ldd	r24, Y+13	; 0x0d
    211a:	9e 85       	ldd	r25, Y+14	; 0x0e
    211c:	20 e0       	ldi	r18, 0x00	; 0
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	40 e2       	ldi	r20, 0x20	; 32
    2122:	51 e4       	ldi	r21, 0x41	; 65
    2124:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2128:	dc 01       	movw	r26, r24
    212a:	cb 01       	movw	r24, r22
    212c:	bc 01       	movw	r22, r24
    212e:	cd 01       	movw	r24, r26
    2130:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2134:	dc 01       	movw	r26, r24
    2136:	cb 01       	movw	r24, r22
    2138:	9e 83       	std	Y+6, r25	; 0x06
    213a:	8d 83       	std	Y+5, r24	; 0x05
    213c:	0f c0       	rjmp	.+30     	; 0x215c <HSSD_voidDisplayAscending+0x120>
    213e:	88 ec       	ldi	r24, 0xC8	; 200
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	9c 83       	std	Y+4, r25	; 0x04
    2144:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2146:	8b 81       	ldd	r24, Y+3	; 0x03
    2148:	9c 81       	ldd	r25, Y+4	; 0x04
    214a:	01 97       	sbiw	r24, 0x01	; 1
    214c:	f1 f7       	brne	.-4      	; 0x214a <HSSD_voidDisplayAscending+0x10e>
    214e:	9c 83       	std	Y+4, r25	; 0x04
    2150:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2152:	8d 81       	ldd	r24, Y+5	; 0x05
    2154:	9e 81       	ldd	r25, Y+6	; 0x06
    2156:	01 97       	sbiw	r24, 0x01	; 1
    2158:	9e 83       	std	Y+6, r25	; 0x06
    215a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    215c:	8d 81       	ldd	r24, Y+5	; 0x05
    215e:	9e 81       	ldd	r25, Y+6	; 0x06
    2160:	00 97       	sbiw	r24, 0x00	; 0
    2162:	69 f7       	brne	.-38     	; 0x213e <HSSD_voidDisplayAscending+0x102>
    2164:	14 c0       	rjmp	.+40     	; 0x218e <HSSD_voidDisplayAscending+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2166:	6f 81       	ldd	r22, Y+7	; 0x07
    2168:	78 85       	ldd	r23, Y+8	; 0x08
    216a:	89 85       	ldd	r24, Y+9	; 0x09
    216c:	9a 85       	ldd	r25, Y+10	; 0x0a
    216e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2172:	dc 01       	movw	r26, r24
    2174:	cb 01       	movw	r24, r22
    2176:	9e 83       	std	Y+6, r25	; 0x06
    2178:	8d 83       	std	Y+5, r24	; 0x05
    217a:	8d 81       	ldd	r24, Y+5	; 0x05
    217c:	9e 81       	ldd	r25, Y+6	; 0x06
    217e:	9a 83       	std	Y+2, r25	; 0x02
    2180:	89 83       	std	Y+1, r24	; 0x01
    2182:	89 81       	ldd	r24, Y+1	; 0x01
    2184:	9a 81       	ldd	r25, Y+2	; 0x02
    2186:	01 97       	sbiw	r24, 0x01	; 1
    2188:	f1 f7       	brne	.-4      	; 0x2186 <HSSD_voidDisplayAscending+0x14a>
    218a:	9a 83       	std	Y+2, r25	; 0x02
    218c:	89 83       	std	Y+1, r24	; 0x01
}

void HSSD_voidDisplayAscending(void)
{
u8 local_u8ArrOfNumbers[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
for(u8 i=0;i<10;i++)
    218e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2190:	8f 5f       	subi	r24, 0xFF	; 255
    2192:	8f 87       	std	Y+15, r24	; 0x0f
    2194:	8f 85       	ldd	r24, Y+15	; 0x0f
    2196:	8a 30       	cpi	r24, 0x0A	; 10
    2198:	08 f4       	brcc	.+2      	; 0x219c <HSSD_voidDisplayAscending+0x160>
    219a:	7c cf       	rjmp	.-264    	; 0x2094 <HSSD_voidDisplayAscending+0x58>
{
	HSSD_voidDisplay(local_u8ArrOfNumbers[i]);
	_delay_ms(SSD_DELAY_TIME);

}
}
    219c:	6e 96       	adiw	r28, 0x1e	; 30
    219e:	0f b6       	in	r0, 0x3f	; 63
    21a0:	f8 94       	cli
    21a2:	de bf       	out	0x3e, r29	; 62
    21a4:	0f be       	out	0x3f, r0	; 63
    21a6:	cd bf       	out	0x3d, r28	; 61
    21a8:	cf 91       	pop	r28
    21aa:	df 91       	pop	r29
    21ac:	08 95       	ret

000021ae <HSSD_voidDisplayDescending>:

void HSSD_voidDisplayDescending(void)
{
    21ae:	df 93       	push	r29
    21b0:	cf 93       	push	r28
    21b2:	cd b7       	in	r28, 0x3d	; 61
    21b4:	de b7       	in	r29, 0x3e	; 62
    21b6:	6e 97       	sbiw	r28, 0x1e	; 30
    21b8:	0f b6       	in	r0, 0x3f	; 63
    21ba:	f8 94       	cli
    21bc:	de bf       	out	0x3e, r29	; 62
    21be:	0f be       	out	0x3f, r0	; 63
    21c0:	cd bf       	out	0x3d, r28	; 61
u8 local_u8ArrOfNumbers[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    21c2:	ce 01       	movw	r24, r28
    21c4:	40 96       	adiw	r24, 0x10	; 16
    21c6:	9b 8f       	std	Y+27, r25	; 0x1b
    21c8:	8a 8f       	std	Y+26, r24	; 0x1a
    21ca:	e4 e7       	ldi	r30, 0x74	; 116
    21cc:	f0 e0       	ldi	r31, 0x00	; 0
    21ce:	fd 8f       	std	Y+29, r31	; 0x1d
    21d0:	ec 8f       	std	Y+28, r30	; 0x1c
    21d2:	fa e0       	ldi	r31, 0x0A	; 10
    21d4:	fe 8f       	std	Y+30, r31	; 0x1e
    21d6:	ec 8d       	ldd	r30, Y+28	; 0x1c
    21d8:	fd 8d       	ldd	r31, Y+29	; 0x1d
    21da:	00 80       	ld	r0, Z
    21dc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    21de:	9d 8d       	ldd	r25, Y+29	; 0x1d
    21e0:	01 96       	adiw	r24, 0x01	; 1
    21e2:	9d 8f       	std	Y+29, r25	; 0x1d
    21e4:	8c 8f       	std	Y+28, r24	; 0x1c
    21e6:	ea 8d       	ldd	r30, Y+26	; 0x1a
    21e8:	fb 8d       	ldd	r31, Y+27	; 0x1b
    21ea:	00 82       	st	Z, r0
    21ec:	8a 8d       	ldd	r24, Y+26	; 0x1a
    21ee:	9b 8d       	ldd	r25, Y+27	; 0x1b
    21f0:	01 96       	adiw	r24, 0x01	; 1
    21f2:	9b 8f       	std	Y+27, r25	; 0x1b
    21f4:	8a 8f       	std	Y+26, r24	; 0x1a
    21f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    21f8:	91 50       	subi	r25, 0x01	; 1
    21fa:	9e 8f       	std	Y+30, r25	; 0x1e
    21fc:	ee 8d       	ldd	r30, Y+30	; 0x1e
    21fe:	ee 23       	and	r30, r30
    2200:	51 f7       	brne	.-44     	; 0x21d6 <HSSD_voidDisplayDescending+0x28>
for(u8 i=9;i>=0;i--)
    2202:	89 e0       	ldi	r24, 0x09	; 9
    2204:	8f 87       	std	Y+15, r24	; 0x0f
{
	HSSD_voidDisplay(local_u8ArrOfNumbers[i]);
    2206:	8f 85       	ldd	r24, Y+15	; 0x0f
    2208:	28 2f       	mov	r18, r24
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	ce 01       	movw	r24, r28
    220e:	40 96       	adiw	r24, 0x10	; 16
    2210:	fc 01       	movw	r30, r24
    2212:	e2 0f       	add	r30, r18
    2214:	f3 1f       	adc	r31, r19
    2216:	80 81       	ld	r24, Z
    2218:	0e 94 d7 09 	call	0x13ae	; 0x13ae <HSSD_voidDisplay>
    221c:	80 e0       	ldi	r24, 0x00	; 0
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	aa e7       	ldi	r26, 0x7A	; 122
    2222:	b4 e4       	ldi	r27, 0x44	; 68
    2224:	8b 87       	std	Y+11, r24	; 0x0b
    2226:	9c 87       	std	Y+12, r25	; 0x0c
    2228:	ad 87       	std	Y+13, r26	; 0x0d
    222a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    222c:	6b 85       	ldd	r22, Y+11	; 0x0b
    222e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2230:	8d 85       	ldd	r24, Y+13	; 0x0d
    2232:	9e 85       	ldd	r25, Y+14	; 0x0e
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	4a ef       	ldi	r20, 0xFA	; 250
    223a:	54 e4       	ldi	r21, 0x44	; 68
    223c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2240:	dc 01       	movw	r26, r24
    2242:	cb 01       	movw	r24, r22
    2244:	8f 83       	std	Y+7, r24	; 0x07
    2246:	98 87       	std	Y+8, r25	; 0x08
    2248:	a9 87       	std	Y+9, r26	; 0x09
    224a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    224c:	6f 81       	ldd	r22, Y+7	; 0x07
    224e:	78 85       	ldd	r23, Y+8	; 0x08
    2250:	89 85       	ldd	r24, Y+9	; 0x09
    2252:	9a 85       	ldd	r25, Y+10	; 0x0a
    2254:	20 e0       	ldi	r18, 0x00	; 0
    2256:	30 e0       	ldi	r19, 0x00	; 0
    2258:	40 e8       	ldi	r20, 0x80	; 128
    225a:	5f e3       	ldi	r21, 0x3F	; 63
    225c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2260:	88 23       	and	r24, r24
    2262:	2c f4       	brge	.+10     	; 0x226e <HSSD_voidDisplayDescending+0xc0>
		__ticks = 1;
    2264:	81 e0       	ldi	r24, 0x01	; 1
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	9e 83       	std	Y+6, r25	; 0x06
    226a:	8d 83       	std	Y+5, r24	; 0x05
    226c:	3f c0       	rjmp	.+126    	; 0x22ec <HSSD_voidDisplayDescending+0x13e>
	else if (__tmp > 65535)
    226e:	6f 81       	ldd	r22, Y+7	; 0x07
    2270:	78 85       	ldd	r23, Y+8	; 0x08
    2272:	89 85       	ldd	r24, Y+9	; 0x09
    2274:	9a 85       	ldd	r25, Y+10	; 0x0a
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	3f ef       	ldi	r19, 0xFF	; 255
    227a:	4f e7       	ldi	r20, 0x7F	; 127
    227c:	57 e4       	ldi	r21, 0x47	; 71
    227e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2282:	18 16       	cp	r1, r24
    2284:	4c f5       	brge	.+82     	; 0x22d8 <HSSD_voidDisplayDescending+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2286:	6b 85       	ldd	r22, Y+11	; 0x0b
    2288:	7c 85       	ldd	r23, Y+12	; 0x0c
    228a:	8d 85       	ldd	r24, Y+13	; 0x0d
    228c:	9e 85       	ldd	r25, Y+14	; 0x0e
    228e:	20 e0       	ldi	r18, 0x00	; 0
    2290:	30 e0       	ldi	r19, 0x00	; 0
    2292:	40 e2       	ldi	r20, 0x20	; 32
    2294:	51 e4       	ldi	r21, 0x41	; 65
    2296:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    229a:	dc 01       	movw	r26, r24
    229c:	cb 01       	movw	r24, r22
    229e:	bc 01       	movw	r22, r24
    22a0:	cd 01       	movw	r24, r26
    22a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22a6:	dc 01       	movw	r26, r24
    22a8:	cb 01       	movw	r24, r22
    22aa:	9e 83       	std	Y+6, r25	; 0x06
    22ac:	8d 83       	std	Y+5, r24	; 0x05
    22ae:	0f c0       	rjmp	.+30     	; 0x22ce <HSSD_voidDisplayDescending+0x120>
    22b0:	88 ec       	ldi	r24, 0xC8	; 200
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	9c 83       	std	Y+4, r25	; 0x04
    22b6:	8b 83       	std	Y+3, r24	; 0x03
    22b8:	8b 81       	ldd	r24, Y+3	; 0x03
    22ba:	9c 81       	ldd	r25, Y+4	; 0x04
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <HSSD_voidDisplayDescending+0x10e>
    22c0:	9c 83       	std	Y+4, r25	; 0x04
    22c2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22c4:	8d 81       	ldd	r24, Y+5	; 0x05
    22c6:	9e 81       	ldd	r25, Y+6	; 0x06
    22c8:	01 97       	sbiw	r24, 0x01	; 1
    22ca:	9e 83       	std	Y+6, r25	; 0x06
    22cc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ce:	8d 81       	ldd	r24, Y+5	; 0x05
    22d0:	9e 81       	ldd	r25, Y+6	; 0x06
    22d2:	00 97       	sbiw	r24, 0x00	; 0
    22d4:	69 f7       	brne	.-38     	; 0x22b0 <HSSD_voidDisplayDescending+0x102>
    22d6:	14 c0       	rjmp	.+40     	; 0x2300 <HSSD_voidDisplayDescending+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22d8:	6f 81       	ldd	r22, Y+7	; 0x07
    22da:	78 85       	ldd	r23, Y+8	; 0x08
    22dc:	89 85       	ldd	r24, Y+9	; 0x09
    22de:	9a 85       	ldd	r25, Y+10	; 0x0a
    22e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22e4:	dc 01       	movw	r26, r24
    22e6:	cb 01       	movw	r24, r22
    22e8:	9e 83       	std	Y+6, r25	; 0x06
    22ea:	8d 83       	std	Y+5, r24	; 0x05
    22ec:	8d 81       	ldd	r24, Y+5	; 0x05
    22ee:	9e 81       	ldd	r25, Y+6	; 0x06
    22f0:	9a 83       	std	Y+2, r25	; 0x02
    22f2:	89 83       	std	Y+1, r24	; 0x01
    22f4:	89 81       	ldd	r24, Y+1	; 0x01
    22f6:	9a 81       	ldd	r25, Y+2	; 0x02
    22f8:	01 97       	sbiw	r24, 0x01	; 1
    22fa:	f1 f7       	brne	.-4      	; 0x22f8 <HSSD_voidDisplayDescending+0x14a>
    22fc:	9a 83       	std	Y+2, r25	; 0x02
    22fe:	89 83       	std	Y+1, r24	; 0x01
}

void HSSD_voidDisplayDescending(void)
{
u8 local_u8ArrOfNumbers[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
for(u8 i=9;i>=0;i--)
    2300:	8f 85       	ldd	r24, Y+15	; 0x0f
    2302:	81 50       	subi	r24, 0x01	; 1
    2304:	8f 87       	std	Y+15, r24	; 0x0f
    2306:	7f cf       	rjmp	.-258    	; 0x2206 <HSSD_voidDisplayDescending+0x58>

00002308 <HSSD_TurnOff>:
	_delay_ms(SSD_DELAY_TIME);

}
}

void HSSD_TurnOff(u8 A_u8COM){
    2308:	df 93       	push	r29
    230a:	cf 93       	push	r28
    230c:	0f 92       	push	r0
    230e:	cd b7       	in	r28, 0x3d	; 61
    2310:	de b7       	in	r29, 0x3e	; 62
    2312:	89 83       	std	Y+1, r24	; 0x01
	if(A_u8COM==COM1)
    2314:	89 81       	ldd	r24, Y+1	; 0x01
    2316:	83 30       	cpi	r24, 0x03	; 3
    2318:	a9 f4       	brne	.+42     	; 0x2344 <HSSD_TurnOff+0x3c>
			{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	63 e0       	ldi	r22, 0x03	; 3
    231e:	41 e0       	ldi	r20, 0x01	; 1
    2320:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    2324:	80 e0       	ldi	r24, 0x00	; 0
    2326:	62 e0       	ldi	r22, 0x02	; 2
    2328:	41 e0       	ldi	r20, 0x01	; 1
    232a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    232e:	81 e0       	ldi	r24, 0x01	; 1
    2330:	65 e0       	ldi	r22, 0x05	; 5
    2332:	41 e0       	ldi	r20, 0x01	; 1
    2334:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	66 e0       	ldi	r22, 0x06	; 6
    233c:	41 e0       	ldi	r20, 0x01	; 1
    233e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    2342:	47 c0       	rjmp	.+142    	; 0x23d2 <HSSD_TurnOff+0xca>

	else if(A_u8COM==COM2)
    2344:	89 81       	ldd	r24, Y+1	; 0x01
    2346:	82 30       	cpi	r24, 0x02	; 2
    2348:	a9 f4       	brne	.+42     	; 0x2374 <HSSD_TurnOff+0x6c>
	{	MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    234a:	80 e0       	ldi	r24, 0x00	; 0
    234c:	63 e0       	ldi	r22, 0x03	; 3
    234e:	41 e0       	ldi	r20, 0x01	; 1
    2350:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    2354:	80 e0       	ldi	r24, 0x00	; 0
    2356:	62 e0       	ldi	r22, 0x02	; 2
    2358:	41 e0       	ldi	r20, 0x01	; 1
    235a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    235e:	81 e0       	ldi	r24, 0x01	; 1
    2360:	65 e0       	ldi	r22, 0x05	; 5
    2362:	41 e0       	ldi	r20, 0x01	; 1
    2364:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	66 e0       	ldi	r22, 0x06	; 6
    236c:	41 e0       	ldi	r20, 0x01	; 1
    236e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    2372:	2f c0       	rjmp	.+94     	; 0x23d2 <HSSD_TurnOff+0xca>

	else if(A_u8COM==COM3)
    2374:	89 81       	ldd	r24, Y+1	; 0x01
    2376:	85 30       	cpi	r24, 0x05	; 5
    2378:	a9 f4       	brne	.+42     	; 0x23a4 <HSSD_TurnOff+0x9c>
			{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    237a:	80 e0       	ldi	r24, 0x00	; 0
    237c:	63 e0       	ldi	r22, 0x03	; 3
    237e:	41 e0       	ldi	r20, 0x01	; 1
    2380:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	62 e0       	ldi	r22, 0x02	; 2
    2388:	41 e0       	ldi	r20, 0x01	; 1
    238a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    238e:	81 e0       	ldi	r24, 0x01	; 1
    2390:	65 e0       	ldi	r22, 0x05	; 5
    2392:	41 e0       	ldi	r20, 0x01	; 1
    2394:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    2398:	81 e0       	ldi	r24, 0x01	; 1
    239a:	66 e0       	ldi	r22, 0x06	; 6
    239c:	41 e0       	ldi	r20, 0x01	; 1
    239e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    23a2:	17 c0       	rjmp	.+46     	; 0x23d2 <HSSD_TurnOff+0xca>
	else if(A_u8COM==COM4)
    23a4:	89 81       	ldd	r24, Y+1	; 0x01
    23a6:	86 30       	cpi	r24, 0x06	; 6
    23a8:	a1 f4       	brne	.+40     	; 0x23d2 <HSSD_TurnOff+0xca>
		{MDIO_voidSetPinValue(COM1_PORT,COM1,PIN_HIGH);
    23aa:	80 e0       	ldi	r24, 0x00	; 0
    23ac:	63 e0       	ldi	r22, 0x03	; 3
    23ae:	41 e0       	ldi	r20, 0x01	; 1
    23b0:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM2_PORT,COM2,PIN_HIGH);
    23b4:	80 e0       	ldi	r24, 0x00	; 0
    23b6:	62 e0       	ldi	r22, 0x02	; 2
    23b8:	41 e0       	ldi	r20, 0x01	; 1
    23ba:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM3_PORT,COM3,PIN_HIGH);
    23be:	81 e0       	ldi	r24, 0x01	; 1
    23c0:	65 e0       	ldi	r22, 0x05	; 5
    23c2:	41 e0       	ldi	r20, 0x01	; 1
    23c4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(COM4_PORT,COM4,PIN_HIGH);}
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	66 e0       	ldi	r22, 0x06	; 6
    23cc:	41 e0       	ldi	r20, 0x01	; 1
    23ce:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>

}
    23d2:	0f 90       	pop	r0
    23d4:	cf 91       	pop	r28
    23d6:	df 91       	pop	r29
    23d8:	08 95       	ret

000023da <main>:
#include "../HAL/SSD/SSD_private.h"


u8 LSSD1=0,MSSD2=0,Flag=0;
s8 LSSD3=9,MSSD4=9;
void main(void){
    23da:	df 93       	push	r29
    23dc:	cf 93       	push	r28
    23de:	cd b7       	in	r28, 0x3d	; 61
    23e0:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidInit();
    23e2:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidInit>
    23e6:	ff cf       	rjmp	.-2      	; 0x23e6 <main+0xc>

000023e8 <Task1>:


	}
}

void Task1(void){
    23e8:	df 93       	push	r29
    23ea:	cf 93       	push	r28
    23ec:	cd b7       	in	r28, 0x3d	; 61
    23ee:	de b7       	in	r29, 0x3e	; 62
    23f0:	2f 97       	sbiw	r28, 0x0f	; 15
    23f2:	0f b6       	in	r0, 0x3f	; 63
    23f4:	f8 94       	cli
    23f6:	de bf       	out	0x3e, r29	; 62
    23f8:	0f be       	out	0x3f, r0	; 63
    23fa:	cd bf       	out	0x3d, r28	; 61
	//Binary LEDs and Seven Segment numbers
	for(u8 i=0 ;i<=9;i++){
    23fc:	1f 86       	std	Y+15, r1	; 0x0f
    23fe:	9f c0       	rjmp	.+318    	; 0x253e <Task1+0x156>
		HSSD_voidDisplayNumberByCom(i,COM1);
    2400:	8f 85       	ldd	r24, Y+15	; 0x0f
    2402:	63 e0       	ldi	r22, 0x03	; 3
    2404:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
		MDIO_voidSetPinValue(PORTB,PIN7,GET_BIT(i,0));
    2408:	8f 85       	ldd	r24, Y+15	; 0x0f
    240a:	98 2f       	mov	r25, r24
    240c:	91 70       	andi	r25, 0x01	; 1
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	67 e0       	ldi	r22, 0x07	; 7
    2412:	49 2f       	mov	r20, r25
    2414:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(PORTA,PIN4,GET_BIT(i,1));
    2418:	8f 85       	ldd	r24, Y+15	; 0x0f
    241a:	86 95       	lsr	r24
    241c:	98 2f       	mov	r25, r24
    241e:	91 70       	andi	r25, 0x01	; 1
    2420:	80 e0       	ldi	r24, 0x00	; 0
    2422:	64 e0       	ldi	r22, 0x04	; 4
    2424:	49 2f       	mov	r20, r25
    2426:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(PORTA,PIN5,GET_BIT(i,2));
    242a:	8f 85       	ldd	r24, Y+15	; 0x0f
    242c:	86 95       	lsr	r24
    242e:	86 95       	lsr	r24
    2430:	98 2f       	mov	r25, r24
    2432:	91 70       	andi	r25, 0x01	; 1
    2434:	80 e0       	ldi	r24, 0x00	; 0
    2436:	65 e0       	ldi	r22, 0x05	; 5
    2438:	49 2f       	mov	r20, r25
    243a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
		MDIO_voidSetPinValue(PORTA,PIN6,GET_BIT(i,3));
    243e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2440:	86 95       	lsr	r24
    2442:	86 95       	lsr	r24
    2444:	86 95       	lsr	r24
    2446:	98 2f       	mov	r25, r24
    2448:	91 70       	andi	r25, 0x01	; 1
    244a:	80 e0       	ldi	r24, 0x00	; 0
    244c:	66 e0       	ldi	r22, 0x06	; 6
    244e:	49 2f       	mov	r20, r25
    2450:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	aa e7       	ldi	r26, 0x7A	; 122
    245a:	b4 e4       	ldi	r27, 0x44	; 68
    245c:	8b 87       	std	Y+11, r24	; 0x0b
    245e:	9c 87       	std	Y+12, r25	; 0x0c
    2460:	ad 87       	std	Y+13, r26	; 0x0d
    2462:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2464:	6b 85       	ldd	r22, Y+11	; 0x0b
    2466:	7c 85       	ldd	r23, Y+12	; 0x0c
    2468:	8d 85       	ldd	r24, Y+13	; 0x0d
    246a:	9e 85       	ldd	r25, Y+14	; 0x0e
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	4a ef       	ldi	r20, 0xFA	; 250
    2472:	54 e4       	ldi	r21, 0x44	; 68
    2474:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2478:	dc 01       	movw	r26, r24
    247a:	cb 01       	movw	r24, r22
    247c:	8f 83       	std	Y+7, r24	; 0x07
    247e:	98 87       	std	Y+8, r25	; 0x08
    2480:	a9 87       	std	Y+9, r26	; 0x09
    2482:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2484:	6f 81       	ldd	r22, Y+7	; 0x07
    2486:	78 85       	ldd	r23, Y+8	; 0x08
    2488:	89 85       	ldd	r24, Y+9	; 0x09
    248a:	9a 85       	ldd	r25, Y+10	; 0x0a
    248c:	20 e0       	ldi	r18, 0x00	; 0
    248e:	30 e0       	ldi	r19, 0x00	; 0
    2490:	40 e8       	ldi	r20, 0x80	; 128
    2492:	5f e3       	ldi	r21, 0x3F	; 63
    2494:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2498:	88 23       	and	r24, r24
    249a:	2c f4       	brge	.+10     	; 0x24a6 <Task1+0xbe>
		__ticks = 1;
    249c:	81 e0       	ldi	r24, 0x01	; 1
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	9e 83       	std	Y+6, r25	; 0x06
    24a2:	8d 83       	std	Y+5, r24	; 0x05
    24a4:	3f c0       	rjmp	.+126    	; 0x2524 <Task1+0x13c>
	else if (__tmp > 65535)
    24a6:	6f 81       	ldd	r22, Y+7	; 0x07
    24a8:	78 85       	ldd	r23, Y+8	; 0x08
    24aa:	89 85       	ldd	r24, Y+9	; 0x09
    24ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	3f ef       	ldi	r19, 0xFF	; 255
    24b2:	4f e7       	ldi	r20, 0x7F	; 127
    24b4:	57 e4       	ldi	r21, 0x47	; 71
    24b6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    24ba:	18 16       	cp	r1, r24
    24bc:	4c f5       	brge	.+82     	; 0x2510 <Task1+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24be:	6b 85       	ldd	r22, Y+11	; 0x0b
    24c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    24c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    24c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    24c6:	20 e0       	ldi	r18, 0x00	; 0
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	40 e2       	ldi	r20, 0x20	; 32
    24cc:	51 e4       	ldi	r21, 0x41	; 65
    24ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24d2:	dc 01       	movw	r26, r24
    24d4:	cb 01       	movw	r24, r22
    24d6:	bc 01       	movw	r22, r24
    24d8:	cd 01       	movw	r24, r26
    24da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24de:	dc 01       	movw	r26, r24
    24e0:	cb 01       	movw	r24, r22
    24e2:	9e 83       	std	Y+6, r25	; 0x06
    24e4:	8d 83       	std	Y+5, r24	; 0x05
    24e6:	0f c0       	rjmp	.+30     	; 0x2506 <Task1+0x11e>
    24e8:	88 ec       	ldi	r24, 0xC8	; 200
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	9c 83       	std	Y+4, r25	; 0x04
    24ee:	8b 83       	std	Y+3, r24	; 0x03
    24f0:	8b 81       	ldd	r24, Y+3	; 0x03
    24f2:	9c 81       	ldd	r25, Y+4	; 0x04
    24f4:	01 97       	sbiw	r24, 0x01	; 1
    24f6:	f1 f7       	brne	.-4      	; 0x24f4 <Task1+0x10c>
    24f8:	9c 83       	std	Y+4, r25	; 0x04
    24fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24fc:	8d 81       	ldd	r24, Y+5	; 0x05
    24fe:	9e 81       	ldd	r25, Y+6	; 0x06
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	9e 83       	std	Y+6, r25	; 0x06
    2504:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2506:	8d 81       	ldd	r24, Y+5	; 0x05
    2508:	9e 81       	ldd	r25, Y+6	; 0x06
    250a:	00 97       	sbiw	r24, 0x00	; 0
    250c:	69 f7       	brne	.-38     	; 0x24e8 <Task1+0x100>
    250e:	14 c0       	rjmp	.+40     	; 0x2538 <Task1+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2510:	6f 81       	ldd	r22, Y+7	; 0x07
    2512:	78 85       	ldd	r23, Y+8	; 0x08
    2514:	89 85       	ldd	r24, Y+9	; 0x09
    2516:	9a 85       	ldd	r25, Y+10	; 0x0a
    2518:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    251c:	dc 01       	movw	r26, r24
    251e:	cb 01       	movw	r24, r22
    2520:	9e 83       	std	Y+6, r25	; 0x06
    2522:	8d 83       	std	Y+5, r24	; 0x05
    2524:	8d 81       	ldd	r24, Y+5	; 0x05
    2526:	9e 81       	ldd	r25, Y+6	; 0x06
    2528:	9a 83       	std	Y+2, r25	; 0x02
    252a:	89 83       	std	Y+1, r24	; 0x01
    252c:	89 81       	ldd	r24, Y+1	; 0x01
    252e:	9a 81       	ldd	r25, Y+2	; 0x02
    2530:	01 97       	sbiw	r24, 0x01	; 1
    2532:	f1 f7       	brne	.-4      	; 0x2530 <Task1+0x148>
    2534:	9a 83       	std	Y+2, r25	; 0x02
    2536:	89 83       	std	Y+1, r24	; 0x01
	}
}

void Task1(void){
	//Binary LEDs and Seven Segment numbers
	for(u8 i=0 ;i<=9;i++){
    2538:	8f 85       	ldd	r24, Y+15	; 0x0f
    253a:	8f 5f       	subi	r24, 0xFF	; 255
    253c:	8f 87       	std	Y+15, r24	; 0x0f
    253e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2540:	8a 30       	cpi	r24, 0x0A	; 10
    2542:	08 f4       	brcc	.+2      	; 0x2546 <Task1+0x15e>
    2544:	5d cf       	rjmp	.-326    	; 0x2400 <Task1+0x18>
		MDIO_voidSetPinValue(PORTA,PIN5,GET_BIT(i,2));
		MDIO_voidSetPinValue(PORTA,PIN6,GET_BIT(i,3));
		_delay_ms(SSD_DELAY_TIME);
	}

}
    2546:	2f 96       	adiw	r28, 0x0f	; 15
    2548:	0f b6       	in	r0, 0x3f	; 63
    254a:	f8 94       	cli
    254c:	de bf       	out	0x3e, r29	; 62
    254e:	0f be       	out	0x3f, r0	; 63
    2550:	cd bf       	out	0x3d, r28	; 61
    2552:	cf 91       	pop	r28
    2554:	df 91       	pop	r29
    2556:	08 95       	ret

00002558 <Task2>:


void Task2(void){
    2558:	df 93       	push	r29
    255a:	cf 93       	push	r28
    255c:	cd b7       	in	r28, 0x3d	; 61
    255e:	de b7       	in	r29, 0x3e	; 62
    2560:	6d 97       	sbiw	r28, 0x1d	; 29
    2562:	0f b6       	in	r0, 0x3f	; 63
    2564:	f8 94       	cli
    2566:	de bf       	out	0x3e, r29	; 62
    2568:	0f be       	out	0x3f, r0	; 63
    256a:	cd bf       	out	0x3d, r28	; 61
	//Traffic light and 2 seven segment
	//Flag to change the Led every 30 count
			if(Flag == 0 )
    256c:	80 91 80 00 	lds	r24, 0x0080
    2570:	88 23       	and	r24, r24
    2572:	81 f4       	brne	.+32     	; 0x2594 <Task2+0x3c>
			{
				MDIO_voidSetPinValue(PORTB,PIN7,PIN_HIGH);
    2574:	81 e0       	ldi	r24, 0x01	; 1
    2576:	67 e0       	ldi	r22, 0x07	; 7
    2578:	41 e0       	ldi	r20, 0x01	; 1
    257a:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN6,PIN_LOW);
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	66 e0       	ldi	r22, 0x06	; 6
    2582:	40 e0       	ldi	r20, 0x00	; 0
    2584:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN4,PIN_LOW);
    2588:	80 e0       	ldi	r24, 0x00	; 0
    258a:	64 e0       	ldi	r22, 0x04	; 4
    258c:	40 e0       	ldi	r20, 0x00	; 0
    258e:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    2592:	31 c0       	rjmp	.+98     	; 0x25f6 <Task2+0x9e>
			}
			else if(Flag==1 ){
    2594:	80 91 80 00 	lds	r24, 0x0080
    2598:	81 30       	cpi	r24, 0x01	; 1
    259a:	81 f4       	brne	.+32     	; 0x25bc <Task2+0x64>
				MDIO_voidSetPinValue(PORTB,PIN7,PIN_LOW);
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	67 e0       	ldi	r22, 0x07	; 7
    25a0:	40 e0       	ldi	r20, 0x00	; 0
    25a2:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN6,PIN_HIGH);
    25a6:	80 e0       	ldi	r24, 0x00	; 0
    25a8:	66 e0       	ldi	r22, 0x06	; 6
    25aa:	41 e0       	ldi	r20, 0x01	; 1
    25ac:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN4,PIN_LOW);
    25b0:	80 e0       	ldi	r24, 0x00	; 0
    25b2:	64 e0       	ldi	r22, 0x04	; 4
    25b4:	40 e0       	ldi	r20, 0x00	; 0
    25b6:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
    25ba:	1d c0       	rjmp	.+58     	; 0x25f6 <Task2+0x9e>
			}
			else if(Flag==2 ){
    25bc:	80 91 80 00 	lds	r24, 0x0080
    25c0:	82 30       	cpi	r24, 0x02	; 2
    25c2:	c9 f4       	brne	.+50     	; 0x25f6 <Task2+0x9e>
				MDIO_voidSetPinValue(PORTB,PIN7,PIN_LOW);
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	67 e0       	ldi	r22, 0x07	; 7
    25c8:	40 e0       	ldi	r20, 0x00	; 0
    25ca:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN6,PIN_LOW);
    25ce:	80 e0       	ldi	r24, 0x00	; 0
    25d0:	66 e0       	ldi	r22, 0x06	; 6
    25d2:	40 e0       	ldi	r20, 0x00	; 0
    25d4:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				MDIO_voidSetPinValue(PORTA,PIN4,PIN_HIGH);
    25d8:	80 e0       	ldi	r24, 0x00	; 0
    25da:	64 e0       	ldi	r22, 0x04	; 4
    25dc:	41 e0       	ldi	r20, 0x01	; 1
    25de:	0e 94 5e 07 	call	0xebc	; 0xebc <MDIO_voidSetPinValue>
				if(MSSD2==2 && LSSD1 ==9){
    25e2:	80 91 7f 00 	lds	r24, 0x007F
    25e6:	82 30       	cpi	r24, 0x02	; 2
    25e8:	31 f4       	brne	.+12     	; 0x25f6 <Task2+0x9e>
    25ea:	80 91 7e 00 	lds	r24, 0x007E
    25ee:	89 30       	cpi	r24, 0x09	; 9
    25f0:	11 f4       	brne	.+4      	; 0x25f6 <Task2+0x9e>
					Flag = 0;
    25f2:	10 92 80 00 	sts	0x0080, r1
				}
			}

			for(u8 i=0;i<=50;i++){
    25f6:	1d 8e       	std	Y+29, r1	; 0x1d
    25f8:	f1 c0       	rjmp	.+482    	; 0x27dc <Task2+0x284>
				HSSD_voidDisplayNumberByCom(LSSD1,COM3);
    25fa:	80 91 7e 00 	lds	r24, 0x007E
    25fe:	65 e0       	ldi	r22, 0x05	; 5
    2600:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    2604:	80 e0       	ldi	r24, 0x00	; 0
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	a0 e2       	ldi	r26, 0x20	; 32
    260a:	b1 e4       	ldi	r27, 0x41	; 65
    260c:	89 8f       	std	Y+25, r24	; 0x19
    260e:	9a 8f       	std	Y+26, r25	; 0x1a
    2610:	ab 8f       	std	Y+27, r26	; 0x1b
    2612:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2614:	69 8d       	ldd	r22, Y+25	; 0x19
    2616:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2618:	8b 8d       	ldd	r24, Y+27	; 0x1b
    261a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	4a ef       	ldi	r20, 0xFA	; 250
    2622:	54 e4       	ldi	r21, 0x44	; 68
    2624:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2628:	dc 01       	movw	r26, r24
    262a:	cb 01       	movw	r24, r22
    262c:	8d 8b       	std	Y+21, r24	; 0x15
    262e:	9e 8b       	std	Y+22, r25	; 0x16
    2630:	af 8b       	std	Y+23, r26	; 0x17
    2632:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2634:	6d 89       	ldd	r22, Y+21	; 0x15
    2636:	7e 89       	ldd	r23, Y+22	; 0x16
    2638:	8f 89       	ldd	r24, Y+23	; 0x17
    263a:	98 8d       	ldd	r25, Y+24	; 0x18
    263c:	20 e0       	ldi	r18, 0x00	; 0
    263e:	30 e0       	ldi	r19, 0x00	; 0
    2640:	40 e8       	ldi	r20, 0x80	; 128
    2642:	5f e3       	ldi	r21, 0x3F	; 63
    2644:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2648:	88 23       	and	r24, r24
    264a:	2c f4       	brge	.+10     	; 0x2656 <Task2+0xfe>
		__ticks = 1;
    264c:	81 e0       	ldi	r24, 0x01	; 1
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	9c 8b       	std	Y+20, r25	; 0x14
    2652:	8b 8b       	std	Y+19, r24	; 0x13
    2654:	3f c0       	rjmp	.+126    	; 0x26d4 <Task2+0x17c>
	else if (__tmp > 65535)
    2656:	6d 89       	ldd	r22, Y+21	; 0x15
    2658:	7e 89       	ldd	r23, Y+22	; 0x16
    265a:	8f 89       	ldd	r24, Y+23	; 0x17
    265c:	98 8d       	ldd	r25, Y+24	; 0x18
    265e:	20 e0       	ldi	r18, 0x00	; 0
    2660:	3f ef       	ldi	r19, 0xFF	; 255
    2662:	4f e7       	ldi	r20, 0x7F	; 127
    2664:	57 e4       	ldi	r21, 0x47	; 71
    2666:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    266a:	18 16       	cp	r1, r24
    266c:	4c f5       	brge	.+82     	; 0x26c0 <Task2+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    266e:	69 8d       	ldd	r22, Y+25	; 0x19
    2670:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2672:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2674:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2676:	20 e0       	ldi	r18, 0x00	; 0
    2678:	30 e0       	ldi	r19, 0x00	; 0
    267a:	40 e2       	ldi	r20, 0x20	; 32
    267c:	51 e4       	ldi	r21, 0x41	; 65
    267e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2682:	dc 01       	movw	r26, r24
    2684:	cb 01       	movw	r24, r22
    2686:	bc 01       	movw	r22, r24
    2688:	cd 01       	movw	r24, r26
    268a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    268e:	dc 01       	movw	r26, r24
    2690:	cb 01       	movw	r24, r22
    2692:	9c 8b       	std	Y+20, r25	; 0x14
    2694:	8b 8b       	std	Y+19, r24	; 0x13
    2696:	0f c0       	rjmp	.+30     	; 0x26b6 <Task2+0x15e>
    2698:	88 ec       	ldi	r24, 0xC8	; 200
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	9a 8b       	std	Y+18, r25	; 0x12
    269e:	89 8b       	std	Y+17, r24	; 0x11
    26a0:	89 89       	ldd	r24, Y+17	; 0x11
    26a2:	9a 89       	ldd	r25, Y+18	; 0x12
    26a4:	01 97       	sbiw	r24, 0x01	; 1
    26a6:	f1 f7       	brne	.-4      	; 0x26a4 <Task2+0x14c>
    26a8:	9a 8b       	std	Y+18, r25	; 0x12
    26aa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ac:	8b 89       	ldd	r24, Y+19	; 0x13
    26ae:	9c 89       	ldd	r25, Y+20	; 0x14
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	9c 8b       	std	Y+20, r25	; 0x14
    26b4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26b6:	8b 89       	ldd	r24, Y+19	; 0x13
    26b8:	9c 89       	ldd	r25, Y+20	; 0x14
    26ba:	00 97       	sbiw	r24, 0x00	; 0
    26bc:	69 f7       	brne	.-38     	; 0x2698 <Task2+0x140>
    26be:	14 c0       	rjmp	.+40     	; 0x26e8 <Task2+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c0:	6d 89       	ldd	r22, Y+21	; 0x15
    26c2:	7e 89       	ldd	r23, Y+22	; 0x16
    26c4:	8f 89       	ldd	r24, Y+23	; 0x17
    26c6:	98 8d       	ldd	r25, Y+24	; 0x18
    26c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26cc:	dc 01       	movw	r26, r24
    26ce:	cb 01       	movw	r24, r22
    26d0:	9c 8b       	std	Y+20, r25	; 0x14
    26d2:	8b 8b       	std	Y+19, r24	; 0x13
    26d4:	8b 89       	ldd	r24, Y+19	; 0x13
    26d6:	9c 89       	ldd	r25, Y+20	; 0x14
    26d8:	98 8b       	std	Y+16, r25	; 0x10
    26da:	8f 87       	std	Y+15, r24	; 0x0f
    26dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    26de:	98 89       	ldd	r25, Y+16	; 0x10
    26e0:	01 97       	sbiw	r24, 0x01	; 1
    26e2:	f1 f7       	brne	.-4      	; 0x26e0 <Task2+0x188>
    26e4:	98 8b       	std	Y+16, r25	; 0x10
    26e6:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(10);
				HSSD_voidDisplayNumberByCom(MSSD2,COM4);
    26e8:	80 91 7f 00 	lds	r24, 0x007F
    26ec:	66 e0       	ldi	r22, 0x06	; 6
    26ee:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	a0 e2       	ldi	r26, 0x20	; 32
    26f8:	b1 e4       	ldi	r27, 0x41	; 65
    26fa:	8b 87       	std	Y+11, r24	; 0x0b
    26fc:	9c 87       	std	Y+12, r25	; 0x0c
    26fe:	ad 87       	std	Y+13, r26	; 0x0d
    2700:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2702:	6b 85       	ldd	r22, Y+11	; 0x0b
    2704:	7c 85       	ldd	r23, Y+12	; 0x0c
    2706:	8d 85       	ldd	r24, Y+13	; 0x0d
    2708:	9e 85       	ldd	r25, Y+14	; 0x0e
    270a:	20 e0       	ldi	r18, 0x00	; 0
    270c:	30 e0       	ldi	r19, 0x00	; 0
    270e:	4a ef       	ldi	r20, 0xFA	; 250
    2710:	54 e4       	ldi	r21, 0x44	; 68
    2712:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2716:	dc 01       	movw	r26, r24
    2718:	cb 01       	movw	r24, r22
    271a:	8f 83       	std	Y+7, r24	; 0x07
    271c:	98 87       	std	Y+8, r25	; 0x08
    271e:	a9 87       	std	Y+9, r26	; 0x09
    2720:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2722:	6f 81       	ldd	r22, Y+7	; 0x07
    2724:	78 85       	ldd	r23, Y+8	; 0x08
    2726:	89 85       	ldd	r24, Y+9	; 0x09
    2728:	9a 85       	ldd	r25, Y+10	; 0x0a
    272a:	20 e0       	ldi	r18, 0x00	; 0
    272c:	30 e0       	ldi	r19, 0x00	; 0
    272e:	40 e8       	ldi	r20, 0x80	; 128
    2730:	5f e3       	ldi	r21, 0x3F	; 63
    2732:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2736:	88 23       	and	r24, r24
    2738:	2c f4       	brge	.+10     	; 0x2744 <Task2+0x1ec>
		__ticks = 1;
    273a:	81 e0       	ldi	r24, 0x01	; 1
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	9e 83       	std	Y+6, r25	; 0x06
    2740:	8d 83       	std	Y+5, r24	; 0x05
    2742:	3f c0       	rjmp	.+126    	; 0x27c2 <Task2+0x26a>
	else if (__tmp > 65535)
    2744:	6f 81       	ldd	r22, Y+7	; 0x07
    2746:	78 85       	ldd	r23, Y+8	; 0x08
    2748:	89 85       	ldd	r24, Y+9	; 0x09
    274a:	9a 85       	ldd	r25, Y+10	; 0x0a
    274c:	20 e0       	ldi	r18, 0x00	; 0
    274e:	3f ef       	ldi	r19, 0xFF	; 255
    2750:	4f e7       	ldi	r20, 0x7F	; 127
    2752:	57 e4       	ldi	r21, 0x47	; 71
    2754:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2758:	18 16       	cp	r1, r24
    275a:	4c f5       	brge	.+82     	; 0x27ae <Task2+0x256>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    275c:	6b 85       	ldd	r22, Y+11	; 0x0b
    275e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2760:	8d 85       	ldd	r24, Y+13	; 0x0d
    2762:	9e 85       	ldd	r25, Y+14	; 0x0e
    2764:	20 e0       	ldi	r18, 0x00	; 0
    2766:	30 e0       	ldi	r19, 0x00	; 0
    2768:	40 e2       	ldi	r20, 0x20	; 32
    276a:	51 e4       	ldi	r21, 0x41	; 65
    276c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2770:	dc 01       	movw	r26, r24
    2772:	cb 01       	movw	r24, r22
    2774:	bc 01       	movw	r22, r24
    2776:	cd 01       	movw	r24, r26
    2778:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    277c:	dc 01       	movw	r26, r24
    277e:	cb 01       	movw	r24, r22
    2780:	9e 83       	std	Y+6, r25	; 0x06
    2782:	8d 83       	std	Y+5, r24	; 0x05
    2784:	0f c0       	rjmp	.+30     	; 0x27a4 <Task2+0x24c>
    2786:	88 ec       	ldi	r24, 0xC8	; 200
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	9c 83       	std	Y+4, r25	; 0x04
    278c:	8b 83       	std	Y+3, r24	; 0x03
    278e:	8b 81       	ldd	r24, Y+3	; 0x03
    2790:	9c 81       	ldd	r25, Y+4	; 0x04
    2792:	01 97       	sbiw	r24, 0x01	; 1
    2794:	f1 f7       	brne	.-4      	; 0x2792 <Task2+0x23a>
    2796:	9c 83       	std	Y+4, r25	; 0x04
    2798:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    279a:	8d 81       	ldd	r24, Y+5	; 0x05
    279c:	9e 81       	ldd	r25, Y+6	; 0x06
    279e:	01 97       	sbiw	r24, 0x01	; 1
    27a0:	9e 83       	std	Y+6, r25	; 0x06
    27a2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27a4:	8d 81       	ldd	r24, Y+5	; 0x05
    27a6:	9e 81       	ldd	r25, Y+6	; 0x06
    27a8:	00 97       	sbiw	r24, 0x00	; 0
    27aa:	69 f7       	brne	.-38     	; 0x2786 <Task2+0x22e>
    27ac:	14 c0       	rjmp	.+40     	; 0x27d6 <Task2+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27ae:	6f 81       	ldd	r22, Y+7	; 0x07
    27b0:	78 85       	ldd	r23, Y+8	; 0x08
    27b2:	89 85       	ldd	r24, Y+9	; 0x09
    27b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    27b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27ba:	dc 01       	movw	r26, r24
    27bc:	cb 01       	movw	r24, r22
    27be:	9e 83       	std	Y+6, r25	; 0x06
    27c0:	8d 83       	std	Y+5, r24	; 0x05
    27c2:	8d 81       	ldd	r24, Y+5	; 0x05
    27c4:	9e 81       	ldd	r25, Y+6	; 0x06
    27c6:	9a 83       	std	Y+2, r25	; 0x02
    27c8:	89 83       	std	Y+1, r24	; 0x01
    27ca:	89 81       	ldd	r24, Y+1	; 0x01
    27cc:	9a 81       	ldd	r25, Y+2	; 0x02
    27ce:	01 97       	sbiw	r24, 0x01	; 1
    27d0:	f1 f7       	brne	.-4      	; 0x27ce <Task2+0x276>
    27d2:	9a 83       	std	Y+2, r25	; 0x02
    27d4:	89 83       	std	Y+1, r24	; 0x01
				if(MSSD2==2 && LSSD1 ==9){
					Flag = 0;
				}
			}

			for(u8 i=0;i<=50;i++){
    27d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27d8:	8f 5f       	subi	r24, 0xFF	; 255
    27da:	8d 8f       	std	Y+29, r24	; 0x1d
    27dc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27de:	83 33       	cpi	r24, 0x33	; 51
    27e0:	08 f4       	brcc	.+2      	; 0x27e4 <Task2+0x28c>
    27e2:	0b cf       	rjmp	.-490    	; 0x25fa <Task2+0xa2>
				HSSD_voidDisplayNumberByCom(MSSD2,COM4);
				_delay_ms(10);

			}

			LSSD1++;
    27e4:	80 91 7e 00 	lds	r24, 0x007E
    27e8:	8f 5f       	subi	r24, 0xFF	; 255
    27ea:	80 93 7e 00 	sts	0x007E, r24
			if((LSSD1 > 9 ) )
    27ee:	80 91 7e 00 	lds	r24, 0x007E
    27f2:	8a 30       	cpi	r24, 0x0A	; 10
    27f4:	90 f0       	brcs	.+36     	; 0x281a <Task2+0x2c2>
			{
				LSSD1 = 0;
    27f6:	10 92 7e 00 	sts	0x007E, r1
				MSSD2++;
    27fa:	80 91 7f 00 	lds	r24, 0x007F
    27fe:	8f 5f       	subi	r24, 0xFF	; 255
    2800:	80 93 7f 00 	sts	0x007F, r24
				if(MSSD2==3)
    2804:	80 91 7f 00 	lds	r24, 0x007F
    2808:	83 30       	cpi	r24, 0x03	; 3
    280a:	39 f4       	brne	.+14     	; 0x281a <Task2+0x2c2>
				{
					Flag++;
    280c:	80 91 80 00 	lds	r24, 0x0080
    2810:	8f 5f       	subi	r24, 0xFF	; 255
    2812:	80 93 80 00 	sts	0x0080, r24
					MSSD2 = 0;
    2816:	10 92 7f 00 	sts	0x007F, r1
				}

			}


}
    281a:	6d 96       	adiw	r28, 0x1d	; 29
    281c:	0f b6       	in	r0, 0x3f	; 63
    281e:	f8 94       	cli
    2820:	de bf       	out	0x3e, r29	; 62
    2822:	0f be       	out	0x3f, r0	; 63
    2824:	cd bf       	out	0x3d, r28	; 61
    2826:	cf 91       	pop	r28
    2828:	df 91       	pop	r29
    282a:	08 95       	ret

0000282c <Task3>:

void Task3(void){
    282c:	0f 93       	push	r16
    282e:	1f 93       	push	r17
    2830:	df 93       	push	r29
    2832:	cf 93       	push	r28
    2834:	cd b7       	in	r28, 0x3d	; 61
    2836:	de b7       	in	r29, 0x3e	; 62
    2838:	c7 54       	subi	r28, 0x47	; 71
    283a:	d0 40       	sbci	r29, 0x00	; 0
    283c:	0f b6       	in	r0, 0x3f	; 63
    283e:	f8 94       	cli
    2840:	de bf       	out	0x3e, r29	; 62
    2842:	0f be       	out	0x3f, r0	; 63
    2844:	cd bf       	out	0x3d, r28	; 61
	// 2 Seven segments counting up to 99 and 2 seven segments counting down from 99
	//COM1,2 counting up COM3,4 counting down

	for(u8 i=0;i<=100;i++){
    2846:	fe 01       	movw	r30, r28
    2848:	e9 5b       	subi	r30, 0xB9	; 185
    284a:	ff 4f       	sbci	r31, 0xFF	; 255
    284c:	10 82       	st	Z, r1
    284e:	f8 c1       	rjmp	.+1008   	; 0x2c40 <Task3+0x414>
		HSSD_voidDisplayNumberByCom(LSSD1,COM1);
    2850:	80 91 7e 00 	lds	r24, 0x007E
    2854:	63 e0       	ldi	r22, 0x03	; 3
    2856:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    285a:	fe 01       	movw	r30, r28
    285c:	ed 5b       	subi	r30, 0xBD	; 189
    285e:	ff 4f       	sbci	r31, 0xFF	; 255
    2860:	80 e0       	ldi	r24, 0x00	; 0
    2862:	90 e0       	ldi	r25, 0x00	; 0
    2864:	a0 e2       	ldi	r26, 0x20	; 32
    2866:	b1 e4       	ldi	r27, 0x41	; 65
    2868:	80 83       	st	Z, r24
    286a:	91 83       	std	Z+1, r25	; 0x01
    286c:	a2 83       	std	Z+2, r26	; 0x02
    286e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2870:	8e 01       	movw	r16, r28
    2872:	01 5c       	subi	r16, 0xC1	; 193
    2874:	1f 4f       	sbci	r17, 0xFF	; 255
    2876:	fe 01       	movw	r30, r28
    2878:	ed 5b       	subi	r30, 0xBD	; 189
    287a:	ff 4f       	sbci	r31, 0xFF	; 255
    287c:	60 81       	ld	r22, Z
    287e:	71 81       	ldd	r23, Z+1	; 0x01
    2880:	82 81       	ldd	r24, Z+2	; 0x02
    2882:	93 81       	ldd	r25, Z+3	; 0x03
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	4a ef       	ldi	r20, 0xFA	; 250
    288a:	54 e4       	ldi	r21, 0x44	; 68
    288c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	f8 01       	movw	r30, r16
    2896:	80 83       	st	Z, r24
    2898:	91 83       	std	Z+1, r25	; 0x01
    289a:	a2 83       	std	Z+2, r26	; 0x02
    289c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    289e:	fe 01       	movw	r30, r28
    28a0:	ff 96       	adiw	r30, 0x3f	; 63
    28a2:	60 81       	ld	r22, Z
    28a4:	71 81       	ldd	r23, Z+1	; 0x01
    28a6:	82 81       	ldd	r24, Z+2	; 0x02
    28a8:	93 81       	ldd	r25, Z+3	; 0x03
    28aa:	20 e0       	ldi	r18, 0x00	; 0
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	40 e8       	ldi	r20, 0x80	; 128
    28b0:	5f e3       	ldi	r21, 0x3F	; 63
    28b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    28b6:	88 23       	and	r24, r24
    28b8:	2c f4       	brge	.+10     	; 0x28c4 <Task3+0x98>
		__ticks = 1;
    28ba:	81 e0       	ldi	r24, 0x01	; 1
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	9e af       	std	Y+62, r25	; 0x3e
    28c0:	8d af       	std	Y+61, r24	; 0x3d
    28c2:	46 c0       	rjmp	.+140    	; 0x2950 <Task3+0x124>
	else if (__tmp > 65535)
    28c4:	fe 01       	movw	r30, r28
    28c6:	ff 96       	adiw	r30, 0x3f	; 63
    28c8:	60 81       	ld	r22, Z
    28ca:	71 81       	ldd	r23, Z+1	; 0x01
    28cc:	82 81       	ldd	r24, Z+2	; 0x02
    28ce:	93 81       	ldd	r25, Z+3	; 0x03
    28d0:	20 e0       	ldi	r18, 0x00	; 0
    28d2:	3f ef       	ldi	r19, 0xFF	; 255
    28d4:	4f e7       	ldi	r20, 0x7F	; 127
    28d6:	57 e4       	ldi	r21, 0x47	; 71
    28d8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    28dc:	18 16       	cp	r1, r24
    28de:	64 f5       	brge	.+88     	; 0x2938 <Task3+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28e0:	fe 01       	movw	r30, r28
    28e2:	ed 5b       	subi	r30, 0xBD	; 189
    28e4:	ff 4f       	sbci	r31, 0xFF	; 255
    28e6:	60 81       	ld	r22, Z
    28e8:	71 81       	ldd	r23, Z+1	; 0x01
    28ea:	82 81       	ldd	r24, Z+2	; 0x02
    28ec:	93 81       	ldd	r25, Z+3	; 0x03
    28ee:	20 e0       	ldi	r18, 0x00	; 0
    28f0:	30 e0       	ldi	r19, 0x00	; 0
    28f2:	40 e2       	ldi	r20, 0x20	; 32
    28f4:	51 e4       	ldi	r21, 0x41	; 65
    28f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28fa:	dc 01       	movw	r26, r24
    28fc:	cb 01       	movw	r24, r22
    28fe:	bc 01       	movw	r22, r24
    2900:	cd 01       	movw	r24, r26
    2902:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2906:	dc 01       	movw	r26, r24
    2908:	cb 01       	movw	r24, r22
    290a:	9e af       	std	Y+62, r25	; 0x3e
    290c:	8d af       	std	Y+61, r24	; 0x3d
    290e:	0f c0       	rjmp	.+30     	; 0x292e <Task3+0x102>
    2910:	88 ec       	ldi	r24, 0xC8	; 200
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	9c af       	std	Y+60, r25	; 0x3c
    2916:	8b af       	std	Y+59, r24	; 0x3b
    2918:	8b ad       	ldd	r24, Y+59	; 0x3b
    291a:	9c ad       	ldd	r25, Y+60	; 0x3c
    291c:	01 97       	sbiw	r24, 0x01	; 1
    291e:	f1 f7       	brne	.-4      	; 0x291c <Task3+0xf0>
    2920:	9c af       	std	Y+60, r25	; 0x3c
    2922:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2924:	8d ad       	ldd	r24, Y+61	; 0x3d
    2926:	9e ad       	ldd	r25, Y+62	; 0x3e
    2928:	01 97       	sbiw	r24, 0x01	; 1
    292a:	9e af       	std	Y+62, r25	; 0x3e
    292c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    292e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2930:	9e ad       	ldd	r25, Y+62	; 0x3e
    2932:	00 97       	sbiw	r24, 0x00	; 0
    2934:	69 f7       	brne	.-38     	; 0x2910 <Task3+0xe4>
    2936:	16 c0       	rjmp	.+44     	; 0x2964 <Task3+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2938:	fe 01       	movw	r30, r28
    293a:	ff 96       	adiw	r30, 0x3f	; 63
    293c:	60 81       	ld	r22, Z
    293e:	71 81       	ldd	r23, Z+1	; 0x01
    2940:	82 81       	ldd	r24, Z+2	; 0x02
    2942:	93 81       	ldd	r25, Z+3	; 0x03
    2944:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2948:	dc 01       	movw	r26, r24
    294a:	cb 01       	movw	r24, r22
    294c:	9e af       	std	Y+62, r25	; 0x3e
    294e:	8d af       	std	Y+61, r24	; 0x3d
    2950:	8d ad       	ldd	r24, Y+61	; 0x3d
    2952:	9e ad       	ldd	r25, Y+62	; 0x3e
    2954:	9a af       	std	Y+58, r25	; 0x3a
    2956:	89 af       	std	Y+57, r24	; 0x39
    2958:	89 ad       	ldd	r24, Y+57	; 0x39
    295a:	9a ad       	ldd	r25, Y+58	; 0x3a
    295c:	01 97       	sbiw	r24, 0x01	; 1
    295e:	f1 f7       	brne	.-4      	; 0x295c <Task3+0x130>
    2960:	9a af       	std	Y+58, r25	; 0x3a
    2962:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(10);
		HSSD_voidDisplayNumberByCom(LSSD3,COM3);
    2964:	80 91 68 00 	lds	r24, 0x0068
    2968:	65 e0       	ldi	r22, 0x05	; 5
    296a:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    296e:	80 e0       	ldi	r24, 0x00	; 0
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	a0 e2       	ldi	r26, 0x20	; 32
    2974:	b1 e4       	ldi	r27, 0x41	; 65
    2976:	8d ab       	std	Y+53, r24	; 0x35
    2978:	9e ab       	std	Y+54, r25	; 0x36
    297a:	af ab       	std	Y+55, r26	; 0x37
    297c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    297e:	6d a9       	ldd	r22, Y+53	; 0x35
    2980:	7e a9       	ldd	r23, Y+54	; 0x36
    2982:	8f a9       	ldd	r24, Y+55	; 0x37
    2984:	98 ad       	ldd	r25, Y+56	; 0x38
    2986:	20 e0       	ldi	r18, 0x00	; 0
    2988:	30 e0       	ldi	r19, 0x00	; 0
    298a:	4a ef       	ldi	r20, 0xFA	; 250
    298c:	54 e4       	ldi	r21, 0x44	; 68
    298e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2992:	dc 01       	movw	r26, r24
    2994:	cb 01       	movw	r24, r22
    2996:	89 ab       	std	Y+49, r24	; 0x31
    2998:	9a ab       	std	Y+50, r25	; 0x32
    299a:	ab ab       	std	Y+51, r26	; 0x33
    299c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    299e:	69 a9       	ldd	r22, Y+49	; 0x31
    29a0:	7a a9       	ldd	r23, Y+50	; 0x32
    29a2:	8b a9       	ldd	r24, Y+51	; 0x33
    29a4:	9c a9       	ldd	r25, Y+52	; 0x34
    29a6:	20 e0       	ldi	r18, 0x00	; 0
    29a8:	30 e0       	ldi	r19, 0x00	; 0
    29aa:	40 e8       	ldi	r20, 0x80	; 128
    29ac:	5f e3       	ldi	r21, 0x3F	; 63
    29ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    29b2:	88 23       	and	r24, r24
    29b4:	2c f4       	brge	.+10     	; 0x29c0 <Task3+0x194>
		__ticks = 1;
    29b6:	81 e0       	ldi	r24, 0x01	; 1
    29b8:	90 e0       	ldi	r25, 0x00	; 0
    29ba:	98 ab       	std	Y+48, r25	; 0x30
    29bc:	8f a7       	std	Y+47, r24	; 0x2f
    29be:	3f c0       	rjmp	.+126    	; 0x2a3e <Task3+0x212>
	else if (__tmp > 65535)
    29c0:	69 a9       	ldd	r22, Y+49	; 0x31
    29c2:	7a a9       	ldd	r23, Y+50	; 0x32
    29c4:	8b a9       	ldd	r24, Y+51	; 0x33
    29c6:	9c a9       	ldd	r25, Y+52	; 0x34
    29c8:	20 e0       	ldi	r18, 0x00	; 0
    29ca:	3f ef       	ldi	r19, 0xFF	; 255
    29cc:	4f e7       	ldi	r20, 0x7F	; 127
    29ce:	57 e4       	ldi	r21, 0x47	; 71
    29d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    29d4:	18 16       	cp	r1, r24
    29d6:	4c f5       	brge	.+82     	; 0x2a2a <Task3+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29d8:	6d a9       	ldd	r22, Y+53	; 0x35
    29da:	7e a9       	ldd	r23, Y+54	; 0x36
    29dc:	8f a9       	ldd	r24, Y+55	; 0x37
    29de:	98 ad       	ldd	r25, Y+56	; 0x38
    29e0:	20 e0       	ldi	r18, 0x00	; 0
    29e2:	30 e0       	ldi	r19, 0x00	; 0
    29e4:	40 e2       	ldi	r20, 0x20	; 32
    29e6:	51 e4       	ldi	r21, 0x41	; 65
    29e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29ec:	dc 01       	movw	r26, r24
    29ee:	cb 01       	movw	r24, r22
    29f0:	bc 01       	movw	r22, r24
    29f2:	cd 01       	movw	r24, r26
    29f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29f8:	dc 01       	movw	r26, r24
    29fa:	cb 01       	movw	r24, r22
    29fc:	98 ab       	std	Y+48, r25	; 0x30
    29fe:	8f a7       	std	Y+47, r24	; 0x2f
    2a00:	0f c0       	rjmp	.+30     	; 0x2a20 <Task3+0x1f4>
    2a02:	88 ec       	ldi	r24, 0xC8	; 200
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	9e a7       	std	Y+46, r25	; 0x2e
    2a08:	8d a7       	std	Y+45, r24	; 0x2d
    2a0a:	8d a5       	ldd	r24, Y+45	; 0x2d
    2a0c:	9e a5       	ldd	r25, Y+46	; 0x2e
    2a0e:	01 97       	sbiw	r24, 0x01	; 1
    2a10:	f1 f7       	brne	.-4      	; 0x2a0e <Task3+0x1e2>
    2a12:	9e a7       	std	Y+46, r25	; 0x2e
    2a14:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a16:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a18:	98 a9       	ldd	r25, Y+48	; 0x30
    2a1a:	01 97       	sbiw	r24, 0x01	; 1
    2a1c:	98 ab       	std	Y+48, r25	; 0x30
    2a1e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a20:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a22:	98 a9       	ldd	r25, Y+48	; 0x30
    2a24:	00 97       	sbiw	r24, 0x00	; 0
    2a26:	69 f7       	brne	.-38     	; 0x2a02 <Task3+0x1d6>
    2a28:	14 c0       	rjmp	.+40     	; 0x2a52 <Task3+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a2a:	69 a9       	ldd	r22, Y+49	; 0x31
    2a2c:	7a a9       	ldd	r23, Y+50	; 0x32
    2a2e:	8b a9       	ldd	r24, Y+51	; 0x33
    2a30:	9c a9       	ldd	r25, Y+52	; 0x34
    2a32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a36:	dc 01       	movw	r26, r24
    2a38:	cb 01       	movw	r24, r22
    2a3a:	98 ab       	std	Y+48, r25	; 0x30
    2a3c:	8f a7       	std	Y+47, r24	; 0x2f
    2a3e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a40:	98 a9       	ldd	r25, Y+48	; 0x30
    2a42:	9c a7       	std	Y+44, r25	; 0x2c
    2a44:	8b a7       	std	Y+43, r24	; 0x2b
    2a46:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a48:	9c a5       	ldd	r25, Y+44	; 0x2c
    2a4a:	01 97       	sbiw	r24, 0x01	; 1
    2a4c:	f1 f7       	brne	.-4      	; 0x2a4a <Task3+0x21e>
    2a4e:	9c a7       	std	Y+44, r25	; 0x2c
    2a50:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(10);
		HSSD_voidDisplayNumberByCom(MSSD2,COM2);
    2a52:	80 91 7f 00 	lds	r24, 0x007F
    2a56:	62 e0       	ldi	r22, 0x02	; 2
    2a58:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    2a5c:	80 e0       	ldi	r24, 0x00	; 0
    2a5e:	90 e0       	ldi	r25, 0x00	; 0
    2a60:	a0 e2       	ldi	r26, 0x20	; 32
    2a62:	b1 e4       	ldi	r27, 0x41	; 65
    2a64:	8f a3       	std	Y+39, r24	; 0x27
    2a66:	98 a7       	std	Y+40, r25	; 0x28
    2a68:	a9 a7       	std	Y+41, r26	; 0x29
    2a6a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a6c:	6f a1       	ldd	r22, Y+39	; 0x27
    2a6e:	78 a5       	ldd	r23, Y+40	; 0x28
    2a70:	89 a5       	ldd	r24, Y+41	; 0x29
    2a72:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a74:	20 e0       	ldi	r18, 0x00	; 0
    2a76:	30 e0       	ldi	r19, 0x00	; 0
    2a78:	4a ef       	ldi	r20, 0xFA	; 250
    2a7a:	54 e4       	ldi	r21, 0x44	; 68
    2a7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a80:	dc 01       	movw	r26, r24
    2a82:	cb 01       	movw	r24, r22
    2a84:	8b a3       	std	Y+35, r24	; 0x23
    2a86:	9c a3       	std	Y+36, r25	; 0x24
    2a88:	ad a3       	std	Y+37, r26	; 0x25
    2a8a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a8c:	6b a1       	ldd	r22, Y+35	; 0x23
    2a8e:	7c a1       	ldd	r23, Y+36	; 0x24
    2a90:	8d a1       	ldd	r24, Y+37	; 0x25
    2a92:	9e a1       	ldd	r25, Y+38	; 0x26
    2a94:	20 e0       	ldi	r18, 0x00	; 0
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	40 e8       	ldi	r20, 0x80	; 128
    2a9a:	5f e3       	ldi	r21, 0x3F	; 63
    2a9c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2aa0:	88 23       	and	r24, r24
    2aa2:	2c f4       	brge	.+10     	; 0x2aae <Task3+0x282>
		__ticks = 1;
    2aa4:	81 e0       	ldi	r24, 0x01	; 1
    2aa6:	90 e0       	ldi	r25, 0x00	; 0
    2aa8:	9a a3       	std	Y+34, r25	; 0x22
    2aaa:	89 a3       	std	Y+33, r24	; 0x21
    2aac:	3f c0       	rjmp	.+126    	; 0x2b2c <Task3+0x300>
	else if (__tmp > 65535)
    2aae:	6b a1       	ldd	r22, Y+35	; 0x23
    2ab0:	7c a1       	ldd	r23, Y+36	; 0x24
    2ab2:	8d a1       	ldd	r24, Y+37	; 0x25
    2ab4:	9e a1       	ldd	r25, Y+38	; 0x26
    2ab6:	20 e0       	ldi	r18, 0x00	; 0
    2ab8:	3f ef       	ldi	r19, 0xFF	; 255
    2aba:	4f e7       	ldi	r20, 0x7F	; 127
    2abc:	57 e4       	ldi	r21, 0x47	; 71
    2abe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2ac2:	18 16       	cp	r1, r24
    2ac4:	4c f5       	brge	.+82     	; 0x2b18 <Task3+0x2ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ac6:	6f a1       	ldd	r22, Y+39	; 0x27
    2ac8:	78 a5       	ldd	r23, Y+40	; 0x28
    2aca:	89 a5       	ldd	r24, Y+41	; 0x29
    2acc:	9a a5       	ldd	r25, Y+42	; 0x2a
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	40 e2       	ldi	r20, 0x20	; 32
    2ad4:	51 e4       	ldi	r21, 0x41	; 65
    2ad6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ada:	dc 01       	movw	r26, r24
    2adc:	cb 01       	movw	r24, r22
    2ade:	bc 01       	movw	r22, r24
    2ae0:	cd 01       	movw	r24, r26
    2ae2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ae6:	dc 01       	movw	r26, r24
    2ae8:	cb 01       	movw	r24, r22
    2aea:	9a a3       	std	Y+34, r25	; 0x22
    2aec:	89 a3       	std	Y+33, r24	; 0x21
    2aee:	0f c0       	rjmp	.+30     	; 0x2b0e <Task3+0x2e2>
    2af0:	88 ec       	ldi	r24, 0xC8	; 200
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	98 a3       	std	Y+32, r25	; 0x20
    2af6:	8f 8f       	std	Y+31, r24	; 0x1f
    2af8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2afa:	98 a1       	ldd	r25, Y+32	; 0x20
    2afc:	01 97       	sbiw	r24, 0x01	; 1
    2afe:	f1 f7       	brne	.-4      	; 0x2afc <Task3+0x2d0>
    2b00:	98 a3       	std	Y+32, r25	; 0x20
    2b02:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b04:	89 a1       	ldd	r24, Y+33	; 0x21
    2b06:	9a a1       	ldd	r25, Y+34	; 0x22
    2b08:	01 97       	sbiw	r24, 0x01	; 1
    2b0a:	9a a3       	std	Y+34, r25	; 0x22
    2b0c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b0e:	89 a1       	ldd	r24, Y+33	; 0x21
    2b10:	9a a1       	ldd	r25, Y+34	; 0x22
    2b12:	00 97       	sbiw	r24, 0x00	; 0
    2b14:	69 f7       	brne	.-38     	; 0x2af0 <Task3+0x2c4>
    2b16:	14 c0       	rjmp	.+40     	; 0x2b40 <Task3+0x314>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b18:	6b a1       	ldd	r22, Y+35	; 0x23
    2b1a:	7c a1       	ldd	r23, Y+36	; 0x24
    2b1c:	8d a1       	ldd	r24, Y+37	; 0x25
    2b1e:	9e a1       	ldd	r25, Y+38	; 0x26
    2b20:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b24:	dc 01       	movw	r26, r24
    2b26:	cb 01       	movw	r24, r22
    2b28:	9a a3       	std	Y+34, r25	; 0x22
    2b2a:	89 a3       	std	Y+33, r24	; 0x21
    2b2c:	89 a1       	ldd	r24, Y+33	; 0x21
    2b2e:	9a a1       	ldd	r25, Y+34	; 0x22
    2b30:	9e 8f       	std	Y+30, r25	; 0x1e
    2b32:	8d 8f       	std	Y+29, r24	; 0x1d
    2b34:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b36:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b38:	01 97       	sbiw	r24, 0x01	; 1
    2b3a:	f1 f7       	brne	.-4      	; 0x2b38 <Task3+0x30c>
    2b3c:	9e 8f       	std	Y+30, r25	; 0x1e
    2b3e:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(10);
		HSSD_voidDisplayNumberByCom(MSSD4,COM4);
    2b40:	80 91 69 00 	lds	r24, 0x0069
    2b44:	66 e0       	ldi	r22, 0x06	; 6
    2b46:	0e 94 07 0b 	call	0x160e	; 0x160e <HSSD_voidDisplayNumberByCom>
    2b4a:	80 e0       	ldi	r24, 0x00	; 0
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	a0 e2       	ldi	r26, 0x20	; 32
    2b50:	b1 e4       	ldi	r27, 0x41	; 65
    2b52:	89 8f       	std	Y+25, r24	; 0x19
    2b54:	9a 8f       	std	Y+26, r25	; 0x1a
    2b56:	ab 8f       	std	Y+27, r26	; 0x1b
    2b58:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b5a:	69 8d       	ldd	r22, Y+25	; 0x19
    2b5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b60:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b62:	20 e0       	ldi	r18, 0x00	; 0
    2b64:	30 e0       	ldi	r19, 0x00	; 0
    2b66:	4a ef       	ldi	r20, 0xFA	; 250
    2b68:	54 e4       	ldi	r21, 0x44	; 68
    2b6a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b6e:	dc 01       	movw	r26, r24
    2b70:	cb 01       	movw	r24, r22
    2b72:	8d 8b       	std	Y+21, r24	; 0x15
    2b74:	9e 8b       	std	Y+22, r25	; 0x16
    2b76:	af 8b       	std	Y+23, r26	; 0x17
    2b78:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b7a:	6d 89       	ldd	r22, Y+21	; 0x15
    2b7c:	7e 89       	ldd	r23, Y+22	; 0x16
    2b7e:	8f 89       	ldd	r24, Y+23	; 0x17
    2b80:	98 8d       	ldd	r25, Y+24	; 0x18
    2b82:	20 e0       	ldi	r18, 0x00	; 0
    2b84:	30 e0       	ldi	r19, 0x00	; 0
    2b86:	40 e8       	ldi	r20, 0x80	; 128
    2b88:	5f e3       	ldi	r21, 0x3F	; 63
    2b8a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2b8e:	88 23       	and	r24, r24
    2b90:	2c f4       	brge	.+10     	; 0x2b9c <Task3+0x370>
		__ticks = 1;
    2b92:	81 e0       	ldi	r24, 0x01	; 1
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	9c 8b       	std	Y+20, r25	; 0x14
    2b98:	8b 8b       	std	Y+19, r24	; 0x13
    2b9a:	3f c0       	rjmp	.+126    	; 0x2c1a <Task3+0x3ee>
	else if (__tmp > 65535)
    2b9c:	6d 89       	ldd	r22, Y+21	; 0x15
    2b9e:	7e 89       	ldd	r23, Y+22	; 0x16
    2ba0:	8f 89       	ldd	r24, Y+23	; 0x17
    2ba2:	98 8d       	ldd	r25, Y+24	; 0x18
    2ba4:	20 e0       	ldi	r18, 0x00	; 0
    2ba6:	3f ef       	ldi	r19, 0xFF	; 255
    2ba8:	4f e7       	ldi	r20, 0x7F	; 127
    2baa:	57 e4       	ldi	r21, 0x47	; 71
    2bac:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2bb0:	18 16       	cp	r1, r24
    2bb2:	4c f5       	brge	.+82     	; 0x2c06 <Task3+0x3da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bb4:	69 8d       	ldd	r22, Y+25	; 0x19
    2bb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2bb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bbc:	20 e0       	ldi	r18, 0x00	; 0
    2bbe:	30 e0       	ldi	r19, 0x00	; 0
    2bc0:	40 e2       	ldi	r20, 0x20	; 32
    2bc2:	51 e4       	ldi	r21, 0x41	; 65
    2bc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bc8:	dc 01       	movw	r26, r24
    2bca:	cb 01       	movw	r24, r22
    2bcc:	bc 01       	movw	r22, r24
    2bce:	cd 01       	movw	r24, r26
    2bd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2bd4:	dc 01       	movw	r26, r24
    2bd6:	cb 01       	movw	r24, r22
    2bd8:	9c 8b       	std	Y+20, r25	; 0x14
    2bda:	8b 8b       	std	Y+19, r24	; 0x13
    2bdc:	0f c0       	rjmp	.+30     	; 0x2bfc <Task3+0x3d0>
    2bde:	88 ec       	ldi	r24, 0xC8	; 200
    2be0:	90 e0       	ldi	r25, 0x00	; 0
    2be2:	9a 8b       	std	Y+18, r25	; 0x12
    2be4:	89 8b       	std	Y+17, r24	; 0x11
    2be6:	89 89       	ldd	r24, Y+17	; 0x11
    2be8:	9a 89       	ldd	r25, Y+18	; 0x12
    2bea:	01 97       	sbiw	r24, 0x01	; 1
    2bec:	f1 f7       	brne	.-4      	; 0x2bea <Task3+0x3be>
    2bee:	9a 8b       	std	Y+18, r25	; 0x12
    2bf0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bf2:	8b 89       	ldd	r24, Y+19	; 0x13
    2bf4:	9c 89       	ldd	r25, Y+20	; 0x14
    2bf6:	01 97       	sbiw	r24, 0x01	; 1
    2bf8:	9c 8b       	std	Y+20, r25	; 0x14
    2bfa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bfc:	8b 89       	ldd	r24, Y+19	; 0x13
    2bfe:	9c 89       	ldd	r25, Y+20	; 0x14
    2c00:	00 97       	sbiw	r24, 0x00	; 0
    2c02:	69 f7       	brne	.-38     	; 0x2bde <Task3+0x3b2>
    2c04:	14 c0       	rjmp	.+40     	; 0x2c2e <Task3+0x402>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c06:	6d 89       	ldd	r22, Y+21	; 0x15
    2c08:	7e 89       	ldd	r23, Y+22	; 0x16
    2c0a:	8f 89       	ldd	r24, Y+23	; 0x17
    2c0c:	98 8d       	ldd	r25, Y+24	; 0x18
    2c0e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c12:	dc 01       	movw	r26, r24
    2c14:	cb 01       	movw	r24, r22
    2c16:	9c 8b       	std	Y+20, r25	; 0x14
    2c18:	8b 8b       	std	Y+19, r24	; 0x13
    2c1a:	8b 89       	ldd	r24, Y+19	; 0x13
    2c1c:	9c 89       	ldd	r25, Y+20	; 0x14
    2c1e:	98 8b       	std	Y+16, r25	; 0x10
    2c20:	8f 87       	std	Y+15, r24	; 0x0f
    2c22:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c24:	98 89       	ldd	r25, Y+16	; 0x10
    2c26:	01 97       	sbiw	r24, 0x01	; 1
    2c28:	f1 f7       	brne	.-4      	; 0x2c26 <Task3+0x3fa>
    2c2a:	98 8b       	std	Y+16, r25	; 0x10
    2c2c:	8f 87       	std	Y+15, r24	; 0x0f

void Task3(void){
	// 2 Seven segments counting up to 99 and 2 seven segments counting down from 99
	//COM1,2 counting up COM3,4 counting down

	for(u8 i=0;i<=100;i++){
    2c2e:	de 01       	movw	r26, r28
    2c30:	a9 5b       	subi	r26, 0xB9	; 185
    2c32:	bf 4f       	sbci	r27, 0xFF	; 255
    2c34:	fe 01       	movw	r30, r28
    2c36:	e9 5b       	subi	r30, 0xB9	; 185
    2c38:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3a:	80 81       	ld	r24, Z
    2c3c:	8f 5f       	subi	r24, 0xFF	; 255
    2c3e:	8c 93       	st	X, r24
    2c40:	fe 01       	movw	r30, r28
    2c42:	e9 5b       	subi	r30, 0xB9	; 185
    2c44:	ff 4f       	sbci	r31, 0xFF	; 255
    2c46:	80 81       	ld	r24, Z
    2c48:	85 36       	cpi	r24, 0x65	; 101
    2c4a:	08 f4       	brcc	.+2      	; 0x2c4e <Task3+0x422>
    2c4c:	01 ce       	rjmp	.-1022   	; 0x2850 <Task3+0x24>
		HSSD_voidDisplayNumberByCom(MSSD2,COM2);
		_delay_ms(10);
		HSSD_voidDisplayNumberByCom(MSSD4,COM4);
		_delay_ms(10);
	}
	LSSD1++;
    2c4e:	80 91 7e 00 	lds	r24, 0x007E
    2c52:	8f 5f       	subi	r24, 0xFF	; 255
    2c54:	80 93 7e 00 	sts	0x007E, r24
	LSSD3--;
    2c58:	80 91 68 00 	lds	r24, 0x0068
    2c5c:	81 50       	subi	r24, 0x01	; 1
    2c5e:	80 93 68 00 	sts	0x0068, r24

	if((LSSD1 > 9 && MSSD2<=9) &&  (LSSD3<0&&MSSD4>=0 ))
    2c62:	80 91 7e 00 	lds	r24, 0x007E
    2c66:	8a 30       	cpi	r24, 0x0A	; 10
    2c68:	e0 f0       	brcs	.+56     	; 0x2ca2 <Task3+0x476>
    2c6a:	80 91 7f 00 	lds	r24, 0x007F
    2c6e:	8a 30       	cpi	r24, 0x0A	; 10
    2c70:	c0 f4       	brcc	.+48     	; 0x2ca2 <Task3+0x476>
    2c72:	80 91 68 00 	lds	r24, 0x0068
    2c76:	88 23       	and	r24, r24
    2c78:	a4 f4       	brge	.+40     	; 0x2ca2 <Task3+0x476>
    2c7a:	80 91 69 00 	lds	r24, 0x0069
    2c7e:	88 23       	and	r24, r24
    2c80:	84 f0       	brlt	.+32     	; 0x2ca2 <Task3+0x476>
	{
		LSSD1 = 0;
    2c82:	10 92 7e 00 	sts	0x007E, r1
		LSSD3=9;
    2c86:	89 e0       	ldi	r24, 0x09	; 9
    2c88:	80 93 68 00 	sts	0x0068, r24
		MSSD2++;
    2c8c:	80 91 7f 00 	lds	r24, 0x007F
    2c90:	8f 5f       	subi	r24, 0xFF	; 255
    2c92:	80 93 7f 00 	sts	0x007F, r24
		MSSD4--;
    2c96:	80 91 69 00 	lds	r24, 0x0069
    2c9a:	81 50       	subi	r24, 0x01	; 1
    2c9c:	80 93 69 00 	sts	0x0069, r24
    2ca0:	12 c0       	rjmp	.+36     	; 0x2cc6 <Task3+0x49a>
	}
	else if((MSSD2>9)&&(MSSD4<0)){
    2ca2:	80 91 7f 00 	lds	r24, 0x007F
    2ca6:	8a 30       	cpi	r24, 0x0A	; 10
    2ca8:	70 f0       	brcs	.+28     	; 0x2cc6 <Task3+0x49a>
    2caa:	80 91 69 00 	lds	r24, 0x0069
    2cae:	88 23       	and	r24, r24
    2cb0:	54 f4       	brge	.+20     	; 0x2cc6 <Task3+0x49a>
		LSSD1 = 0;
    2cb2:	10 92 7e 00 	sts	0x007E, r1
		LSSD3=9;
    2cb6:	89 e0       	ldi	r24, 0x09	; 9
    2cb8:	80 93 68 00 	sts	0x0068, r24
		MSSD2 = 0;
    2cbc:	10 92 7f 00 	sts	0x007F, r1
		MSSD4=9;
    2cc0:	89 e0       	ldi	r24, 0x09	; 9
    2cc2:	80 93 69 00 	sts	0x0069, r24
    2cc6:	80 e0       	ldi	r24, 0x00	; 0
    2cc8:	90 e0       	ldi	r25, 0x00	; 0
    2cca:	a0 e2       	ldi	r26, 0x20	; 32
    2ccc:	b2 e4       	ldi	r27, 0x42	; 66
    2cce:	8b 87       	std	Y+11, r24	; 0x0b
    2cd0:	9c 87       	std	Y+12, r25	; 0x0c
    2cd2:	ad 87       	std	Y+13, r26	; 0x0d
    2cd4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cda:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cde:	20 e0       	ldi	r18, 0x00	; 0
    2ce0:	30 e0       	ldi	r19, 0x00	; 0
    2ce2:	4a ef       	ldi	r20, 0xFA	; 250
    2ce4:	54 e4       	ldi	r21, 0x44	; 68
    2ce6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cea:	dc 01       	movw	r26, r24
    2cec:	cb 01       	movw	r24, r22
    2cee:	8f 83       	std	Y+7, r24	; 0x07
    2cf0:	98 87       	std	Y+8, r25	; 0x08
    2cf2:	a9 87       	std	Y+9, r26	; 0x09
    2cf4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2cf6:	6f 81       	ldd	r22, Y+7	; 0x07
    2cf8:	78 85       	ldd	r23, Y+8	; 0x08
    2cfa:	89 85       	ldd	r24, Y+9	; 0x09
    2cfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cfe:	20 e0       	ldi	r18, 0x00	; 0
    2d00:	30 e0       	ldi	r19, 0x00	; 0
    2d02:	40 e8       	ldi	r20, 0x80	; 128
    2d04:	5f e3       	ldi	r21, 0x3F	; 63
    2d06:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2d0a:	88 23       	and	r24, r24
    2d0c:	2c f4       	brge	.+10     	; 0x2d18 <Task3+0x4ec>
		__ticks = 1;
    2d0e:	81 e0       	ldi	r24, 0x01	; 1
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	9e 83       	std	Y+6, r25	; 0x06
    2d14:	8d 83       	std	Y+5, r24	; 0x05
    2d16:	3f c0       	rjmp	.+126    	; 0x2d96 <Task3+0x56a>
	else if (__tmp > 65535)
    2d18:	6f 81       	ldd	r22, Y+7	; 0x07
    2d1a:	78 85       	ldd	r23, Y+8	; 0x08
    2d1c:	89 85       	ldd	r24, Y+9	; 0x09
    2d1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d20:	20 e0       	ldi	r18, 0x00	; 0
    2d22:	3f ef       	ldi	r19, 0xFF	; 255
    2d24:	4f e7       	ldi	r20, 0x7F	; 127
    2d26:	57 e4       	ldi	r21, 0x47	; 71
    2d28:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d2c:	18 16       	cp	r1, r24
    2d2e:	4c f5       	brge	.+82     	; 0x2d82 <Task3+0x556>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d30:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d32:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d34:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d36:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d38:	20 e0       	ldi	r18, 0x00	; 0
    2d3a:	30 e0       	ldi	r19, 0x00	; 0
    2d3c:	40 e2       	ldi	r20, 0x20	; 32
    2d3e:	51 e4       	ldi	r21, 0x41	; 65
    2d40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d44:	dc 01       	movw	r26, r24
    2d46:	cb 01       	movw	r24, r22
    2d48:	bc 01       	movw	r22, r24
    2d4a:	cd 01       	movw	r24, r26
    2d4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d50:	dc 01       	movw	r26, r24
    2d52:	cb 01       	movw	r24, r22
    2d54:	9e 83       	std	Y+6, r25	; 0x06
    2d56:	8d 83       	std	Y+5, r24	; 0x05
    2d58:	0f c0       	rjmp	.+30     	; 0x2d78 <Task3+0x54c>
    2d5a:	88 ec       	ldi	r24, 0xC8	; 200
    2d5c:	90 e0       	ldi	r25, 0x00	; 0
    2d5e:	9c 83       	std	Y+4, r25	; 0x04
    2d60:	8b 83       	std	Y+3, r24	; 0x03
    2d62:	8b 81       	ldd	r24, Y+3	; 0x03
    2d64:	9c 81       	ldd	r25, Y+4	; 0x04
    2d66:	01 97       	sbiw	r24, 0x01	; 1
    2d68:	f1 f7       	brne	.-4      	; 0x2d66 <Task3+0x53a>
    2d6a:	9c 83       	std	Y+4, r25	; 0x04
    2d6c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d6e:	8d 81       	ldd	r24, Y+5	; 0x05
    2d70:	9e 81       	ldd	r25, Y+6	; 0x06
    2d72:	01 97       	sbiw	r24, 0x01	; 1
    2d74:	9e 83       	std	Y+6, r25	; 0x06
    2d76:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d78:	8d 81       	ldd	r24, Y+5	; 0x05
    2d7a:	9e 81       	ldd	r25, Y+6	; 0x06
    2d7c:	00 97       	sbiw	r24, 0x00	; 0
    2d7e:	69 f7       	brne	.-38     	; 0x2d5a <Task3+0x52e>
    2d80:	14 c0       	rjmp	.+40     	; 0x2daa <Task3+0x57e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d82:	6f 81       	ldd	r22, Y+7	; 0x07
    2d84:	78 85       	ldd	r23, Y+8	; 0x08
    2d86:	89 85       	ldd	r24, Y+9	; 0x09
    2d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d8e:	dc 01       	movw	r26, r24
    2d90:	cb 01       	movw	r24, r22
    2d92:	9e 83       	std	Y+6, r25	; 0x06
    2d94:	8d 83       	std	Y+5, r24	; 0x05
    2d96:	8d 81       	ldd	r24, Y+5	; 0x05
    2d98:	9e 81       	ldd	r25, Y+6	; 0x06
    2d9a:	9a 83       	std	Y+2, r25	; 0x02
    2d9c:	89 83       	std	Y+1, r24	; 0x01
    2d9e:	89 81       	ldd	r24, Y+1	; 0x01
    2da0:	9a 81       	ldd	r25, Y+2	; 0x02
    2da2:	01 97       	sbiw	r24, 0x01	; 1
    2da4:	f1 f7       	brne	.-4      	; 0x2da2 <Task3+0x576>
    2da6:	9a 83       	std	Y+2, r25	; 0x02
    2da8:	89 83       	std	Y+1, r24	; 0x01
	}
	_delay_ms(40);
}
    2daa:	c9 5b       	subi	r28, 0xB9	; 185
    2dac:	df 4f       	sbci	r29, 0xFF	; 255
    2dae:	0f b6       	in	r0, 0x3f	; 63
    2db0:	f8 94       	cli
    2db2:	de bf       	out	0x3e, r29	; 62
    2db4:	0f be       	out	0x3f, r0	; 63
    2db6:	cd bf       	out	0x3d, r28	; 61
    2db8:	cf 91       	pop	r28
    2dba:	df 91       	pop	r29
    2dbc:	1f 91       	pop	r17
    2dbe:	0f 91       	pop	r16
    2dc0:	08 95       	ret

00002dc2 <__prologue_saves__>:
    2dc2:	2f 92       	push	r2
    2dc4:	3f 92       	push	r3
    2dc6:	4f 92       	push	r4
    2dc8:	5f 92       	push	r5
    2dca:	6f 92       	push	r6
    2dcc:	7f 92       	push	r7
    2dce:	8f 92       	push	r8
    2dd0:	9f 92       	push	r9
    2dd2:	af 92       	push	r10
    2dd4:	bf 92       	push	r11
    2dd6:	cf 92       	push	r12
    2dd8:	df 92       	push	r13
    2dda:	ef 92       	push	r14
    2ddc:	ff 92       	push	r15
    2dde:	0f 93       	push	r16
    2de0:	1f 93       	push	r17
    2de2:	cf 93       	push	r28
    2de4:	df 93       	push	r29
    2de6:	cd b7       	in	r28, 0x3d	; 61
    2de8:	de b7       	in	r29, 0x3e	; 62
    2dea:	ca 1b       	sub	r28, r26
    2dec:	db 0b       	sbc	r29, r27
    2dee:	0f b6       	in	r0, 0x3f	; 63
    2df0:	f8 94       	cli
    2df2:	de bf       	out	0x3e, r29	; 62
    2df4:	0f be       	out	0x3f, r0	; 63
    2df6:	cd bf       	out	0x3d, r28	; 61
    2df8:	09 94       	ijmp

00002dfa <__epilogue_restores__>:
    2dfa:	2a 88       	ldd	r2, Y+18	; 0x12
    2dfc:	39 88       	ldd	r3, Y+17	; 0x11
    2dfe:	48 88       	ldd	r4, Y+16	; 0x10
    2e00:	5f 84       	ldd	r5, Y+15	; 0x0f
    2e02:	6e 84       	ldd	r6, Y+14	; 0x0e
    2e04:	7d 84       	ldd	r7, Y+13	; 0x0d
    2e06:	8c 84       	ldd	r8, Y+12	; 0x0c
    2e08:	9b 84       	ldd	r9, Y+11	; 0x0b
    2e0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    2e0c:	b9 84       	ldd	r11, Y+9	; 0x09
    2e0e:	c8 84       	ldd	r12, Y+8	; 0x08
    2e10:	df 80       	ldd	r13, Y+7	; 0x07
    2e12:	ee 80       	ldd	r14, Y+6	; 0x06
    2e14:	fd 80       	ldd	r15, Y+5	; 0x05
    2e16:	0c 81       	ldd	r16, Y+4	; 0x04
    2e18:	1b 81       	ldd	r17, Y+3	; 0x03
    2e1a:	aa 81       	ldd	r26, Y+2	; 0x02
    2e1c:	b9 81       	ldd	r27, Y+1	; 0x01
    2e1e:	ce 0f       	add	r28, r30
    2e20:	d1 1d       	adc	r29, r1
    2e22:	0f b6       	in	r0, 0x3f	; 63
    2e24:	f8 94       	cli
    2e26:	de bf       	out	0x3e, r29	; 62
    2e28:	0f be       	out	0x3f, r0	; 63
    2e2a:	cd bf       	out	0x3d, r28	; 61
    2e2c:	ed 01       	movw	r28, r26
    2e2e:	08 95       	ret

00002e30 <_exit>:
    2e30:	f8 94       	cli

00002e32 <__stop_program>:
    2e32:	ff cf       	rjmp	.-2      	; 0x2e32 <__stop_program>
